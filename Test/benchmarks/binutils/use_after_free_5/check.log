../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   21 |   memcpy (p, ptr, len);
      |   ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
    7 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   21 |   memcpy (p, ptr, len);
      |   ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   37 |   p = args + strlen (args);
      |              ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: implicit declaration of function ‘isspace’ [-Wimplicit-function-declaration]
   41 |       while (p > args && isspace (p[-1]))
      |                          ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:8:1: note: include ‘<ctype.h>’ or provide a declaration of ‘isspace’
    7 | #include "../include/binutils.h"
  +++ |+#include <ctype.h>
    8 | 
In file included from ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:6:
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: note: in expansion of macro ‘xstrdup’
   52 |   return xstrdup (args);        /* allocation site */
      |          ^~~~~~~
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: note: in expansion of macro ‘xstrdup’
   52 |   return xstrdup (args);        /* allocation site */
      |          ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:68:19: warning: implicit declaration of function ‘find_attach_target’ [-Wimplicit-function-declaration]
   68 |   attach_target = find_attach_target ();
      |                   ^~~~~~~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:68:17: warning: assignment to ‘struct target_ops *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   68 |   attach_target = find_attach_target ();
      |                 ^
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:7: warning: implicit declaration of function ‘target_can_async_p’ [-Wimplicit-function-declaration]
   79 |   if (target_can_async_p ())
      |       ^~~~~~~~~~~~~~~~~~
In file included from ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:6:
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:85:21: note: in expansion of macro ‘xstrdup’
   85 |           a->args = xstrdup (args);     /* use-after-free */
      |                     ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: implicit declaration of function ‘attach_command_post_wait’ [-Wimplicit-function-declaration]
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 49%)
 phase parsing                      :   0.03 ( 75%)   0.01 ( 50%)   0.04 ( 67%)  1119k ( 43%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 50%)   0.02 ( 33%)   205k (  8%)
 callgraph ipa passes               :   0.01 ( 25%)   0.01 ( 50%)   0.02 ( 33%)   118k (  5%)
 ipa lto gimple out                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1448  (  0%)
 ipa free lang data                 :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)  1960  (  0%)
 preprocessing                      :   0.02 ( 50%)   0.01 ( 50%)   0.02 ( 33%)   365k ( 14%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   595k ( 23%)
 parser enumerator list             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    27k (  1%)
 parser function body               :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    78k (  3%)
 tree SSA other                     :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1816  (  0%)
 dominance computation              :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.04          0.02          0.06         2633k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2215k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------attach_command--
node:= 4 
 	next_branch :=3
	next_branch :=5
=======node_fun:attach_command=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------strip_bg_char--
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
addr_expraddr_expraddr_expraddr_expraddr_expr------find_attach_target--
addr_expraddr_expraddr_expraddr_expraddr_expr------do_cleanups--
addr_expraddr_expraddr_expraddr_expraddr_expr------target_can_async_p--
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------attach_command_post_wait--
=======node_fun:strip_bg_char=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=13
node:= 5 
 	next_branch :=6
	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=7
	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------isspace--
node:= 10 
 	next_branch :=11
	next_branch :=13
node:= 11 
 	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------savestring--
node:= 12 
 	next_branch :=13
=======node_fun:savestring=========
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
=======node_fun:make_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup--
=======node_fun:make_my_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup2--
=======node_fun:make_my_cleanup2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:do_cleanups=========
addr_expraddr_expraddr_expraddr_expraddr_expr------do_my_cleanups--
=======node_fun:do_my_cleanups=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 34 
===============The second stage : Mapping stmt=================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
# .MEM_18 = VDEF <.MEM_17>
find_attach_target ();
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
# .MEM_20 = VDEF <.MEM_19>
_1 = target_can_async_p ();
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
# .MEM_27 = VDEF <.MEM_26>
_18 = strdup (args_12(D));
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
===============The second stage : Program slicing=================
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
=============== *this point analyzable =================
attach_command (_4, i_5);
========================================================
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
=============== *this point analyzable =================
attach_command (_4, i_5);
========================================================
=============== *this point analyzable =================
args_7 = strip_bg_char (args_5(D), &async_exec);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
args_7 = strip_bg_char (args_5(D), &async_exec);
========================================================
=============== *this point analyzable =================
args_7 = strip_bg_char (args_5(D), &async_exec);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
args_chain_9 = make_cleanup (free, args_7);
========================================================
=============== *this point analyzable =================
args_chain_9 = make_cleanup (free, args_7);
========================================================
=============== *this point analyzable =================
_1 = target_can_async_p ();
========================================================
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
=============== *this point analyzable =================
attach_command_post_wait (args_7, from_tty_13(D), _2);
========================================================
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
=============== *this point analyzable =================
attach_command_post_wait (args_7, from_tty_13(D), _2);
========================================================
=============== *this point analyzable =================
_2 = strlen (args_12(D));
========================================================
=============== *this point analyzable =================
_2 = strlen (args_12(D));
========================================================
=============== *this point analyzable =================
_6 = isspace (_5);
========================================================
=============== *this point analyzable =================
_6 = isspace (_5);
========================================================
=============== *this point analyzable =================
_23 = savestring (args_12(D), _8);
========================================================
=============== *this point analyzable =================
_23 = savestring (args_12(D), _8);
========================================================
=============== *this point analyzable =================
_18 = strdup (args_12(D));
========================================================
=============== *this point analyzable =================
p_6 = malloc (_1);
========================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
=============== *this point analyzable =================
memcpy (p_6, ptr_7(D), len_3(D));
========================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
=============== *this point analyzable =================
memcpy (p_6, ptr_7(D), len_3(D));
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
new_4 = malloc (32);
========================================================
=============== *this point analyzable =================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"cleanup!!!!! ========="[0]);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:attach_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path attach_command  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:attach_command_post_wait========= [0m
[40;33m =======POP node_fun stack:attach_command_post_wait========= [0m
[40;42m =======pre add _ fucntion:target_can_async_p========= [0m
[40;33m =======POP node_fun stack:target_can_async_p========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_attach_target========= [0m
[40;33m =======POP node_fun stack:find_attach_target========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/use_after_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:strip_bg_char========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path strip_bg_char  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path savestring  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:savestring========= [0m
[40;42m =======start_check_funciton:savestring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = len_3(D) + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:savestring========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strip_bg_char========= [0m
[40;42m =======start_check_funciton:strip_bg_char========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================== pre trace ptable ================== 
trace fucntion name:isspace 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
is Other function isspace
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================== pre trace ptable ================== 
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
is Other function savestring
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = *args_12(D);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
# .MEM_27 = VDEF <.MEM_26>
_18 = strdup (args_12(D));
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strip_bg_char========= [0m
[40;42m =======pre_check_funciton:attach_command========= [0m
[40;42m =======start_check_funciton:attach_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>

 ================== pre trace ptable ================== 
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_24>
return _10;
In function ‘main’:
lto1: warning: use location
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
is Other function strip_bg_char
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
_2 = async_exec;
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# VUSE <.MEM_20>
_2 = async_exec;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
args_chain_9 = make_cleanup (free, args_7);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:target_can_async_p 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>
is Other function target_can_async_p
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:6: warning: use location
   79 |   if (target_can_async_p ())
      |      ^
# .MEM_20 = VDEF <.MEM_19>
_1 = target_can_async_p ();
_1 = target_can_async_p ();
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:7: warning: use location
   79 |   if (target_can_async_p ())
      |       ^
this stmt call this function :target_can_async_p
trace fucntion name:target_can_async_p 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:attach_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
attach_command (_4, i_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: use location
   97 |                 attach_command (argv[i], i);
      |                 ^
this stmt call this function :attach_command
trace fucntion name:attach_command 
[40;44m =======trace_function_path attach_command  function_call count: 6 level :0========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:attach_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:attach_command_post_wait========= [0m
[40;46m =======add node_fun stack:attach_command_post_wait========= [0m
[40;42m =======pre add _ fucntion:target_can_async_p========= [0m
[40;46m =======add node_fun stack:target_can_async_p========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_attach_target========= [0m
[40;46m =======add node_fun stack:find_attach_target========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strip_bg_char========= [0m
strip_bg_char this fucntion return value is heap-object 
attach_command this fucntion return value is heap-object strip_bg_char
[40;46m =======add node_fun stack:strip_bg_char========= [0m
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
attach_command (_4, i_5);
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: use location
   97 |                 attach_command (argv[i], i);
      |                 ^
this stmt call this function :attach_command
trace fucntion name:attach_command 
[40;44m =======trace_function_path attach_command  function_call count: 6 level :0========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:attach_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:attach_command_post_wait========= [0m
[40;46m =======add node_fun stack:attach_command_post_wait========= [0m
[40;42m =======pre add _ fucntion:target_can_async_p========= [0m
[40;46m =======add node_fun stack:target_can_async_p========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_attach_target========= [0m
[40;46m =======add node_fun stack:find_attach_target========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strip_bg_char========= [0m
strip_bg_char this fucntion return value is heap-object 
attach_command this fucntion return value is heap-object strip_bg_char
[40;46m =======add node_fun stack:strip_bg_char========= [0m
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :1========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456708
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _4 = *_3;
    version:4
    ptr-info 0x7f8b15f79558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (i_5 < argc_8(D))
In function ‘main’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:96:26: warning: use location
   96 |         for(int i = 1; i < argc; i++)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_11 = i_5 + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:96:35: warning: use location
   96 |         for(int i = 1; i < argc; i++)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_5 = PHI <1(2), i_11(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
attach_command (_4, i_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: use location
   97 |                 attach_command (argv[i], i);
      |                 ^
this stmt call this function :attach_command
trace fucntion name:attach_command 
[40;44m =======trace_function_path attach_command  function_call count: 6 level :0========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:attach_command========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:attach_command_post_wait========= [0m
[40;46m =======add node_fun stack:attach_command_post_wait========= [0m
[40;42m =======pre add _ fucntion:target_can_async_p========= [0m
[40;46m =======add node_fun stack:target_can_async_p========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_attach_target========= [0m
[40;46m =======add node_fun stack:find_attach_target========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strip_bg_char========= [0m
strip_bg_char this fucntion return value is heap-object 
attach_command this fucntion return value is heap-object strip_bg_char
[40;46m =======add node_fun stack:strip_bg_char========= [0m
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :1========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with i ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = (long unsigned int) i_5;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:37: warning: use location
   97 |                 attach_command (argv[i], i);
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = _1 * 8;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:37: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456750
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <var_decl 0x7f8b16cf6cf0 i>
    def_stmt i_5 = PHI <1(2), i_11(3)>
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: free in this location
   97 |                 attach_command (argv[i], i);
      |                 ^

===== possiable asias =====
if (i_5 < argc_8(D))
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:96:26: warning: use location
   96 |         for(int i = 1; i < argc; i++)
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: free in this location
   97 |                 attach_command (argv[i], i);
      |                 ^

===== possiable asias =====
i_11 = i_5 + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:96:35: warning: use location
   96 |         for(int i = 1; i < argc; i++)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:97:17: warning: free in this location
   97 |                 attach_command (argv[i], i);
      |                 ^

===== possiable asias =====
i_5 = PHI <1(2), i_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:attach_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path attach_command  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:attach_command_post_wait========= [0m
[40;33m =======POP node_fun stack:attach_command_post_wait========= [0m
[40;42m =======pre add _ fucntion:target_can_async_p========= [0m
[40;33m =======POP node_fun stack:target_can_async_p========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_attach_target========= [0m
[40;33m =======POP node_fun stack:find_attach_target========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/use_after_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:strip_bg_char========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path strip_bg_char  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path savestring  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:savestring========= [0m
[40;42m =======start_check_funciton:savestring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = len_3(D) + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:savestring========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strip_bg_char========= [0m
[40;42m =======start_check_funciton:strip_bg_char========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
In function ‘attach_command’:
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================== pre trace ptable ================== 
trace fucntion name:isspace 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
is Other function isspace
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================== pre trace ptable ================== 
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
is Other function savestring
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = *args_12(D);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
# .MEM_27 = VDEF <.MEM_26>
_18 = strdup (args_12(D));
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strip_bg_char========= [0m
[40;42m =======pre_check_funciton:attach_command========= [0m
[40;42m =======start_check_funciton:attach_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b164569d8
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f8b15f79588>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b15f7f000 async_exec
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    addressable SI ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:58:7 size <integer_cst 0x7f8b1644edf8 32> unit-size <integer_cst 0x7f8b1644ee10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f8b15f6e100 attach_command> chain <var_decl 0x7f8b16cf6f30 args_chain>>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with async_exec ========= [0m
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:async_exec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>

 ================== pre trace ptable ================== 
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_24>
return _10;
In function ‘attach_command’:
lto1: warning: use location
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
is Other function strip_bg_char
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
args_7 = strip_bg_char (args_5(D), &async_exec);
args_7 = strip_bg_char (args_5(D), &async_exec);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:65:10: warning: use location
   65 |   args = strip_bg_char (args, &async_exec);
      |          ^
this stmt call this function :strip_bg_char
trace fucntion name:strip_bg_char 
[40;44m =======trace_function_path strip_bg_char  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:strip_bg_char========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
   33 |       *bg_char_p = 0;
      |                  ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:33:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
   37 |   p = args + strlen (args);
      |     ^
p_14 = args_12(D) + _2;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:5: warning: use location
p_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
   40 |       p--;
      |        ^
p_19 = p_14 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:40:8: warning: use location
p_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
p_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
   44 |       *bg_char_p = 1;
      |                  ^
*bg_char_p_15(D) = 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:44:18: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
   51 |   *bg_char_p = 0;
      |              ^
*bg_char_p_15(D) = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:51:14: warning: use location
*bg_char_p_15(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
savestring this fucntion return value is heap-object 
strip_bg_char this fucntion return value is heap-object savestring
[40;46m =======add node_fun stack:savestring========= [0m
[40;44m =======trace_function_path savestring  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
_2 = async_exec;
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a20
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <parm_decl 0x7f8b15f73200 args>
    def_stmt args_7 = strip_bg_char (args_5(D), &async_exec);
    version:7
    ptr-info 0x7f8b15f795a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# VUSE <.MEM_20>
_2 = async_exec;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f8b15f6e200 free
    type <function_type 0x7f8b15f66d20
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
            chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f66dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
    attributes <tree_list 0x7f8b15f68870
        purpose <identifier_node 0x7f8b16488e10 nothrow>
        chain <tree_list 0x7f8b15f68848
            purpose <identifier_node 0x7f8b16488e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_17 = VDEF <.MEM_16>
args_chain_9 = make_cleanup (free, args_7);
args_chain_9 = make_cleanup (free, args_7);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
args_chain_9 = make_cleanup (free, args_7);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
attach_command_post_wait (args_7, from_tty_13(D), _2);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args_chain ========= [0m
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b16cf6f30 args_chain>
    def_stmt args_chain_9 = make_cleanup (free, args_7);
    version:9
    ptr-info 0x7f8b15f795b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
In function ‘attach_command’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:target_can_async_p 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>
is Other function target_can_async_p
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:6: warning: use location
   79 |   if (target_can_async_p ())
      |      ^
# .MEM_20 = VDEF <.MEM_19>
_1 = target_can_async_p ();
_1 = target_can_async_p ();
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:7: warning: use location
   79 |   if (target_can_async_p ())
      |       ^
this stmt call this function :target_can_async_p
trace fucntion name:target_can_async_p 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456948
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _1 = target_can_async_p ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with from_tty ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456ab0
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
    var <parm_decl 0x7f8b15f73280 from_tty>
    def_stmt GIMPLE_NOP
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
this stmt call this function :attach_command_post_wait
trace fucntion name:attach_command_post_wait 

 ================== trace ================== 
trace fucntion free:0 
args_chain_9 = make_cleanup (free, args_7);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:66:16: warning: use location
   66 |   args_chain = make_cleanup (free, args);
      |                ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: use location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456990
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _2 = async_exec;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_19 = VDEF <.MEM_18>
do_cleanups (args_chain_9);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:75:3: warning: free in this location
   75 |   do_cleanups (args_chain);     /* freed */
      |   ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
attach_command_post_wait (args_7, from_tty_13(D), _2);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: use location
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:attach_command========= [0m
[40;44m =======node_fun:strip_bg_char========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strip_bg_char  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:savestring========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path savestring  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:savestring========= [0m
[40;42m =======start_check_funciton:savestring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = len_3(D) + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:savestring========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strip_bg_char========= [0m
[40;42m =======start_check_funciton:strip_bg_char========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
In function ‘strip_bg_char’:
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82090
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73400 args>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f8b15f79600>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456e10
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _2 = strlen (args_12(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456ee8
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _5 = (int) _4;
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================== pre trace ptable ================== 
trace fucntion name:isspace 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>
is Other function isspace
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b16456f30
    type <integer_type 0x7f8b164635e8 int public SI
        size <integer_cst 0x7f8b1644edf8 constant 32>
        unit-size <integer_cst 0x7f8b1644ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164635e8 precision:32 min <integer_cst 0x7f8b1644edb0 -2147483648> max <integer_cst 0x7f8b1644edc8 2147483647>
        pointer_to_this <pointer_type 0x7f8b1646a9d8>>
   
    def_stmt _6 = isspace (_5);
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---savestring-----
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b164565e8
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _8 = (long unsigned int) _7;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================== pre trace ptable ================== 
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
is Other function savestring
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = *args_12(D);
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82240
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _23 = savestring (args_12(D), _8);
    version:23
    ptr-info 0x7f8b15f79690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: use location
   37 |   p = args + strlen (args);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9 = PHI <p_19(6), p_20(7)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = p_9 - args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:36: warning: use location
   46 |         return savestring (args, p - args);
      |                                    ^
_8 = (long unsigned int) _7;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
   46 |         return savestring (args, p - args);
      |                ^
_23 = savestring (args_12(D), _8);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:46:16: warning: use location
this stmt call this function :savestring
trace fucntion name:savestring 
[40;44m =======trace_function_path savestring  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>
[40;36m ======= node_fun:savestring========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
*_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = MEM[(const char *)p_9 + -1B];
In function ‘strip_bg_char’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:36: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = (int) _4;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = isspace (_5);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: use location
this stmt call this function :isspace
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:23: warning: use location
   41 |       while (p > args && isspace (p[-1]))
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_20 = p_9 + 18446744073709551615;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:42:10: warning: use location
   42 |         p--;
      |          ^
_3 = MEM[(const char *)p_14 + -1B];
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:8: warning: use location
   38 |   if (p[-1] == '&')
      |        ^
if (_3 == 38)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:38:6: warning: use location
   38 |   if (p[-1] == '&')
      |      ^
# .MEM_27 = VDEF <.MEM_26>
_18 = strdup (args_12(D));
_18 = strdup (args_12(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: warning: use location
   52 |   return xstrdup (args);        /* allocation site */
      |          ^
this stmt call this function :strdup
_10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_1 = *args_12(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:23: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                       ^
if (_1 == 0)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:20: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |                    ^
if (args_12(D) == 0B)
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:31:6: warning: use location
   31 |   if (args == NULL || *args == '\0')
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82168
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
   
    def_stmt _18 = strdup (args_12(D));
    version:18
    ptr-info 0x7f8b15f79648>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strip_bg_char========= [0m
[40;44m =======node_fun:savestring========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path savestring  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:savestring========= [0m
[40;42m =======start_check_funciton:savestring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
In function ‘savestring’:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return p_6;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:23:10: warning: use location
   23 |   return p;
      |          ^
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
p_6 = malloc (_1);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82558
    type <pointer_type 0x7f8b15f6d000
        type <integer_type 0x7f8b15f667e0 char public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f6d000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
        pointer_to_this <pointer_type 0x7f8b15f6d2a0>>
    var <var_decl 0x7f8b15f7f6c0 p>
    def_stmt p_6 = malloc (_1);
    version:6
    ptr-info 0x7f8b15f796c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f825a0
    type <pointer_type 0x7f8b15f66930
        type <integer_type 0x7f8b15f66888 char readonly public QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
            pointer_to_this <pointer_type 0x7f8b15f66930>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73500 ptr>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f8b15f796d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_2 = p_6 + len_3(D);
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:4: warning: use location
   22 |   p[len] = 0;
      |    ^
*_2 = 0;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:22:10: warning: use location
   22 |   p[len] = 0;
      |          ^
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
memcpy (p_6, ptr_7(D), len_3(D));
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: use location
   21 |   memcpy (p, ptr, len);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = len_3(D) + 1;
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:19:22: warning: use location
   19 |   char *p = (char *) xmalloc (len + 1); /* allocation site */
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82510
    type <integer_type 0x7f8b15f66738 size_t public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>>
    var <parm_decl 0x7f8b15f73580 len>
    def_stmt GIMPLE_NOP
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82480
    type <integer_type 0x7f8b164637e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b16463738 precision:64 min <integer_cst 0x7f8b1644ee88 0> max <integer_cst 0x7f8b1644f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8b1646f7e0>>
   
    def_stmt _1 = len_3(D) + 1;
    version:1>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:savestring========= [0m
[40;44m =======node_fun:make_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/use_after_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f8b16cf6b40 cleanup_chain
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    addressable static unsigned DI ./benchmarks/binutils/use_after_free_5/../include/common.h:49:24 size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c> initial <error_mark 0x7f8b1644eba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82708
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73600 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f796f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82750
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73680 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82798
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f8b15f79720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/use_after_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82870
    type <pointer_type 0x7f8b15f6db28
        type <pointer_type 0x7f8b15f66f18 type <record_type 0x7f8b15f66e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f8b1644ebb8 constant 64>
            unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b15f6db28>>
        public unsigned DI size <integer_cst 0x7f8b1644ebb8 64> unit-size <integer_cst 0x7f8b1644ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73700 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f828b8
    type <pointer_type 0x7f8b15f66498
        type <function_type 0x7f8b15f66348 make_cleanup_ftype type <void_type 0x7f8b16463f18 void>
            QI
            size <integer_cst 0x7f8b1644eca8 constant 8>
            unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f8b15f684b0 value <pointer_type 0x7f8b1646a000>
                chain <tree_list 0x7f8b16462b18 value <void_type 0x7f8b16463f18 void>>> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66498>>
        unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8b15f73780 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f8b15f79750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82900
    type <pointer_type 0x7f8b1646a000
        type <void_type 0x7f8b16463f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8b1646a000>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b1646f9d8>>
    var <parm_decl 0x7f8b15f73800 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f8b15f79768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/use_after_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82948
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f8b15f79780>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/use_after_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/use_after_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82a68
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <var_decl 0x7f8b15f7fa20 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f8b15f797b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:do_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘do_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘do_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/use_after_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/use_after_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/use_after_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/use_after_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8b15f82e58
    type <pointer_type 0x7f8b15f66f18
        type <record_type 0x7f8b15f66e70 cleanup BLK
            size <integer_cst 0x7f8b1644ef18 constant 256>
            unit-size <integer_cst 0x7f8b1646c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b15f66e70 fields <field_decl 0x7f8b15f692f8 next> context <translation_unit_decl 0x7f8b16459168 ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c>
            pointer_to_this <pointer_type 0x7f8b15f66f18>>
        public unsigned DI
        size <integer_cst 0x7f8b1644ebb8 constant 64>
        unit-size <integer_cst 0x7f8b1644ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8b15f6db28>>
    var <parm_decl 0x7f8b15f73a80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f8b15f79840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f8b16458118
    type <integer_type 0x7f8b15f66888 char readonly public QI
        size <integer_cst 0x7f8b1644eca8 constant 8>
        unit-size <integer_cst 0x7f8b1644ecc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8b164633f0 precision:8 min <integer_cst 0x7f8b15f5d750 -128> max <integer_cst 0x7f8b15f5d738 127>
        pointer_to_this <pointer_type 0x7f8b15f66930>>
   
    arg:0 <string_cst 0x7f8b15f875d0
        type <array_type 0x7f8b15f6dd20 type <integer_type 0x7f8b15f66888 char>
            BLK
            size <integer_cst 0x7f8b15f5d7e0 constant 184>
            unit-size <integer_cst 0x7f8b15f5d7c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8b15f6dc78>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f8b1644ef48 type <integer_type 0x7f8b164635e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/use_after_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = (long unsigned int) i_5;
_2 = _1 * 8;
_3 = argv_9(D) + _2;
_4 = *_3;
attach_command (_4, i_5);
i_11 = i_5 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_5 = PHI <1(2), i_11(3)>
if (i_5 < argc_8(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;

=======Mapping node_fun:attach_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
args_7 = strip_bg_char (args_5(D), &async_exec);
args_chain_9 = make_cleanup (free, args_7);
find_attach_target ();
do_cleanups (args_chain_9);
_1 = target_can_async_p ();
if (_1 != 0)
  goto <bb 3>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 548896825]:
async_exec ={v} {CLOBBER};
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 524845000]:
_2 = async_exec;
attach_command_post_wait (args_7, from_tty_13(D), _2);
async_exec ={v} {CLOBBER};

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
return;

=======Mapping node_fun:strip_bg_char=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 296479539]:
if (args_12(D) == 0B)
  goto <bb 4>; [8.27%]
else
  goto <bb 3>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 271960681]:
_1 = *args_12(D);
if (_1 == 0)
  goto <bb 4>; [17.38%]
else
  goto <bb 5>; [82.62%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 71785624]:
*bg_char_p_15(D) = 0;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 224693915]:
_2 = strlen (args_12(D));
p_14 = args_12(D) + _2;
_3 = MEM[(const char *)p_14 + -1B];
if (_3 == 38)
  goto <bb 6>; [51.12%]
else
  goto <bb 12>; [48.88%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863530]:
p_19 = p_14 + 18446744073709551615;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 958878294]:
p_20 = p_9 + 18446744073709551615;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# p_9 = PHI <p_19(6), p_20(7)>
if (p_9 > args_12(D))
  goto <bb 9>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1014686025]:
_4 = MEM[(const char *)p_9 + -1B];
_5 = (int) _4;
_6 = isspace (_5);
if (_6 != 0)
  goto <bb 7>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 114863531]:
*bg_char_p_15(D) = 1;
if (p_9 != args_12(D))
  goto <bb 11>; [73.78%]
else
  goto <bb 13>; [26.22%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 84746314]:
_7 = p_9 - args_12(D);
_8 = (long unsigned int) _7;
_23 = savestring (args_12(D), _8);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 109830385]:
*bg_char_p_15(D) = 0;
_18 = strdup (args_12(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 296479540]:
# _10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
return _10;

=======Mapping node_fun:savestring=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = len_3(D) + 1;
p_6 = malloc (_1);
memcpy (p_6, ptr_7(D), len_3(D));
_2 = p_6 + len_3(D);
*_2 = 0;
return p_6;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 35 [0m
[40;34m    analyzable ptable point : 31 [0m
[40;34m    used_stmt array stack totalsize of : 0.003144 mb[0m
[40;34m    collect time: : 0.003394 s [0m
[40;34m    algorithm time: 0.358416 s [0m
[40;34m    gimple stmt count : : 82 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:51 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 76%)
 phase opt and generate             :   0.16 (100%)   0.25 (100%)   0.41 (100%)   630k ( 22%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 callgraph functions expansion      :   0.04 ( 25%)   0.00 (  0%)   0.05 ( 12%)   524k ( 18%)
 ipa points-to                      :   0.01 (  6%)   0.00 (  0%)   0.00 (  0%)  6856  (  0%)
 tree copy headers                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  3632  (  0%)
 tree strlen optimization           :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    11k (  0%)
 integrated RA                      :   0.02 ( 13%)   0.00 (  0%)   0.00 (  0%)   220k (  8%)
 plugin execution                   :   0.13 ( 81%)   0.25 (100%)   0.36 ( 88%)  1448  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    25k (  1%)
 TOTAL                              :   0.16          0.25          0.41         2835k
/usr/bin/ld: /tmp/ccJxXsBN.ltrans0.ltrans.o: in function `attach_command':
<artificial>:(.text+0x1ed): undefined reference to `find_attach_target'
/usr/bin/ld: <artificial>:(.text+0x1ff): undefined reference to `target_can_async_p'
/usr/bin/ld: <artificial>:(.text+0x21b): undefined reference to `attach_command_post_wait'
collect2: error: ld returned 1 exit status
