../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function â€˜savestringâ€™:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
   21 |   memcpy (p, ptr, len);
      |   ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:8:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
    7 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™ [-Wbuiltin-declaration-mismatch]
   21 |   memcpy (p, ptr, len);
      |   ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:21:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function â€˜strip_bg_charâ€™:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
   37 |   p = args + strlen (args);
      |              ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:37:14: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:41:26: warning: implicit declaration of function â€˜isspaceâ€™ [-Wimplicit-function-declaration]
   41 |       while (p > args && isspace (p[-1]))
      |                          ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:8:1: note: include â€˜<ctype.h>â€™ or provide a declaration of â€˜isspaceâ€™
    7 | #include "../include/binutils.h"
  +++ |+#include <ctype.h>
    8 | 
In file included from ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:6:
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: note: in expansion of macro â€˜xstrdupâ€™
   52 |   return xstrdup (args);        /* allocation site */
      |          ^~~~~~~
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:52:10: note: in expansion of macro â€˜xstrdupâ€™
   52 |   return xstrdup (args);        /* allocation site */
      |          ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c: In function â€˜attach_commandâ€™:
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:68:19: warning: implicit declaration of function â€˜find_attach_targetâ€™ [-Wimplicit-function-declaration]
   68 |   attach_target = find_attach_target ();
      |                   ^~~~~~~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:68:17: warning: assignment to â€˜struct target_ops *â€™ from â€˜intâ€™ makes pointer from integer without a cast [-Wint-conversion]
   68 |   attach_target = find_attach_target ();
      |                 ^
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:79:7: warning: implicit declaration of function â€˜target_can_async_pâ€™ [-Wimplicit-function-declaration]
   79 |   if (target_can_async_p ())
      |       ^~~~~~~~~~~~~~~~~~
In file included from ./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:6:
./benchmarks/binutils/use_after_free_5/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:85:21: note: in expansion of macro â€˜xstrdupâ€™
   85 |           a->args = xstrdup (args);     /* use-after-free */
      |                     ^~~~~~~
./benchmarks/binutils/use_after_free_5/binutils_uaf_5.c:91:3: warning: implicit declaration of function â€˜attach_command_post_waitâ€™ [-Wimplicit-function-declaration]
   91 |   attach_command_post_wait (args, from_tty, async_exec);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 49%)
 phase parsing                      :   0.02 ( 50%)   0.02 (100%)   0.04 ( 67%)  1119k ( 43%)
 phase opt and generate             :   0.02 ( 50%)   0.00 (  0%)   0.02 ( 33%)   205k (  8%)
 callgraph construction             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    23k (  1%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 17%)   118k (  5%)
 lto stream compression             :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 lto stream output                  :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 preprocessing                      :   0.02 ( 50%)   0.00 (  0%)   0.02 ( 33%)   365k ( 14%)
 lexical analysis                   :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   595k ( 23%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    78k (  3%)
 tree gimplify                      :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    45k (  2%)
 plugin execution                   :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.04          0.02          0.06         2633k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2217k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
debugmod 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:attach_command=========
=======node_fun:strip_bg_char=========
=======node_fun:savestring=========
=======node_fun:make_cleanup=========
=======node_fun:make_my_cleanup=========
=======node_fun:make_my_cleanup2=========
=======node_fun:do_cleanups=========
=======node_fun:do_my_cleanups=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 36 
===============The second stage : Mapping stmt=================
# .MEM_14 = VDEF <.MEM_12>
attach_command (_4, i_5);
# .MEM_25 = VDEF <.MEM_24(D)>
args_11 = strip_bg_char (args_9(D), &async_exec);
# .MEM_26 = VDEF <.MEM_25>
args_chain_13 = make_cleanup (free, args_11);
# .MEM_27 = VDEF <.MEM_26>
_1 = find_attach_target ();
# .MEM_28 = VDEF <.MEM_27>
do_cleanups (args_chain_13);
# .MEM_29 = VDEF <.MEM_28>
_3 = target_can_async_p ();
# .MEM_32 = VDEF <.MEM_29>
a_22 = malloc (16);
# .MEM_33 = VDEF <.MEM_32>
_4 = strdup (args_11);
# .MEM_30 = VDEF <.MEM_29>
attach_command_post_wait (args_11, from_tty_18(D), _6);
# VUSE <.MEM_25(D)>
_2 = strlen (args_12(D));
# VUSE <.MEM_25(D)>
_6 = isspace (_5);
# .MEM_29 = VDEF <.MEM_28>
_23 = savestring (args_12(D), _8);
# .MEM_27 = VDEF <.MEM_26>
_18 = strdup (args_12(D));
# .MEM_9 = VDEF <.MEM_8(D)>
p_6 = malloc (_1);
# .MEM_10 = VDEF <.MEM_9>
memcpy (p_6, ptr_7(D), len_3(D));
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
# .MEM_20 = VDEF <.MEM_19>
printf ("%x\n", _4);
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = (long unsigned int) i_5;
_2 = _1 * 8;
_3 = argv_9(D) + _2;
_4 = *_3;
attach_command (_4, i_5);
i_11 = i_5 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_5 = PHI <1(2), i_11(3)>
if (i_5 < argc_8(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;

=======Mapping node_fun:attach_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
args_11 = strip_bg_char (args_9(D), &async_exec);
args_chain_13 = make_cleanup (free, args_11);
_1 = find_attach_target ();
_2 = (long int) _1;
attach_target_15 = (struct target_ops *) _2;
do_cleanups (args_chain_13);
_3 = target_can_async_p ();
if (_3 != 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
a_22 = malloc (16);
_4 = strdup (args_11);
a_22->args = _4;
a_22->from_tty = from_tty_18(D);
_5 = async_exec;
a_22->async_exec = _5;
async_exec ={v} {CLOBBER};
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 708669601]:
_6 = async_exec;
attach_command_post_wait (args_11, from_tty_18(D), _6);
async_exec ={v} {CLOBBER};

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
return;

=======Mapping node_fun:strip_bg_char=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 296479539]:
if (args_12(D) == 0B)
  goto <bb 4>; [8.27%]
else
  goto <bb 3>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 271960681]:
_1 = *args_12(D);
if (_1 == 0)
  goto <bb 4>; [17.38%]
else
  goto <bb 5>; [82.62%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 71785624]:
*bg_char_p_15(D) = 0;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 224693915]:
_2 = strlen (args_12(D));
p_14 = args_12(D) + _2;
_3 = MEM[(const char *)p_14 + -1B];
if (_3 == 38)
  goto <bb 6>; [51.12%]
else
  goto <bb 12>; [48.88%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863530]:
p_19 = p_14 + 18446744073709551615;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 958878294]:
p_20 = p_9 + 18446744073709551615;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# p_9 = PHI <p_19(6), p_20(7)>
if (p_9 > args_12(D))
  goto <bb 9>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1014686025]:
_4 = MEM[(const char *)p_9 + -1B];
_5 = (int) _4;
_6 = isspace (_5);
if (_6 != 0)
  goto <bb 7>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 114863531]:
*bg_char_p_15(D) = 1;
if (p_9 != args_12(D))
  goto <bb 11>; [73.78%]
else
  goto <bb 13>; [26.22%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 84746314]:
_7 = p_9 - args_12(D);
_8 = (long unsigned int) _7;
_23 = savestring (args_12(D), _8);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 109830385]:
*bg_char_p_15(D) = 0;
_18 = strdup (args_12(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 296479540]:
# _10 = PHI <0B(4), 0B(10), _23(11), _18(12)>
return _10;

=======Mapping node_fun:savestring=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = len_3(D) + 1;
p_6 = malloc (_1);
memcpy (p_6, ptr_7(D), len_3(D));
_2 = p_6 + len_3(D);
*_2 = 0;
return p_6;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 5 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 36 [0m
[40;34m    analyzable ptable point : 34 [0m
[40;34m    analyzable ptable all point stmt : 144 [0m
[40;34m    used_stmt array stack totalsize of : 0.004008 mb[0m
[40;34m    collect time: : 0.000212 s [0m
[40;34m    mapping time: : 0.000846 s [0m
[40;34m    algorithm time: 0.003830 s [0m
[40;34m    gimple stmt count : : 90 [0m
[40;34m    this report analysis in Sun Jun 26 13:53:05 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 76%)
 phase opt and generate             :   0.02 (100%)   0.02 (100%)   0.05 (100%)   646k ( 23%)
 callgraph functions expansion      :   0.01 ( 50%)   0.02 (100%)   0.04 ( 80%)   532k ( 19%)
 ipa lto gimple in                  :   0.01 ( 50%)   0.00 (  0%)   0.01 ( 20%)    76k (  3%)
 df scan insns                      :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 20%)   432  (  0%)
 tree backward propagate            :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 forward prop                       :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)    96  (  0%)
 rest of compilation                :   0.00 (  0%)   0.01 ( 50%)   0.02 ( 40%)    25k (  1%)
 TOTAL                              :   0.02          0.02          0.05         2853k
/usr/bin/ld: /tmp/ccq6ib5z.ltrans0.ltrans.o: in function `attach_command':
<artificial>:(.text+0x1ec): undefined reference to `find_attach_target'
/usr/bin/ld: <artificial>:(.text+0x1fe): undefined reference to `target_can_async_p'
/usr/bin/ld: <artificial>:(.text+0x215): undefined reference to `attach_command_post_wait'
collect2: error: ld returned 1 exit status
