./benchmarks/binutils/leak_10/binutils_leak_10.c: In function â€˜nextwordâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: implicit declaration of function â€˜isspaceâ€™ [-Wimplicit-function-declaration]
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |          ^~~~~~~
./benchmarks/binutils/leak_10/binutils_leak_10.c:7:1: note: include â€˜<ctype.h>â€™ or provide a declaration of â€˜isspaceâ€™
    6 | #include "../include/common.h"
  +++ |+#include <ctype.h>
    7 | 
./benchmarks/binutils/leak_10/binutils_leak_10.c: In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
  174 |       if (strcmp (word, "var") == 0)
      |           ^~~~~~
./benchmarks/binutils/leak_10/binutils_leak_10.c:7:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcmpâ€™
    6 | #include "../include/common.h"
  +++ |+#include <string.h>
    7 | 
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.2%|          |
nothrow                          |      |      |      |      |     -2.3%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.1%|          |
ethread                          |      |      |      |      |     -0.1%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.3%|          |
phiopt                           |      |      |      |      |     -0.3%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
--------GIMPLE Cond -------
=======node_fun:compile=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:nextword=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:add_to_definition=========
--------GIMPLE Cond -------
=======node_fun:add_var=========
=======node_fun:newentry=========
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_13 = VDEF <.MEM_12(D)>
compile ("var second : stored_in_dict 5 ; : next");
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
# .MEM_67 = VDEF <.MEM_66(D)>
string_36 = nextword (string_34(D), &word);
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
# .MEM_82 = VDEF <.MEM_68>
string_57 = nextword (string_28, &word);
# .MEM_83 = VDEF <.MEM_82>
add_var (_3);
# .MEM_84 = VDEF <.MEM_83>
string_60 = nextword (string_57, &word);
 <var_decl 0x7faa2fffe120 word
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    addressable unsigned DI ./benchmarks/binutils/leak_10/binutils_leak_10.c:168:9 size <integer_cst 0x7faa304bbbb8 64> unit-size <integer_cst 0x7faa304bbbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7faa2ffe5e00 compile>>
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);
# .MEM_73 = VDEF <.MEM_72>
string_45 = nextword (string_41, &word);
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
 <var_decl 0x7faa2fffe120 word
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    addressable unsigned DI ./benchmarks/binutils/leak_10/binutils_leak_10.c:168:9 size <integer_cst 0x7faa304bbbb8 64> unit-size <integer_cst 0x7faa304bbbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7faa2ffe5e00 compile>>
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
 <var_decl 0x7faa2fffe120 word
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    addressable unsigned DI ./benchmarks/binutils/leak_10/binutils_leak_10.c:168:9 size <integer_cst 0x7faa304bbbb8 64> unit-size <integer_cst 0x7faa304bbbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7faa2ffe5e00 compile>>
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
# VUSE <.MEM_86(D)>
_17 = isspace (_16);
# .MEM_87 = VDEF <.MEM_86(D)>
_20 = malloc (_19);
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:compile========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path compile  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:nextword========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path nextword  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre_check_funciton:nextword========= [0m
[40;42m =======start_check_funciton:nextword========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>
# .MEM_87 = VDEF <.MEM_86(D)>
_20 = malloc (_19);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*word_63(D) = _20;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>
_7 = (int) _6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_85>
return _50;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = isspace (_7);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |          ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_85>
return _50;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |                                            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
Cond in fucntion nextword basic block 8
 ================== possible direct basic block ================= 
from nextword basic block 3
 ================== possible direct basic block ================= 
from nextword basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = isspace (_16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:15: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |               ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |              ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
Cond in fucntion nextword basic block 16
 ================== possible direct basic block ================= 
from nextword basic block 15
 ================== possible direct basic block ================= 
from nextword basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>
_19 = (long unsigned int) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:nextword========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:add_to_definition========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path add_to_definition  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:add_to_definition========= [0m
[40;42m =======start_check_funciton:add_to_definition========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_9 = realloc (_8, _7);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
this stmt is child function---realloc-----

 ================== find ================== 
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code = _9;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_8 = entry_19(D)->code;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:49: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = entry_19(D)->code_length;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_6 = (long unsigned int) _5;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = entry_19(D)->code_length;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = entry_19(D)->code_length;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = entry_19(D)->code_end;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:add_to_definition========= [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre add _ fucntion:add_var========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_var  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre_check_funciton:add_var========= [0m
[40;42m =======start_check_funciton:add_var========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
   51 |   dict_type *new_d = newentry (name);
      |                      ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:add_var========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:compile========= [0m
[40;42m =======start_check_funciton:compile========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa300000d8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7faa2fff6900>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300000d8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7faa2fff6900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7c00
    type <pointer_type 0x7faa2fff0150
        type <array_type 0x7faa2fff00a8 type <integer_type 0x7faa2ffe4dc8 char>
            BLK
            size <integer_cst 0x7faa2ffdb6f0 constant 96>
            unit-size <integer_cst 0x7faa2ffdb930 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0000>
            pointer_to_this <pointer_type 0x7faa2fff0150>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa2fff7ed8 type <array_type 0x7faa2fff00a8>
        readonly constant static "string: %s\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c38b8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = word;
    version:1
    ptr-info 0x7faa2fff6738>
# VUSE <.MEM_68>
_1 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c38b8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = word;
    version:1
    ptr-info 0x7faa2fff6738>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000090
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_28 = PHI <string_36(2), string_10(15)>
    version:28
    ptr-info 0x7faa2fff68e8>
string_28 = PHI <string_36(2), string_10(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000090
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_28 = PHI <string_36(2), string_10(15)>
    version:28
    ptr-info 0x7faa2fff68e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _3 = word;
    version:3
    ptr-info 0x7faa2fff6750>
# VUSE <.MEM_82>
_3 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_83 = VDEF <.MEM_82>
add_var (_3);
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_83 = VDEF <.MEM_82>
add_var (_3);
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _3 = word;
    version:3
    ptr-info 0x7faa2fff6750>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa300002d0
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_57 = nextword (string_28, &word);
    version:57
    ptr-info 0x7faa2fff69a8>
# .MEM_82 = VDEF <.MEM_68>
string_57 = nextword (string_28, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = word;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
  182 |       else if (word[0] == ':')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *_4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
  182 |       else if (word[0] == ':')
      |               ^
if (_5 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion compile basic block 5
 ================== possible direct basic block ================= 
from compile basic block 6
 ================== possible direct basic block ================= 
from compile basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^
if (_19 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
Cond in fucntion compile basic block 12
 ================== possible direct basic block ================= 
from compile basic block 7
 ================== possible direct basic block ================= 
from compile basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300002d0
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_57 = nextword (string_28, &word);
    version:57
    ptr-info 0x7faa2fff69a8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_73 = VDEF <.MEM_72>
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_71>
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_74>
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3a68
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _7 = word;
    version:7
    ptr-info 0x7faa2fff6798>
# VUSE <.MEM_71>
_7 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3a68
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _7 = word;
    version:7
    ptr-info 0x7faa2fff6798>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa30000168
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_41 = nextword (string_28, &word);
    version:41
    ptr-info 0x7faa2fff6930>
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = word;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
  182 |       else if (word[0] == ':')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *_4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
  182 |       else if (word[0] == ':')
      |               ^
if (_5 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion compile basic block 5
 ================== possible direct basic block ================= 
from compile basic block 6
 ================== possible direct basic block ================= 
from compile basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^
if (_19 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
Cond in fucntion compile basic block 12
 ================== possible direct basic block ================= 
from compile basic block 7
 ================== possible direct basic block ================= 
from compile basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000168
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_41 = nextword (string_28, &word);
    version:41
    ptr-info 0x7faa2fff6930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_73 = VDEF <.MEM_72>
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_71>
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_74>
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa300001b0
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa2fffe1b0 ptr>
    def_stmt ptr_43 = newentry (_7);
    version:43
    ptr-info 0x7faa2fff6948>
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);

 ================== trace ptable================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---newentry-----
this other function ------newentry-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300001b0
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa2fffe1b0 ptr>
    def_stmt ptr_43 = newentry (_7);
    version:43
    ptr-info 0x7faa2fff6948>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7e40
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7e20 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7ec0
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7ea0 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000000
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_26 = PHI <string_45(6), string_52(11)>
    version:26
    ptr-info 0x7faa2fff68b8>
string_26 = PHI <string_45(6), string_52(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000000
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_26 = PHI <string_45(6), string_52(11)>
    version:26
    ptr-info 0x7faa2fff68b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7f80
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7f60 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000048
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_27 = PHI <string_52(11), string_26(12)>
    version:27
    ptr-info 0x7faa2fff68d0>
string_27 = PHI <string_52(11), string_26(12)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
In function â€˜compileâ€™:
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000048
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_27 = PHI <string_52(11), string_26(12)>
    version:27
    ptr-info 0x7faa2fff68d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3ea0
    type <pointer_type 0x7faa2ffebdc8
        type <record_type 0x7faa2ffebd20 FILE BLK
            size <integer_cst 0x7faa2ffdb750 constant 1728>
            unit-size <integer_cst 0x7faa2ffdb8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffebc78 fields <field_decl 0x7faa2ffec5f0 _flags> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffebdc8>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2fff07e0>>
   
    def_stmt _22 = stderr;
    version:22
    ptr-info 0x7faa2fff6888>
# VUSE <.MEM_68>
_22 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3ea0
    type <pointer_type 0x7faa2ffebdc8
        type <record_type 0x7faa2ffebd20 FILE BLK
            size <integer_cst 0x7faa2ffdb750 constant 1728>
            unit-size <integer_cst 0x7faa2ffdb8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffebc78 fields <field_decl 0x7faa2ffec5f0 _flags> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffebdc8>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2fff07e0>>
   
    def_stmt _22 = stderr;
    version:22
    ptr-info 0x7faa2fff6888>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:compile========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7faa306b7aa0
    type <pointer_type 0x7faa2fff0bd0
        type <array_type 0x7faa2fff0b28 type <integer_type 0x7faa2ffe4dc8 char>
            BLK
            size <integer_cst 0x7faa2ffdb8b8 constant 312>
            unit-size <integer_cst 0x7faa2ffdb978 constant 39>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0a80>
            pointer_to_this <pointer_type 0x7faa2fff0bd0>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa304ce040 type <array_type 0x7faa2fff0b28>
        readonly constant static "var second : stored_in_dict 5 ; : next\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c35e8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = dict_3->word;
    version:1
    ptr-info 0x7faa2fff66c0>
# VUSE <.MEM_11>
_1 = dict_3->word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_14 = VDEF <.MEM_11>
__builtin_puts (_1);
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c35e8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = dict_3->word;
    version:1
    ptr-info 0x7faa2fff66c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:compile========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path compile  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:nextword========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path nextword  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre_check_funciton:nextword========= [0m
[40;42m =======start_check_funciton:nextword========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>
# .MEM_87 = VDEF <.MEM_86(D)>
_20 = malloc (_19);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*word_63(D) = _20;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>
_7 = (int) _6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_85>
return _50;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = isspace (_7);
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |          ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_85>
return _50;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |                                            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
Cond in fucntion nextword basic block 8
 ================== possible direct basic block ================= 
from nextword basic block 3
 ================== possible direct basic block ================= 
from nextword basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = isspace (_16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:15: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |               ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |              ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
Cond in fucntion nextword basic block 16
 ================== possible direct basic block ================= 
from nextword basic block 15
 ================== possible direct basic block ================= 
from nextword basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>
_19 = (long unsigned int) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:nextword========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:add_to_definition========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path add_to_definition  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:add_to_definition========= [0m
[40;42m =======start_check_funciton:add_to_definition========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_9 = realloc (_8, _7);
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
this stmt is child function---realloc-----

 ================== find ================== 
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code = _9;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_8 = entry_19(D)->code;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:49: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = entry_19(D)->code_length;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_6 = (long unsigned int) _5;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = entry_19(D)->code_length;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = entry_19(D)->code_length;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = entry_19(D)->code_end;
In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:add_to_definition========= [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre add _ fucntion:add_var========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_var  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre_check_funciton:add_var========= [0m
[40;42m =======start_check_funciton:add_var========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
   51 |   dict_type *new_d = newentry (name);
      |                      ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:add_var========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:compile========= [0m
[40;42m =======start_check_funciton:compile========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa300000d8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7faa2fff6900>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300000d8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7faa2fff6900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7c00
    type <pointer_type 0x7faa2fff0150
        type <array_type 0x7faa2fff00a8 type <integer_type 0x7faa2ffe4dc8 char>
            BLK
            size <integer_cst 0x7faa2ffdb6f0 constant 96>
            unit-size <integer_cst 0x7faa2ffdb930 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0000>
            pointer_to_this <pointer_type 0x7faa2fff0150>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa2fff7ed8 type <array_type 0x7faa2fff00a8>
        readonly constant static "string: %s\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:173:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c38b8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = word;
    version:1
    ptr-info 0x7faa2fff6738>
# VUSE <.MEM_68>
_1 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c38b8
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _1 = word;
    version:1
    ptr-info 0x7faa2fff6738>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000090
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_28 = PHI <string_36(2), string_10(15)>
    version:28
    ptr-info 0x7faa2fff68e8>
string_28 = PHI <string_36(2), string_10(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000090
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_28 = PHI <string_36(2), string_10(15)>
    version:28
    ptr-info 0x7faa2fff68e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _3 = word;
    version:3
    ptr-info 0x7faa2fff6750>
# VUSE <.MEM_82>
_3 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_83 = VDEF <.MEM_82>
add_var (_3);
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_83 = VDEF <.MEM_82>
add_var (_3);
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _3 = word;
    version:3
    ptr-info 0x7faa2fff6750>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa300002d0
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_57 = nextword (string_28, &word);
    version:57
    ptr-info 0x7faa2fff69a8>
# .MEM_82 = VDEF <.MEM_68>
string_57 = nextword (string_28, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
  182 |       else if (word[0] == ':')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *_4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
  182 |       else if (word[0] == ':')
      |               ^
if (_5 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion compile basic block 5
 ================== possible direct basic block ================= 
from compile basic block 6
 ================== possible direct basic block ================= 
from compile basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^
if (_19 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
Cond in fucntion compile basic block 12
 ================== possible direct basic block ================= 
from compile basic block 7
 ================== possible direct basic block ================= 
from compile basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300002d0
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_57 = nextword (string_28, &word);
    version:57
    ptr-info 0x7faa2fff69a8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_73 = VDEF <.MEM_72>
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_71>
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_74>
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3a68
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _7 = word;
    version:7
    ptr-info 0x7faa2fff6798>
# VUSE <.MEM_71>
_7 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3a68
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
   
    def_stmt _7 = word;
    version:7
    ptr-info 0x7faa2fff6798>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa30000168
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_41 = nextword (string_28, &word);
    version:41
    ptr-info 0x7faa2fff6930>
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
string_36 = nextword (string_34(D), &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:12: warning: use location
  169 |   string = nextword (string, &word);
      |            ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_1 = word;
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_68>
_2 = strcmp (_1, "var");
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = strcmp (_1, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_2 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
  174 |       if (strcmp (word, "var") == 0)
      |          ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion compile basic block 3
 ================== possible direct basic block ================= 
from compile basic block 4
 ================== possible direct basic block ================= 
from compile basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
  179 |           add_var (word);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_var (_3);
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:11: warning: use location
this stmt is child function---add_var-----

 ================== trace ================== 
trace fucntion name:add_var 
[40;44m =======trace_function_path add_var  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:add_var========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:newentry========= [0m
newentry this fucntion return value is heap-object 
add_var this fucntion return value is heap-object newentry
[40;46m =======add node_fun stack:newentry========= [0m
[40;44m =======trace_function_path newentry  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
  182 |       else if (word[0] == ':')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *_4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
  182 |       else if (word[0] == ':')
      |               ^
if (_5 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion compile basic block 5
 ================== possible direct basic block ================= 
from compile basic block 6
 ================== possible direct basic block ================= 
from compile basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^
if (_19 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
Cond in fucntion compile basic block 12
 ================== possible direct basic block ================= 
from compile basic block 7
 ================== possible direct basic block ================= 
from compile basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_24 = word;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_25 = *_24;
bb index := 18
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000168
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_41 = nextword (string_28, &word);
    version:41
    ptr-info 0x7faa2fff6930>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_71 = VDEF <.MEM_70>
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_73 = VDEF <.MEM_72>
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_81 = VDEF <.MEM_80>
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_79 = VDEF <.MEM_61>
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_71>
_7 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_8 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_9 = *_8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:27: warning: use location
  195 |               switch (word[0])
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_11 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_12 = _11 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:93: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
_13 = (void (*<T638>) ()) _12;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_74>
_15 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_77>
_17 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_18 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_62>
_19 = *_18;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:22: warning: use location
  193 |           while (word[0] != ';')
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
if (_19 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:26: warning: use location
  193 |           while (word[0] != ';')
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# VUSE <.MEM_65>
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
  170 |   while (string && *string && word[0])
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa300001b0
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa2fffe1b0 ptr>
    def_stmt ptr_43 = newentry (_7);
    version:43
    ptr-info 0x7faa2fff6948>
# .MEM_72 = VDEF <.MEM_71>
ptr_43 = newentry (_7);

 ================== trace ptable================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---newentry-----
this other function ------newentry-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_43 = newentry (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:17: warning: use location
  190 |           ptr = newentry (word);
      |                 ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: use location
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
this stmt is child function---add_to_definition-----

 ================== trace ================== 
trace fucntion name:add_to_definition 
[40;44m =======trace_function_path add_to_definition  function_call count: 1 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
[40;36m ======= node_fun:add_to_definition========= [0m
[40;36m ======= find relate stmt with ptr ========= [0m
[40;36m ======= relate stmt argument:ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa300001b0
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa2fffe1b0 ptr>
    def_stmt ptr_43 = newentry (_7);
    version:43
    ptr-info 0x7faa2fff6948>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_63>
_20 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_80 = VDEF <.MEM_63>
printf ("%d\n", _20);
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:17: warning: use location
  228 |                 __USE(ptr);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_16 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_77 = VDEF <.MEM_62>
printf ("%d\n", _16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:49: warning: use location
  219 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# VUSE <.MEM_62>
_14 = MEM[(int *)ptr_43];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_62>
add_to_definition (ptr_43, _13);
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:49: warning: Use after free error!: free location 
  200 |                                                 add_to_definition (ptr, (stinst_type) (word + 1));
      |                                                 ^
# .MEM_74 = VDEF <.MEM_62>
printf ("%d\n", _14);
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:49: warning: use location
  214 |                                                 __USE(ptr);
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7e40
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7e20 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7ec0
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7ea0 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000000
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_26 = PHI <string_45(6), string_52(11)>
    version:26
    ptr-info 0x7faa2fff68b8>
string_26 = PHI <string_45(6), string_52(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000000
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_26 = PHI <string_45(6), string_52(11)>
    version:26
    ptr-info 0x7faa2fff68b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa306b7f80
    type <pointer_type 0x7faa2fff0498
        type <array_type 0x7faa2fff03f0 type <integer_type 0x7faa2ffe4dc8 char>
            SI
            size <integer_cst 0x7faa304bbdf8 constant 32>
            unit-size <integer_cst 0x7faa304bbe10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7faa2fff0348>
            pointer_to_this <pointer_type 0x7faa2fff0498>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7faa306b7f60 type <array_type 0x7faa2fff03f0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000048
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_27 = PHI <string_52(11), string_26(12)>
    version:27
    ptr-info 0x7faa2fff68d0>
string_27 = PHI <string_52(11), string_26(12)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_55 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:20: warning: use location
  229 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_10 = PHI <string_60(4), string_55(13), string_28(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_28 = PHI <string_36(2), string_10(15)>
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_28 = PHI <string_36(2), string_10(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_23 = *string_28;
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = *string_28;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
  170 |   while (string && *string && word[0])
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 17
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
  170 |   while (string && *string && word[0])
      |                 ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 18
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_28 != 0B)
bb index := 16
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_28 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
  170 |   while (string && *string && word[0])
      |                            ^
if (string_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:28: warning: use location
Cond in fucntion compile basic block 16
 ================== possible direct basic block ================= 
from compile basic block 17
 ================== possible direct basic block ================= 
from compile basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = string_28 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_41 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:20: warning: use location
  187 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_45 = nextword (string_41, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:20: warning: use location
  191 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_26 = PHI <string_45(6), string_52(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = PHI <string_52(11), string_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_52 = nextword (string_26, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:42: warning: use location
  224 |                                 string = nextword (string, &word);
      |                                          ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = nextword (string_28, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:20: warning: use location
  176 |           string = nextword (string, &word);
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_60 = nextword (string_57, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:20: warning: use location
  180 |           string = nextword (string, &word); /* memory leak */
      |                    ^
this stmt is child function---nextword-----

 ================== trace ================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_65>
printf ("string: %s\n", string_28);
bb index := 3
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
  238 | }
      | ^
beacuse in succ := 19 have return or exit
# VUSE <.MEM_85>
return;
./benchmarks/binutils/leak_10/binutils_leak_10.c:238:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("string: %s\n", string_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:173:25: warning: use location
  173 |                         printf ("string: %s\n", string);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000048
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1180 string>
    def_stmt string_27 = PHI <string_52(11), string_26(12)>
    version:27
    ptr-info 0x7faa2fff68d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa304c3ea0
    type <pointer_type 0x7faa2ffebdc8
        type <record_type 0x7faa2ffebd20 FILE BLK
            size <integer_cst 0x7faa2ffdb750 constant 1728>
            unit-size <integer_cst 0x7faa2ffdb8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffebc78 fields <field_decl 0x7faa2ffec5f0 _flags> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffebdc8>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2fff07e0>>
   
    def_stmt _22 = stderr;
    version:22
    ptr-info 0x7faa2fff6888>
# VUSE <.MEM_68>
_22 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa304c3ea0
    type <pointer_type 0x7faa2ffebdc8
        type <record_type 0x7faa2ffebd20 FILE BLK
            size <integer_cst 0x7faa2ffdb750 constant 1728>
            unit-size <integer_cst 0x7faa2ffdb8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffebc78 fields <field_decl 0x7faa2ffec5f0 _flags> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffebdc8>>
        unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2fff07e0>>
   
    def_stmt _22 = stderr;
    version:22
    ptr-info 0x7faa2fff6888>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: use location
  186 |                 free(word);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: use location
  216 |                                                 free(word);
      |                                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: use location
  220 |                                                 free(word);
      |                                                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (_6);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:17: warning: Use after free error!: free location 
  186 |                 free(word);
      |                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_74>
free (_15);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:49: warning: Use after free error!: free location 
  216 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
free (_17);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:49: warning: Use after free error!: free location 
  220 |                                                 free(word);
      |                                                 ^
# .MEM_69 = VDEF <.MEM_68>
fprintf (_22, "syntax error at %s\n", _21);
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:11: warning: use location
  233 |           fprintf (stderr, "syntax error at %s\n", string - 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:compile========= [0m
[40;44m =======node_fun:nextword========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path nextword  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre_check_funciton:nextword========= [0m
[40;42m =======start_check_funciton:nextword========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>
# .MEM_87 = VDEF <.MEM_86(D)>
_20 = malloc (_19);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*word_63(D) = _20;
In function â€˜nextwordâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30007000
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _20 = malloc (_19);
    version:20
    ptr-info 0x7faa2fff69d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>
_7 = (int) _6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_86(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = isspace (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |          ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
   87 |   while (isspace ((unsigned char) *string) || *string == '-')
      |                                            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:44: warning: use location
Cond in fucntion nextword basic block 8
 ================== possible direct basic block ================= 
from nextword basic block 3
 ================== possible direct basic block ================= 
from nextword basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000c18
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _7 = (int) _6;
    version:7>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = isspace (_16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:15: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |               ^
this stmt is child function---isspace-----

 ================== trace ================== 
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
  123 |       while (!isspace ((unsigned char) *string))
      |              ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:14: warning: use location
Cond in fucntion nextword basic block 16
 ================== possible direct basic block ================= 
from nextword basic block 15
 ================== possible direct basic block ================= 
from nextword basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000ea0
    type <integer_type 0x7faa304d05e8 int public SI
        size <integer_cst 0x7faa304bbdf8 constant 32>
        unit-size <integer_cst 0x7faa304bbe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d05e8 precision:32 min <integer_cst 0x7faa304bbdb0 -2147483648> max <integer_cst 0x7faa304bbdc8 2147483647>
        pointer_to_this <pointer_type 0x7faa304d79d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>
_19 = (long unsigned int) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
*word_63(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
  131 |   *word = (char *) malloc (length + 1); /* allocation site */
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa30000f78
    type <integer_type 0x7faa304d07e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d0738 precision:64 min <integer_cst 0x7faa304bbe88 0> max <integer_cst 0x7faa304bc500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faa304dc7e0>>
   
    def_stmt _19 = (long unsigned int) _18;
    version:19>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:nextword========= [0m
[40;44m =======node_fun:add_to_definition========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_to_definition  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:add_to_definition========= [0m
[40;42m =======start_check_funciton:add_to_definition========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_85>
return _50;
In function â€˜add_to_definitionâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
this stmt is child function---realloc-----

 ================== find ================== 
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_8 = entry_19(D)->code;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_8 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:49: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29>
_5 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = entry_19(D)->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long unsigned int) _5;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:39: warning: use location
   64 |                                  entry->code_length * sizeof (word_type));
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28(D)>
entry_19(D)->code_length = _4;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
entry_19(D)->code_length = _4;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_3 = entry_19(D)->code_length;
bb index := 3
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = entry_19(D)->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
   61 |       entry->code_length += 2;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_2 = entry_19(D)->code_length;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = entry_19(D)->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
beacuse in succ := 28 have return or exit
# VUSE <.MEM_85>
return _50;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28(D)>
_1 = entry_19(D)->code_end;
bb index := 2
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_33>
return _26;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   59 |   if (entry->code_end == entry->code_length)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d438
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _9 = realloc (_8, _7);
    version:9
    ptr-info 0x7faa2fff6c90>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: use location
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_31 = VDEF <.MEM_30>
entry_19(D)->code = _9;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
   62 |       entry->code =
      |                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_33 = VDEF <.MEM_32>
entry_19(D)->code_end = _16;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_32>
_15 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   68 |   return entry->code_end++;
      |               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_26 = (unsigned int) _15;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   68 |   return entry->code_end++;
      |                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_11 = entry_19(D)->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_12 = (long unsigned int) _11;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_13 = _12 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
_14 = _10 + _13;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# .MEM_32 = VDEF <.MEM_27>
*_14 = word_23(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
_9 = realloc (_8, _7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:25: warning: Use after free error!: free location 
   63 |         (stinst_type *) realloc ((char *) (entry->code),
      |                         ^
# VUSE <.MEM_27>
_10 = entry_19(D)->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   66 |   entry->code[entry->code_end] = word;
      |        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:add_to_definition========= [0m
[40;44m =======node_fun:add_var========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_var  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
In function â€˜add_varâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre_check_funciton:add_var========= [0m
[40;42m =======start_check_funciton:add_var========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
   51 |   dict_type *new_d = newentry (name);
      |                      ^
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
newentry (name_2(D));
newentry (name_2(D));
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:22: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000d948
    type <pointer_type 0x7faa2ffe4e70
        type <integer_type 0x7faa2ffe4dc8 char public QI
            size <integer_cst 0x7faa304bbca8 constant 8>
            unit-size <integer_cst 0x7faa304bbcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa304d03f0 precision:8 min <integer_cst 0x7faa2ffdb720 -128> max <integer_cst 0x7faa2ffdb708 127>
            pointer_to_this <pointer_type 0x7faa2ffe4e70>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7faa2ffedc78>>
    var <parm_decl 0x7faa2fff1700 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7faa2fff6d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:add_var========= [0m
[40;44m =======node_fun:newentry========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>
# .MEM_8 = VDEF <.MEM_7(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
In function â€˜newentryâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   44 |   return new_d;
      |          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:36: warning: use location
   37 |   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
      |                                    ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000daf8
    type <pointer_type 0x7faa2ffe4498
        type <record_type 0x7faa2ffe4348 dict_type BLK
            size <integer_cst 0x7faa305900a8 constant 320>
            unit-size <integer_cst 0x7faa2ffdb738 constant 40>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7faa2ffe4f18 fields <field_decl 0x7faa2ffe7428 word> context <translation_unit_decl 0x7faa304c6168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7faa2ffe4498>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa2ffed9d8>>
    var <var_decl 0x7faa3000b2d0 new_d>
    def_stmt new_d_5 = malloc (40);
    version:5
    ptr-info 0x7faa2fff6d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   43 |   new_d->code_end = 0;
      |                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   42 |   new_d->code_length = 1;
      |                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   40 |   root = new_d;
      |        ^
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:14: warning: use location
  246 |         dict = root;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(2), dict_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location
  248 |         while (dict != NULL) {
      |                     ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:21: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_10 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:22: warning: use location
  251 |                 dict = dict->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:26: warning: use location
  250 |                 free(dict->word);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
  250 |                 free(dict->word);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
  249 |                 printf("%s\n", dict->word);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts (_1);
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:17: warning: use location
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:1 
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   39 |   new_d->next = root;
      |               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   38 |   new_d->word = word;
      |               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   41 |   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa3000dab0
    type <pointer_type 0x7faa304d7000
        type <void_type 0x7faa304d0f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7faa304d7000>>
        public unsigned DI
        size <integer_cst 0x7faa304bbbb8 constant 64>
        unit-size <integer_cst 0x7faa304bbbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7faa304dc9d8>>
   
    def_stmt _2 = malloc (8);
    version:2
    ptr-info 0x7faa2fff6d38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65e8 type <integer_type 0x7faa304d07e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa2fff65a0 type <integer_type 0x7faa304d07e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
compile ("var second : stored_in_dict 5 ; : next");
dict_7 = root;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = dict_3->word;
__builtin_puts (_1);
_2 = dict_3->word;
free (_2);
dict_10 = dict_3->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# dict_3 = PHI <dict_7(2), dict_10(3)>
if (dict_3 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;

=======Mapping node_fun:compile=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 113634466]:
string_36 = nextword (string_34(D), &word);
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 960107351]:
printf ("string: %s\n", string_28);
_1 = word;
_2 = strcmp (_1, "var");
if (_2 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 316835424]:
string_57 = nextword (string_28, &word);
_3 = word;
add_var (_3);
string_60 = nextword (string_57, &word);
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 643271927]:
_4 = word;
_5 = *_4;
if (_5 == 58)
  goto <bb 6>; [16.00%]
else
  goto <bb 14>; [84.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 102923506]:
_6 = word;
free (_6);
string_41 = nextword (string_28, &word);
_7 = word;
ptr_43 = newentry (_7);
string_45 = nextword (string_41, &word);
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 909209812]:
_8 = word;
_9 = *_8;
switch (_9) <default: <L2> [33.33%], case 34: <L0> [33.33%], case 48 ... 57: <L1> [33.33%]>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 303069939]:
<L0>:
_11 = word;
_12 = _11 + 1;
_13 = (void (*<T638>) ()) _12;
add_to_definition (ptr_43, _13);
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 303069939]:
<L1>:
_14 = MEM[(int *)ptr_43];
printf ("%d\n", _14);
_15 = word;
free (_15);
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 303069939]:
<L2>:
_16 = MEM[(int *)ptr_43];
printf ("%d\n", _16);
_17 = word;
free (_17);

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 909209819]:
string_52 = nextword (string_26, &word);
if (string_52 == 0B)
  goto <bb 13>; [5.50%]
else
  goto <bb 12>; [94.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 962126785]:
# string_26 = PHI <string_45(6), string_52(11)>
_18 = word;
_19 = *_18;
if (_19 != 59)
  goto <bb 7>; [94.50%]
else
  goto <bb 13>; [5.50%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 102923513]:
# string_27 = PHI <string_52(11), string_26(12)>
_20 = MEM[(int *)ptr_43];
printf ("%d\n", _20);
string_55 = nextword (string_27, &word);
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 540348421]:
_21 = string_28 + 18446744073709551615;
_22 = stderr;
fprintf (_22, "syntax error at %s\n", _21);

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 960107358]:
# string_10 = PHI <string_60(4), string_55(13), string_28(14)>

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 1073741824]:
# string_28 = PHI <string_36(2), string_10(15)>
if (string_28 != 0B)
  goto <bb 17>; [96.34%]
else
  goto <bb 19>; [3.66%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 1034442874]:
_23 = *string_28;
if (_23 != 0)
  goto <bb 18>; [96.34%]
else
  goto <bb 19>; [3.66%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 996582263]:
_24 = word;
_25 = *_24;
if (_25 != 0)
  goto <bb 3>; [96.34%]
else
  goto <bb 19>; [3.66%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 113634474]:
word ={v} {CLOBBER};
return;

=======Mapping node_fun:nextword=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 46837323]:
if (string_54(D) == 0B)
  goto <bb 28>; [8.27%]
else
  goto <bb 8>; [91.73%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 738197517]:
_1 = *string_37;
if (_1 == 45)
  goto <bb 5>; [16.00%]
else
  goto <bb 6>; [84.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630224]:
string_82 = string_36 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# string_36 = PHI <string_37(3), string_82(4)>
_81 = *string_36;
_2 = _81 != 0;
_3 = _81 != 10;
_4 = _2 & _3;
if (_4 != 0)
  goto <bb 4>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 620085917]:
string_80 = string_37 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 738197517]:
# string_66 = PHI <string_36(5), string_80(6)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 781161393]:
# string_37 = PHI <string_54(D)(2), string_66(7)>
_5 = *string_37;
_6 = (unsigned char) _5;
_7 = (int) _6;
_8 = isspace (_7);
if (_8 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 390580696]:
_9 = *string_37;
if (_9 == 45)
  goto <bb 3>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 42963876]:
_10 = *string_37;
if (_10 == 0)
  goto <bb 28>; [17.38%]
else
  goto <bb 11>; [82.62%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 35496755]:
_11 = *string_37;
if (_11 == 34)
  goto <bb 12>; [34.00%]
else
  goto <bb 16>; [66.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 109717244]:
# string_38 = PHI <string_37(11), string_39(14)>
# length_46 = PHI <0(11), length_47(14)>
string_58 = string_38 + 1;
length_59 = length_46 + 1;
_12 = MEM[(char *)string_38 + 1B];
if (_12 == 92)
  goto <bb 13>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 37303863]:
string_60 = &MEM <char> [(void *)string_38 + 3B];
length_61 = length_46 + 3;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 109717244]:
# string_39 = PHI <string_58(12), string_60(13)>
# length_47 = PHI <length_59(12), length_61(13)>
_13 = *string_39;
if (_13 != 34)
  goto <bb 12>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 189552670]:
string_56 = string_40 + 1;
length_57 = length_48 + 1;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 212980528]:
# string_40 = PHI <string_37(11), string_56(15)>
# length_48 = PHI <0(11), length_57(15)>
_14 = *string_40;
_15 = (unsigned char) _14;
_16 = (int) _15;
_17 = isspace (_16);
if (_17 == 0)
  goto <bb 15>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 35496755]:
# string_41 = PHI <string_39(14), string_40(16)>
# length_49 = PHI <length_47(14), length_48(16)>
_18 = length_49 + 1;
_19 = (long unsigned int) _18;
_20 = malloc (_19);
*word_63(D) = _20;
dst_65 = *word_63(D);
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 287201027]:
_21 = (sizetype) idx_43;
_22 = string_37 + _21;
_23 = *_22;
if (_23 == 92)
  goto <bb 19>; [34.00%]
else
  goto <bb 23>; [66.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 97648350]:
_24 = (sizetype) idx_43;
_25 = _24 + 1;
_26 = string_37 + _25;
_27 = *_26;
switch (_27) <default: <L2> [33.33%], case 34: <L1> [33.33%], case 92: <L1> [33.33%], case 110: <L0> [33.33%]>

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 32549450]:
<L0>:
dst_71 = dst_45 + 1;
*dst_45 = 10;
idx_73 = idx_43 + 1;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 32549450]:
<L1>:
_28 = (sizetype) idx_43;
_29 = _28 + 1;
_30 = string_37 + _29;
dst_74 = dst_45 + 1;
_31 = *_30;
*dst_45 = _31;
idx_76 = idx_43 + 1;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 32549450]:
<L2>:
dst_77 = dst_45 + 1;
*dst_45 = 92;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 189552677]:
_32 = (sizetype) idx_43;
_33 = string_37 + _32;
dst_69 = dst_45 + 1;
_34 = *_33;
*dst_45 = _34;

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 287201028]:
# idx_42 = PHI <idx_73(20), idx_76(21), idx_43(22), idx_43(23)>
# dst_44 = PHI <dst_71(20), dst_74(21), dst_77(22), dst_69(23)>
idx_79 = idx_42 + 1;

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 322697783]:
# idx_43 = PHI <0(17), idx_79(24)>
# dst_45 = PHI <dst_65(17), dst_44(24)>
if (idx_43 < length_49)
  goto <bb 18>; [89.00%]
else
  goto <bb 26>; [11.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 35496756]:
*dst_45 = 0;
_35 = *string_41;
if (_35 != 0)
  goto <bb 27>; [71.00%]
else
  goto <bb 28>; [29.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 25202697]:
_68 = string_41 + 1;

=======is loop:0=========

 bb index 28 
<bb 28> [local count: 46837324]:
# _50 = PHI <0B(2), 0B(10), 0B(26), _68(27)>
return _50;

=======Mapping node_fun:add_to_definition=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = entry_19(D)->code_end;
_2 = entry_19(D)->code_length;
if (_1 == _2)
  goto <bb 3>; [20.24%]
else
  goto <bb 4>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 217325344]:
_3 = entry_19(D)->code_length;
_4 = _3 + 2;
entry_19(D)->code_length = _4;
_5 = entry_19(D)->code_length;
_6 = (long unsigned int) _5;
_7 = _6 * 8;
_8 = entry_19(D)->code;
_9 = realloc (_8, _7);
entry_19(D)->code = _9;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_10 = entry_19(D)->code;
_11 = entry_19(D)->code_end;
_12 = (long unsigned int) _11;
_13 = _12 * 8;
_14 = _10 + _13;
*_14 = word_23(D);
_15 = entry_19(D)->code_end;
_16 = _15 + 1;
entry_19(D)->code_end = _16;
_26 = (unsigned int) _15;
return _26;

=======Mapping node_fun:add_var=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newentry (name_2(D));
return;

=======Mapping node_fun:newentry=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_d_5 = malloc (40);
new_d_5->word = word_6(D);
_1 = root;
new_d_5->next = _1;
root = new_d_5;
_2 = malloc (8);
new_d_5->code = _2;
new_d_5->code_length = 1;
new_d_5->code_end = 0;
return new_d_5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    find Entry point : 20 [0m
[40;34m    used_stmt array stack totalsize of : 0.006168 mb[0m
[40;34m    collect time: : 0.000403 s [0m
[40;34m    algorithm time: 0.133414 s [0m
[40;34m    gimple stmt count : : 176 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +2.4%|     +0.0%|
cplxlower                        |      |      |      |      |     +2.4%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -4.2%|     -1.8%|
copyprop                         |      |    +3|      |      |     -4.4%|     -1.9%|
reassoc              ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.8%|     -0.1%|
forwprop                         |      |      |      |      |     -0.8%|     -0.1%|
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                             |      |      |      |      |     -0.6%|     -0.0%|
dce                              |      |      |      |      |     -0.6%|     -0.0%|
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -16.8%|    -29.8%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -0.5%|     +0.0%|
lim                              |      |      |      |      |     -0.5%|     +0.0%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +20.4%|    +42.5%|
veclower2            ------------|      |      |      |      |          |          |
switchlower                      |      |      |      |      |     -0.2%|     +1.0%|
reassoc                          |      |    +9|      |      |     -0.2%|     +4.2%|
slsr                             |      |      |      |      |          |     +3.0%|
dom                              |      |      |      |      |     +1.7%|     -0.2%|
strlen                           |      |      |      |      |     +1.7%|     -0.2%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.2%|     -0.0%|
forwprop                         |      |      |      |      |     -0.4%|     -0.2%|
phiopt                           |      |      |      |      |     -0.2%|     -0.2%|
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +74.6%|    +49.1%|
into_cfglayout                   |      |      |      |      |     -2.6%|     -0.7%|
jump                             |      |      |      |      |     -2.8%|     -1.0%|
subreg1                          |      |      |      |      |     -0.1%|     -0.3%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.0%|     -1.1%|
ce1                              |      |      |      |      |     -1.1%|     -1.0%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |     +0.4%|     +0.1%|
loop2_done                       |      |      |      |      |     +0.4%|     +0.1%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.7%|     -0.4%|
init-regs                        |      |      |      |      |     -0.7%|     -0.4%|
combine                          |      |      |      |      |     +2.0%|     +1.4%|
ce2                              |      |      |      |      |     +2.0%|     +1.4%|
outof_cfglayout                  |      |      |      |      |     +2.5%|     +0.7%|
split1                           |      |      |      |      |     +2.4%|     +0.7%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.2%|     -0.1%|
reload                           |      |      |      |      |     -5.3%|     -4.9%|
postreload                       |      |      |      |      |     -5.6%|     -5.0%|
split2                           |      |      |      |      |     -0.4%|     +0.1%|
cmpelim                          |      |      |      |      |     -0.1%|     +0.1%|
pro_and_epilogue                 |      |      |      |      |     +7.2%|     +6.7%|
dse2                             |      |      |      |      |     +6.7%|     +6.3%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                              |      |      |      |      |          |     +0.0%|
cprop_hardreg                    |      |      |      |      |     -0.2%|     -0.0%|
rtl_dce                          |      |      |      |      |     -0.2%|     -0.0%|
bbro                             |      |      |      |      |     -0.6%|     -0.2%|
split4                           |      |      |      |      |     -0.6%|     -0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
