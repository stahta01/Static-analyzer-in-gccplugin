In file included from ./benchmarks/binutils/leak_10/binutils_leak_10.c:6:0:
./benchmarks/binutils/leak_10/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/leak_10/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_10/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/leak_10/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/leak_10/binutils_leak_10.c: In function â€˜nextwordâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: implicit declaration of function â€˜isspaceâ€™ [-Wimplicit-function-declaration]
   while (isspace ((unsigned char) *string) || *string == '-')
          ^~~~~~~
./benchmarks/binutils/leak_10/binutils_leak_10.c: In function â€˜compileâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
       if (strcmp (word, "var") == 0)
           ^~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 14
succs:= 11
--------GIMPLE Cond -------
succs:= 14
succs:= 16
--------GIMPLE Cond -------
succs:= 18
--------GIMPLE_SWITCH -------
succs:= 18
--------GIMPLE Cond -------
succs:= 25
--------GIMPLE Cond -------
succs:= 26
succs:= 2
succs:= 10
succs:= 26
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 8
succs:= 16
succs:= 8
succs:= 25
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 13
succs:= 14
succs:= 5
--------GIMPLE Cond -------
succs:= 18
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 18
succs:= 19
succs:= 20
--------GIMPLE Cond -------
succs:= 23
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_16 = VDEF <.MEM_15(D)>
new_d_5 = malloc (40);
# .MEM_20 = VDEF <.MEM_19>
_2 = malloc (8);
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
# VUSE <.MEM_95(D)>
_17 = isspace (_16);
# .MEM_96 = VDEF <.MEM_95(D)>
_20 = malloc (_19);
# .MEM_82 = VDEF <.MEM_12(D)>
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
# VUSE <.MEM_83>
_20 = strcmp (_19, "var");
# .MEM_102 = VDEF <.MEM_83>
string_21 = nextword (string_17, &word);
# .MEM_103 = VDEF <.MEM_102>
new_d_58 = newentry (_22);
# .MEM_104 = VDEF <.MEM_103>
string_23 = nextword (string_21, &word);
 <var_decl 0x7f214bfb5000 word
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    addressable used unsigned DI file ./benchmarks/binutils/leak_10/binutils_leak_10.c line 168 col 9 size <integer_cst 0x7f214c45fbe8 64> unit size <integer_cst 0x7f214c45fc00 8>
    align 64 context <function_decl 0x7f214bf8ab00 main> abstract_origin <var_decl 0x7f214bfa35a0 word>>
# .MEM_86 = VDEF <.MEM_85>
string_27 = nextword (string_17, &word);
# .MEM_87 = VDEF <.MEM_86>
ptr_29 = newentry (_28);
# .MEM_88 = VDEF <.MEM_87>
string_30 = nextword (string_27, &word);
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);
 <var_decl 0x7f214bfb5000 word
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    addressable used unsigned DI file ./benchmarks/binutils/leak_10/binutils_leak_10.c line 168 col 9 size <integer_cst 0x7f214c45fbe8 64> unit size <integer_cst 0x7f214c45fc00 8>
    align 64 context <function_decl 0x7f214bf8ab00 main> abstract_origin <var_decl 0x7f214bfa35a0 word>>
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);
 <var_decl 0x7f214bfb5000 word
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    addressable used unsigned DI file ./benchmarks/binutils/leak_10/binutils_leak_10.c line 168 col 9 size <integer_cst 0x7f214c45fbe8 64> unit size <integer_cst 0x7f214c45fc00 8>
    align 64 context <function_decl 0x7f214bf8ab00 main> abstract_origin <var_decl 0x7f214bfa35a0 word>>
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
# .MEM_14 = VDEF <.MEM_11>
_10 = __printf_chk (1, "%s\n", _1);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:newentry========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
# .MEM_16 = VDEF <.MEM_15(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
In function â€˜newentryâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   return new_d;
          ^
_14 = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   new_d->code_end = 0;
                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   new_d->code_length = 1;
                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   root = new_d;
        ^
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   new_d->next = root;
               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:7: warning: use location
  dict = root;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(21), dict_9(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location
  while (dict != NULL) {
        ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_9 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:8: warning: use location
   dict = dict->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:12: warning: use location
   free(dict->word);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:3: warning: use location
   printf("%s\n", dict->word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = __printf_chk (1, "%s\n", _1);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   new_d->word = word;
               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:14: warning: use location
   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
              ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
# .MEM_20 = VDEF <.MEM_19>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
_14 = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   return new_d;
          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   new_d->code_end = 0;
                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   new_d->code_length = 1;
                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   root = new_d;
        ^
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   new_d->next = root;
               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:7: warning: use location
  dict = root;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(21), dict_9(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location
  while (dict != NULL) {
        ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_9 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:8: warning: use location
   dict = dict->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:12: warning: use location
   free(dict->word);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:3: warning: use location
   printf("%s\n", dict->word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = __printf_chk (1, "%s\n", _1);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   new_d->word = word;
               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f214bf8cd68 type <integer_type 0x7f214c4737e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f214bf8cdb0 type <integer_type 0x7f214c4737e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;44m =======node_fun:nextword========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path nextword  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre_check_funciton:nextword========= [0m
[40;42m =======start_check_funciton:nextword========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>
# .MEM_96 = VDEF <.MEM_95(D)>
_20 = malloc (_19);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*word_71(D) = _20;
In function â€˜nextwordâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
         ^
*word_71(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>
_7 = (int) _6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = isspace (_7);
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: use location
   while (isspace ((unsigned char) *string) || *string == '-')
          ^
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:9: warning: use location
   while (isspace ((unsigned char) *string) || *string == '-')
         ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:9: warning: use location
Cond in fucntion nextword basic block 8
 ================== possible direct basic block ================= 
from nextword basic block 3
 ================== possible direct basic block ================= 
from nextword basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = isspace (_16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:15: warning: use location
       while (!isspace ((unsigned char) *string))
               ^
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:13: warning: use location
       while (!isspace ((unsigned char) *string))
             ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:13: warning: use location
Cond in fucntion nextword basic block 16
 ================== possible direct basic block ================= 
from nextword basic block 15
 ================== possible direct basic block ================= 
from nextword basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>
_19 = (long unsigned int) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
*word_71(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:nextword========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:__fprintf_chk========= [0m
[40;33m =======POP node_fun stack:__fprintf_chk========= [0m
[40;42m =======pre add _ fucntion:nextword========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path nextword  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre_check_funciton:nextword========= [0m
[40;42m =======start_check_funciton:nextword========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>
# .MEM_96 = VDEF <.MEM_95(D)>
_20 = malloc (_19);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*word_71(D) = _20;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
*word_71(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6168
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _20 = malloc (_19);
    version 20
    ptr-info 0x7f214bfbc168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>
_7 = (int) _6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_94>
return _56;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95(D)>
_8 = isspace (_7);
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = isspace (_7);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:10: warning: use location
   while (isspace ((unsigned char) *string) || *string == '-')
          ^
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_94>
return _56;
In function â€˜nextwordâ€™:
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:9: warning: use location
   while (isspace ((unsigned char) *string) || *string == '-')
         ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:87:9: warning: use location
Cond in fucntion nextword basic block 8
 ================== possible direct basic block ================= 
from nextword basic block 3
 ================== possible direct basic block ================= 
from nextword basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c467e10
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _7 = (int) _6;
    version 7>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = isspace (_16);
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:15: warning: use location
       while (!isspace ((unsigned char) *string))
               ^
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:13: warning: use location
       while (!isspace ((unsigned char) *string))
             ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:123:13: warning: use location
Cond in fucntion nextword basic block 16
 ================== possible direct basic block ================= 
from nextword basic block 15
 ================== possible direct basic block ================= 
from nextword basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6048
    type <integer_type 0x7f214c4735e8 int public SI
        size <integer_cst 0x7f214c45fe28 constant 32>
        unit size <integer_cst 0x7f214c45fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f214c4735e8 precision 32 min <integer_cst 0x7f214c45fde0 -2147483648> max <integer_cst 0x7f214c45fdf8 2147483647>
        pointer_to_this <pointer_type 0x7f214c47aa80>>
   
    def_stmt _16 = (int) _15;
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>
_19 = (long unsigned int) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_20 = malloc (_19);
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:20: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
                    ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
*word_71(D) = _20;
./benchmarks/binutils/leak_10/binutils_leak_10.c:131:9: warning: use location
   *word = (char *) malloc (length + 1); /* allocation site */
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfa6120
    type <integer_type 0x7f214c4737e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f214c473738 precision 64 min <integer_cst 0x7f214c45feb8 0> max <integer_cst 0x7f214c461500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f214c47f9d8>>
   
    def_stmt _19 = (long unsigned int) _18;
    version 19>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:nextword========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:newentry========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path newentry  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:newentry========= [0m
[40;42m =======start_check_funciton:newentry========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
# .MEM_16 = VDEF <.MEM_15(D)>
new_d_5 = malloc (40);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   return new_d;
          ^
_14 = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   new_d->code_end = 0;
                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   new_d->code_length = 1;
                      ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   root = new_d;
        ^
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   new_d->next = root;
               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:7: warning: use location
  dict = root;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(21), dict_9(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location
  while (dict != NULL) {
        ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_9 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:8: warning: use location
   dict = dict->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:12: warning: use location
   free(dict->word);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:3: warning: use location
   printf("%s\n", dict->word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = __printf_chk (1, "%s\n", _1);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   new_d->word = word;
               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
new_d_5 = malloc (40);
./benchmarks/binutils/leak_10/binutils_leak_10.c:37:14: warning: use location
   dict_type *new_d = (dict_type *) malloc (sizeof (dict_type));
              ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c4678b8
    type <pointer_type 0x7f214bf893f0
        type <record_type 0x7f214bf89348 dict_type BLK
            size <integer_cst 0x7f214c518c30 constant 320>
            unit size <integer_cst 0x7f214bf8c1c8 constant 40>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf891f8 fields <field_decl 0x7f214bf8b558 word> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf893f0> chain <type_decl 0x7f214bf8b5f0 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf94498>>
    var <var_decl 0x7f214d1f4bd0 new_d>
    def_stmt new_d_5 = malloc (40);
    version 5
    ptr-info 0x7f214bfbc120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
# .MEM_20 = VDEF <.MEM_19>
_2 = malloc (8);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
               ^
new_d_5->code = _2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:15: warning: use location
_14 = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:44:10: warning: use location
   return new_d;
          ^
new_d_5->code_end = 0;
./benchmarks/binutils/leak_10/binutils_leak_10.c:43:19: warning: use location
   new_d->code_end = 0;
                   ^
new_d_5->code_length = 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:42:22: warning: use location
   new_d->code_length = 1;
                      ^
root = new_d_5;
./benchmarks/binutils/leak_10/binutils_leak_10.c:40:8: warning: use location
   root = new_d;
        ^
_1 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
   new_d->next = root;
               ^
new_d_5->next = _1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:39:15: warning: use location
dict_7 = root;
./benchmarks/binutils/leak_10/binutils_leak_10.c:246:7: warning: use location
  dict = root;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_3 = PHI <dict_7(21), dict_9(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (dict_3 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location
  while (dict != NULL) {
        ^
if (dict_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:248:8: warning: use location

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dict_9 = dict_3->next;
./benchmarks/binutils/leak_10/binutils_leak_10.c:251:8: warning: use location
   dict = dict->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:12: warning: use location
   free(dict->word);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = dict_3->word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:249:3: warning: use location
   printf("%s\n", dict->word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = __printf_chk (1, "%s\n", _1);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
   new_d->word = word;
               ^
new_d_5->word = word_6(D);
./benchmarks/binutils/leak_10/binutils_leak_10.c:38:15: warning: use location
_2 = malloc (8);
./benchmarks/binutils/leak_10/binutils_leak_10.c:41:33: warning: use location
   new_d->code = (stinst_type *) malloc (sizeof (stinst_type));
                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214c467870
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _2 = malloc (8);
    version 2
    ptr-info 0x7f214bfbc108>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f214bf8cd68 type <integer_type 0x7f214c4737e0 long unsigned int> constant 40>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f214bf8cdb0 type <integer_type 0x7f214c4737e0 long unsigned int> constant 8>
[40;33m =======POP node_fun stack:newentry========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f214bfbd360
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _67 = realloc (_66, _65);
    version 67
    ptr-info 0x7f214bfbc7f8>
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
this stmt is child function---realloc-----

 ================== find ================== 
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^
if (_59 == _60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = __printf_chk (1, "%d\n", _47);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfbd360
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _67 = realloc (_66, _65);
    version 67
    ptr-info 0x7f214bfbc7f8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = __printf_chk (1, "%d\n", _40);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfbd360
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _67 = realloc (_66, _65);
    version 67
    ptr-info 0x7f214bfbc7f8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = __printf_chk (1, "%d\n", _37);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfbd360
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _67 = realloc (_66, _65);
    version 67
    ptr-info 0x7f214bfbc7f8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfbd360
    type <pointer_type 0x7f214c47a0a8
        type <void_type 0x7f214c473f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f214c47a0a8>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214c47fbd0>>
   
    def_stmt _67 = realloc (_66, _65);
    version 67
    ptr-info 0x7f214bfbc7f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_91 = VDEF <.MEM_78>
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f214bfb32c0
    type <pointer_type 0x7f214bf943f0
        type <array_type 0x7f214bf94348 type <integer_type 0x7f214bf89888 char>
            BLK
            size <integer_cst 0x7f214bf8c318 constant 312>
            unit size <integer_cst 0x7f214bf8c378 constant 39>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f214bf942a0>
            pointer_to_this <pointer_type 0x7f214bf943f0>>
        unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f214c471080 type <array_type 0x7f214bf94348>
        readonly constant static "var second : stored_in_dict 5 ; : next\000">
    ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17 start: ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17 finish: ./benchmarks/binutils/leak_10/binutils_leak_10.c:243:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f214c45ff90 type <integer_type 0x7f214c4735e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f214bfb1cf0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _19 = word;
    version 19
    ptr-info 0x7f214bfbc570>
# VUSE <.MEM_83>
_19 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_83>
_20 = strcmp (_19, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = strcmp (_19, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
       if (strcmp (word, "var") == 0)
           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1cf0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _19 = word;
    version 19
    ptr-info 0x7f214bfbc570>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
       if (strcmp (word, "var") == 0)
          ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1cf0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _19 = word;
    version 19
    ptr-info 0x7f214bfbc570>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
string_17 = PHI <string_16(2), string_57(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_17 = PHI <string_16(2), string_57(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^
if (_54 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^
if (string_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
Cond in fucntion main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_21 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_23 = nextword (string_21, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = __printf_chk (1, "string: %s\n", string_17);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1c60
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_17 = PHI <string_16(2), string_57(17)>
    version 17
    ptr-info 0x7f214bfbc558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb1dc8
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _22 = word;
    version 22
    ptr-info 0x7f214bfbc5a0>
# VUSE <.MEM_102>
_22 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_d_58 = newentry (_22);
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:14: warning: use location
   dict_type *new_d = newentry (name);
              ^
this stmt is child function---newentry-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1dc8
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _22 = word;
    version 22
    ptr-info 0x7f214bfbc5a0>
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_d_58 = newentry (_22);
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:14: warning: use location
this stmt is child function---newentry-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1dc8
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _22 = word;
    version 22
    ptr-info 0x7f214bfbc5a0>
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1dc8
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _22 = word;
    version 22
    ptr-info 0x7f214bfbc5a0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
# .MEM_102 = VDEF <.MEM_83>
string_21 = nextword (string_17, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^
if (_54 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^
if (string_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
Cond in fucntion main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_21 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_23 = nextword (string_21, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = __printf_chk (1, "string: %s\n", string_17);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_12(D)>
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
bb index := 2
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_12(D)>
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
bb index := 2
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:10: warning: use location
   string = nextword (string, &word);
          ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_83>
_19 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
       if (strcmp (word, "var") == 0)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_83>
_20 = strcmp (_19, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = strcmp (_19, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
       if (strcmp (word, "var") == 0)
           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
       if (strcmp (word, "var") == 0)
          ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:4: warning: use location
    add_var (word);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
       else if (word[0] == ':')
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_25 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
       else if (word[0] == ':')
               ^
if (_25 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:10: warning: use location
    ptr = newentry (word);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29 = newentry (_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:8: warning: use location
    ptr = newentry (word);
        ^
this stmt is child function---newentry-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^
if (_59 == _60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
this stmt is child function---realloc-----

 ================== find ================== 
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = __printf_chk (1, "%d\n", _47);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = __printf_chk (1, "%d\n", _40);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = __printf_chk (1, "%d\n", _37);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = *_31;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = (int) _32;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = _34 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^
if (_46 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1d80
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_21 = nextword (string_17, &word);
    version 21
    ptr-info 0x7f214bfbc588>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_86 = VDEF <.MEM_85>
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_88 = VDEF <.MEM_87>
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_86>
_28 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:10: warning: use location
    ptr = newentry (word);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_87 = VDEF <.MEM_86>
ptr_29 = newentry (_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:8: warning: use location
    ptr = newentry (word);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_91 = VDEF <.MEM_78>
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_31 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_32 = *_31;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_33 = (int) _32;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_34 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_35 = _34 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_89>
_39 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_89>
_39 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_97>
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_97>
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_97>
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
# VUSE <.MEM_86>
_28 = word;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29 = newentry (_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:8: warning: use location
    ptr = newentry (word);
        ^
this stmt is child function---newentry-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^
if (_59 == _60)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
this stmt is child function---realloc-----

 ================== find ================== 
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = __printf_chk (1, "%d\n", _47);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = __printf_chk (1, "%d\n", _40);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = __printf_chk (1, "%d\n", _37);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1f78
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
   
    def_stmt _28 = word;
    version 28
    ptr-info 0x7f214bfbc618>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (_2);
./benchmarks/binutils/leak_10/binutils_leak_10.c:250:3: warning: use location
   free(dict->word);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_87 = VDEF <.MEM_86>
ptr_29 = newentry (_28);
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:8: warning: use location
    ptr = newentry (word);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_95 = VDEF <.MEM_94>
ptr_29->code_end = _74;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_59 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:12: warning: use location
   if (entry->code_end == entry->code_length)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_59 == _60)
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:6: warning: use location
   if (entry->code_end == entry->code_length)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_69 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_70 = (long unsigned int) _69;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:20: warning: use location
   entry->code[entry->code_end] = word;
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_71 = _70 * 8;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_72 = _68 + _71;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:14: warning: use location
   entry->code[entry->code_end] = word;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_94>
_73 = ptr_29->code_end;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:15: warning: use location
   return entry->code_end++;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
_75 = (unsigned int) _73;
./benchmarks/binutils/leak_10/binutils_leak_10.c:68:25: warning: use location
   return entry->code_end++;
                         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_76>
_68 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:8: warning: use location
   entry->code[entry->code_end] = word;
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_66 = ptr_29->code;
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:42: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: use location
  (stinst_type *) realloc ((char *) (entry->code),
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_93 = VDEF <.MEM_92>
ptr_29->code = _67;
./benchmarks/binutils/leak_10/binutils_leak_10.c:62:19: warning: use location
       entry->code =
                   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_91>
_63 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_64 = (long unsigned int) _63;
./benchmarks/binutils/leak_10/binutils_leak_10.c:64:11: warning: use location
      entry->code_length * sizeof (word_type));
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_61 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_62 = _61 + 2;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_91 = VDEF <.MEM_78>
ptr_29->code_length = _62;
./benchmarks/binutils/leak_10/binutils_leak_10.c:61:26: warning: use location
       entry->code_length += 2;
                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_60 = ptr_29->code_length;
./benchmarks/binutils/leak_10/binutils_leak_10.c:59:31: warning: use location
   if (entry->code_end == entry->code_length)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_79>
_47 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:228:3: warning: use location
   __USE(ptr);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_100 = VDEF <.MEM_79>
_48 = __printf_chk (1, "%d\n", _47);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_40 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:219:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_97 = VDEF <.MEM_78>
_41 = __printf_chk (1, "%d\n", _40);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# VUSE <.MEM_78>
_37 = MEM[(int *)ptr_29];
./benchmarks/binutils/leak_10/binutils_leak_10.c:214:7: warning: use location
       __USE(ptr);
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_92 = VDEF <.MEM_91>
_67 = realloc (_66, _65);
./benchmarks/binutils/leak_10/binutils_leak_10.c:63:18: warning: Use after free error!: free location 
  (stinst_type *) realloc ((char *) (entry->code),
                  ^
# .MEM_89 = VDEF <.MEM_78>
_38 = __printf_chk (1, "%d\n", _37);

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
# .MEM_86 = VDEF <.MEM_85>
string_27 = nextword (string_17, &word);

 ================== trace ptable================== 
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---nextword-----
this other function ------nextword-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^
if (_54 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^
if (string_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
Cond in fucntion main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_21 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_23 = nextword (string_21, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = __printf_chk (1, "string: %s\n", string_17);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_12(D)>
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
bb index := 2
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_12(D)>
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
bb index := 2
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:169:10: warning: use location
   string = nextword (string, &word);
          ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_83>
_19 = word;
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
       if (strcmp (word, "var") == 0)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_83>
_20 = strcmp (_19, "var");
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = strcmp (_19, "var");
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:11: warning: use location
       if (strcmp (word, "var") == 0)
           ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
       if (strcmp (word, "var") == 0)
          ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:174:10: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:179:4: warning: use location
    add_var (word);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_d_58 = newentry (_22);
./benchmarks/binutils/leak_10/binutils_leak_10.c:51:14: warning: use location
   dict_type *new_d = newentry (name);
              ^
this stmt is child function---newentry-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>
trace fucntion name:newentry 
[40;44m =======trace_function_path newentry  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:newentry========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location
       else if (word[0] == ':')
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_25 == 58)
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
       else if (word[0] == ':')
               ^
if (_25 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:182:15: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
   free(word);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:10: warning: use location
    ptr = newentry (word);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = *_31;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = (int) _32;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = _34 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (void (*<Ta03>) ()) _35;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:7: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^
if (_46 != 59)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_55 = word;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_56 = *_55;
bb index := 20
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb1f30
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_27 = nextword (string_17, &word);
    version 27
    ptr-info 0x7f214bfbc600>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_84 = VDEF <.MEM_83>
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_86 = VDEF <.MEM_85>
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_88 = VDEF <.MEM_87>
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_101 = VDEF <.MEM_100>
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# .MEM_99 = VDEF <.MEM_77>
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_86>
_28 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:190:10: warning: use location
    ptr = newentry (word);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_31 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_32 = *_31;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_33 = (int) _32;
./benchmarks/binutils/leak_10/binutils_leak_10.c:195:20: warning: use location
        switch (word[0])
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_34 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_35 = _34 + 1;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:51: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
                                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
_36 = (void (*<Ta03>) ()) _35;
./benchmarks/binutils/leak_10/binutils_leak_10.c:200:7: warning: use location
       add_to_definition (ptr, (stinst_type) (word + 1));
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# .MEM_94 = VDEF <.MEM_76>
*_72 = _36;
./benchmarks/binutils/leak_10/binutils_leak_10.c:66:32: warning: use location
   entry->code[entry->code_end] = word;
                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_89>
_39 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_97>
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_97>
_42 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: use location
       free(word);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_45 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_78>
_46 = *_45;
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:15: warning: use location
    while (word[0] != ';')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
if (_46 != 59)
./benchmarks/binutils/leak_10/binutils_leak_10.c:193:10: warning: use location
    while (word[0] != ';')
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_55 = word;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_85 = VDEF <.MEM_83>
free (_26);
./benchmarks/binutils/leak_10/binutils_leak_10.c:186:3: warning: Use after free error!: free location 
   free(word);
   ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
free (_39);
./benchmarks/binutils/leak_10/binutils_leak_10.c:216:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_98 = VDEF <.MEM_97>
free (_42);
./benchmarks/binutils/leak_10/binutils_leak_10.c:220:7: warning: Use after free error!: free location 
       free(word);
       ^
# VUSE <.MEM_81>
_56 = *_55;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:35: warning: use location
   while (string && *string && word[0])
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
string_43 = PHI <string_30(6), string_44(13)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_17 = PHI <string_16(2), string_57(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^
if (_54 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^
if (string_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
Cond in fucntion main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_21 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_23 = nextword (string_21, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = __printf_chk (1, "string: %s\n", string_17);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb73f0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_43 = PHI <string_30(6), string_44(13)>
    version 43
    ptr-info 0x7f214bfbc6f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
string_49 = PHI <string_44(13), string_43(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_50 = nextword (string_49, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:229:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
bb index := 17
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_57 = PHI <string_23(4), string_50(15), string_17(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
string_17 = PHI <string_16(2), string_57(17)>
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_17 = PHI <string_16(2), string_57(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_81>
_54 = *string_17;
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = *string_17;
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:20: warning: use location
   while (string && *string && word[0])
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 0)
bb index := 19
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_54 != 0)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
   while (string && *string && word[0])
                 ^
if (_54 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:17: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_94>
return _56;
lto1: warning: use location
beacuse in succ := 28 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 28

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (string_17 != 0B)
bb index := 18
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (string_17 != 0B)
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
   while (string && *string && word[0])
         ^
if (string_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_10/binutils_leak_10.c:170:9: warning: use location
Cond in fucntion main basic block 18
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = string_17 + 18446744073709551615;
./benchmarks/binutils/leak_10/binutils_leak_10.c:233:4: warning: use location
    fprintf (stderr, "syntax error at %s\n", string - 1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_27 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:187:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_30 = nextword (string_27, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:191:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_43 = PHI <string_30(6), string_44(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_49 = PHI <string_44(13), string_43(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_44 = nextword (string_43, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:224:12: warning: use location
     string = nextword (string, &word);
            ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_21 = nextword (string_17, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:176:11: warning: use location
    string = nextword (string, &word);
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
string_23 = nextword (string_21, &word);
./benchmarks/binutils/leak_10/binutils_leak_10.c:180:11: warning: use location
    string = nextword (string, &word); /* memory leak */
           ^
this stmt is child function---nextword-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:nextword 
[40;44m =======trace_function_path nextword  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:nextword========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;46m =======add node_fun stack:isspace========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
_18 = __printf_chk (1, "string: %s\n", string_17);
bb index := 3
# VUSE <.MEM_11>
return 0;
<built-in>: warning: use location
beacuse in succ := 24 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = __printf_chk (1, "string: %s\n", string_17);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f214bfb75a0
    type <pointer_type 0x7f214bf89930
        type <integer_type 0x7f214bf89888 char public string-flag QI
            size <integer_cst 0x7f214c45fcd8 constant 8>
            unit size <integer_cst 0x7f214c45fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f214c4733f0 precision 8 min <integer_cst 0x7f214bf8c180 -128> max <integer_cst 0x7f214bf8c168 127>
            pointer_to_this <pointer_type 0x7f214bf89930>>
        public unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
        pointer_to_this <pointer_type 0x7f214bf94a80>>
    var <var_decl 0x7f214bfa3f30 string>
    def_stmt string_49 = PHI <string_44(13), string_43(14)>
    version 49
    ptr-info 0x7f214bfbc738>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f214bfb7678
    type <pointer_type 0x7f214bf91d20
        type <record_type 0x7f214bf91c78 FILE BLK
            size <integer_cst 0x7f214bf8c1e0 constant 1728>
            unit size <integer_cst 0x7f214bf8c300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f214bf91b28 fields <field_decl 0x7f214bf93c78 _flags> context <translation_unit_decl 0x7f214c46a168 ./benchmarks/binutils/leak_10/binutils_leak_10.c>
            pointer_to_this <pointer_type 0x7f214bf91d20> chain <type_decl 0x7f214bf93d10 D.4039>>
        unsigned DI
        size <integer_cst 0x7f214c45fbe8 constant 64>
        unit size <integer_cst 0x7f214c45fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f214bf95000>>
   
    def_stmt _52 = stderr;
    version 52
    ptr-info 0x7f214bfbc780>
# VUSE <.MEM_83>
_52 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:newentry=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
new_d_5 = malloc (40);
new_d_5->word = word_6(D);
_1 = root;
new_d_5->next = _1;
root = new_d_5;
_2 = malloc (8);
new_d_5->code = _2;
new_d_5->code_length = 1;
new_d_5->code_end = 0;
_14 = new_d_5;
return new_d_5;

=======Mapping node_fun:nextword=========
=======is loop:0=========

 bb index 2 
<bb 2> [6.05%]:
if (string_61(D) == 0B)
  goto <bb 28>; [4.07%]
else
  goto <bb 8>; [95.93%]

=======is loop:1=========

 bb index 3 
<bb 3> [71.53%]:
_1 = *string_43;
if (_1 == 45)
  goto <bb 5>; [20.97%]
else
  goto <bb 6>; [79.03%]

=======is loop:1=========

 bb index 4 
<bb 4> [85.00%]:
string_91 = string_42 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [100.00%]:
# string_42 = PHI <string_43(3), string_91(4)>
_90 = *string_42;
_2 = _90 != 0;
_3 = _90 != 10;
_4 = _2 & _3;
if (_4 != 0)
  goto <bb 4>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [56.53%]:
string_89 = string_43 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [71.53%]:
# string_60 = PHI <string_42(5), string_89(6)>

=======is loop:1=========

 bb index 8 
<bb 8> [77.33%]:
# string_43 = PHI <string_61(D)(2), string_60(7)>
_5 = *string_43;
_6 = (unsigned char) _5;
_7 = (int) _6;
_8 = isspace (_7);
if (_8 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [38.67%]:
_9 = *string_43;
if (_9 == 45)
  goto <bb 3>; [85.00%]
else
  goto <bb 10>; [15.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [5.80%]:
_10 = *string_43;
if (_10 == 0)
  goto <bb 28>; [9.00%]
else
  goto <bb 11>; [91.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [5.28%]:
word_start_63 = string_43;
_11 = *string_43;
if (_11 == 34)
  goto <bb 12>; [34.00%]
else
  goto <bb 16>; [66.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [11.96%]:
# string_44 = PHI <string_43(11), string_45(14)>
# length_52 = PHI <0(11), length_53(14)>
string_66 = string_44 + 1;
length_67 = length_52 + 1;
_12 = MEM[(char *)string_44 + 1B];
if (_12 == 92)
  goto <bb 13>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [4.07%]:
string_68 = &MEM[(void *)string_44 + 3B];
length_69 = length_52 + 3;

=======is loop:1=========

 bb index 14 
<bb 14> [11.96%]:
# string_45 = PHI <string_66(12), string_68(13)>
# length_53 = PHI <length_67(12), length_69(13)>
_13 = *string_45;
if (_13 != 34)
  goto <bb 12>; [85.00%]
else
  goto <bb 17>; [15.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [19.74%]:
string_64 = string_46 + 1;
length_65 = length_54 + 1;

=======is loop:1=========

 bb index 16 
<bb 16> [23.22%]:
# string_46 = PHI <string_43(11), string_64(15)>
# length_54 = PHI <0(11), length_65(15)>
_14 = *string_46;
_15 = (unsigned char) _14;
_16 = (int) _15;
_17 = isspace (_16);
if (_17 == 0)
  goto <bb 15>; [85.00%]
else
  goto <bb 17>; [15.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [5.28%]:
# string_47 = PHI <string_45(14), string_46(16)>
# length_55 = PHI <length_53(14), length_54(16)>
_18 = length_55 + 1;
_19 = (long unsigned int) _18;
_20 = malloc (_19);
*word_71(D) = _20;
dst_73 = *word_71(D);
src_74 = string_43;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [29.90%]:
_21 = (sizetype) idx_49;
_22 = string_43 + _21;
_23 = *_22;
if (_23 == 92)
  goto <bb 19>; [34.00%]
else
  goto <bb 23>; [66.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [10.17%]:
_24 = (sizetype) idx_49;
_25 = _24 + 1;
_26 = string_43 + _25;
_27 = *_26;
_28 = (int) _27;
switch (_27) <default: <L2> [33.33%], case 34: <L1> [33.33%], case 92: <L1> [33.33%], case 110: <L0> [33.33%]>

=======is loop:1=========

 bb index 20 
<L0> [3.39%]:
_29 = dst_51;
dst_80 = dst_51 + 1;
*_29 = 10;
idx_82 = idx_49 + 1;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 21 
<L1> [3.39%]:
_30 = (sizetype) idx_49;
_31 = _30 + 1;
_32 = string_43 + _31;
_33 = dst_51;
dst_83 = dst_51 + 1;
_34 = *_32;
*_33 = _34;
idx_85 = idx_49 + 1;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 22 
<L2> [3.39%]:
_35 = dst_51;
dst_86 = dst_51 + 1;
*_35 = 92;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [19.74%]:
_36 = (sizetype) idx_49;
_37 = string_43 + _36;
_38 = dst_51;
dst_78 = dst_51 + 1;
_39 = *_37;
*_38 = _39;

=======is loop:1=========

 bb index 24 
<bb 24> [29.90%]:
# idx_48 = PHI <idx_82(20), idx_85(21), idx_49(22), idx_49(23)>
# dst_50 = PHI <dst_80(20), dst_83(21), dst_86(22), dst_78(23)>
idx_88 = idx_48 + 1;

=======is loop:1=========

 bb index 25 
<bb 25> [35.18%]:
# idx_49 = PHI <0(17), idx_88(24)>
# dst_51 = PHI <dst_73(17), dst_50(24)>
if (idx_49 < length_55)
  goto <bb 18>; [85.00%]
else
  goto <bb 26>; [15.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [5.28%]:
_40 = dst_51;
dst_75 = dst_51 + 1;
*_40 = 0;
_41 = *string_47;
if (_41 != 0)
  goto <bb 27>; [91.00%]
else
  goto <bb 28>; [9.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [4.80%]:
_77 = string_47 + 1;

=======is loop:0=========

 bb index 28 
<bb 28> [6.04%]:
# _56 = PHI <0B(2), 0B(10), 0B(26), _77(27)>
return _56;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [14.27%]:
string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.74%]:
_18 = __printf_chk (1, "string: %s\n", string_17);
_19 = word;
_20 = strcmp (_19, "var");
if (_20 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [28.29%]:
string_21 = nextword (string_17, &word);
_22 = word;
new_d_58 = newentry (_22);
string_23 = nextword (string_21, &word);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [57.44%]:
_24 = word;
_25 = *_24;
if (_25 == 58)
  goto <bb 6>; [20.97%]
else
  goto <bb 16>; [79.03%]

=======is loop:1=========

 bb index 6 
<bb 6> [12.05%]:
_26 = word;
free (_26);
string_27 = nextword (string_17, &word);
_28 = word;
ptr_29 = newentry (_28);
string_30 = nextword (string_27, &word);
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [77.13%]:
_31 = word;
_32 = *_31;
_33 = (int) _32;
switch (_32) <default: <L2> [33.33%], case 34: <L0> [33.33%], case 48 ... 57: <L1> [33.33%]>

=======is loop:1=========

 bb index 8 
<L0> [25.71%]:
_34 = word;
_35 = _34 + 1;
_36 = (void (*<Ta03>) ()) _35;
_59 = ptr_29->code_end;
_60 = ptr_29->code_length;
if (_59 == _60)
  goto <bb 9>; [22.95%]
else
  goto <bb 10>; [77.05%]

=======is loop:1=========

 bb index 9 
<bb 9> [5.90%]:
_61 = ptr_29->code_length;
_62 = _61 + 2;
ptr_29->code_length = _62;
_63 = ptr_29->code_length;
_64 = (long unsigned int) _63;
_65 = _64 * 8;
_66 = ptr_29->code;
_67 = realloc (_66, _65);
ptr_29->code = _67;

=======is loop:1=========

 bb index 10 
<bb 10> [25.71%]:
_68 = ptr_29->code;
_69 = ptr_29->code_end;
_70 = (long unsigned int) _69;
_71 = _70 * 8;
_72 = _68 + _71;
*_72 = _36;
_73 = ptr_29->code_end;
_74 = _73 + 1;
ptr_29->code_end = _74;
_75 = (unsigned int) _73;
_96 = _75;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 11 
<L1> [25.71%]:
_37 = MEM[(int *)ptr_29];
_38 = __printf_chk (1, "%d\n", _37);
_39 = word;
free (_39);
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 12 
<L2> [25.71%]:
_40 = MEM[(int *)ptr_29];
_41 = __printf_chk (1, "%d\n", _40);
_42 = word;
free (_42);

=======is loop:1=========

 bb index 13 
<bb 13> [77.12%]:
string_44 = nextword (string_43, &word);
if (string_44 == 0B)
  goto <bb 15>; [7.50%]
else
  goto <bb 14>; [92.50%]

=======is loop:1=========

 bb index 14 
<bb 14> [83.39%]:
# string_43 = PHI <string_30(6), string_44(13)>
_45 = word;
_46 = *_45;
if (_46 != 59)
  goto <bb 7>; [92.50%]
else
  goto <bb 15>; [7.50%]

=======is loop:1=========

 bb index 15 
<bb 15> [12.04%]:
# string_49 = PHI <string_44(13), string_43(14)>
_47 = MEM[(int *)ptr_29];
_48 = __printf_chk (1, "%d\n", _47);
string_50 = nextword (string_49, &word);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [45.40%]:
_51 = string_17 + 18446744073709551615;
_52 = stderr;
_53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

=======is loop:1=========

 bb index 17 
<bb 17> [85.73%]:
# string_57 = PHI <string_23(4), string_50(15), string_17(16)>

=======is loop:1=========

 bb index 18 
<bb 18> [100.00%]:
# string_17 = PHI <string_16(2), string_57(17)>
if (string_17 != 0B)
  goto <bb 19>; [95.00%]
else
  goto <bb 21>; [5.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [95.00%]:
_54 = *string_17;
if (_54 != 0)
  goto <bb 20>; [95.00%]
else
  goto <bb 21>; [5.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [90.25%]:
_55 = word;
_56 = *_55;
if (_56 != 0)
  goto <bb 3>; [95.00%]
else
  goto <bb 21>; [5.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [14.26%]:
word ={v} {CLOBBER};
dict_7 = root;
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [80.82%]:
_1 = dict_3->word;
_10 = __printf_chk (1, "%s\n", _1);
_2 = dict_3->word;
free (_2);
dict_9 = dict_3->next;

=======is loop:1=========

 bb index 23 
<bb 23> [95.08%]:
# dict_3 = PHI <dict_7(21), dict_9(22)>
if (dict_3 != 0B)
  goto <bb 22>; [85.00%]
else
  goto <bb 24>; [15.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [14.26%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 7104 [0m
[40;34m    collect time: : 0.000426 s [0m
[40;34m    algorithm time: 0.058252 s [0m
[40;34m    gimple stmt count : : 182 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
