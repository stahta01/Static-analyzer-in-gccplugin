In file included from ./benchmarks/binutils/leak_8/binutils_leak_8.c:6:0:
./benchmarks/binutils/leak_8/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/leak_8/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_8/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/leak_8/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
In file included from ./benchmarks/binutils/leak_8/binutils_leak_8.c:8:0:
./benchmarks/binutils/leak_8/../include/bfd.h: At top level:
./benchmarks/binutils/leak_8/../include/bfd.h:55:1: warning: useless storage class specifier in empty declaration
 };
 ^
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function â€˜bfd_get_section_contentsâ€™:
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:3: warning: implicit declaration of function â€˜memsetâ€™ [-Wimplicit-function-declaration]
   memset (location, 0, 4);
   ^~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:3: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:11: warning: passing argument 1 of â€˜memsetâ€™ discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
   memset (location, 0, 4);
           ^~~~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:11: note: expected â€˜void *â€™ but argument is of type â€˜const void *â€™
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function â€˜copy_sectionâ€™:
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:4: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™
    memset (memhunk, 0, 4);
    ^~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:4: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function â€˜mainâ€™:
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
succs:= 9
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 14
succs:= 15
--------GIMPLE Cond -------
succs:= 15
succs:= 17
succs:= 14
succs:= 17
--------GIMPLE Cond -------
succs:= 20
--------GIMPLE Cond -------
succs:= 20
succs:= 22
succs:= 5
succs:= 10
succs:= 13
succs:= 22
--------GIMPLE Cond -------
succs:= 25
--------GIMPLE Cond -------
succs:= 26
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 26
succs:= 27
succs:= 28
succs:= 28
succs:= 27
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
succs:= 32
succs:= 2
--------GIMPLE Cond -------
succs:= 34
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_20 = VDEF <.MEM_17(D)>
_13 = __printf_chk (1, "bfd_error_no_memory\n");
# .MEM_18 = VDEF <.MEM_17(D)>
ptr_11 = malloc (size_8(D));
# .MEM_19 = VDEF <.MEM_18>
_14 = __printf_chk (1, "bfd_error_no_memory\n");
# .MEM_13 = VDEF <.MEM_12(D)>
_10 = __printf_chk (1, "%d\n", _1);
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = time (0B);
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
# .MEM_9 = VDEF <.MEM_8>
_3 = rand ();
# .MEM_72 = VDEF <.MEM_10>
_13 = rand ();
# .MEM_85 = VDEF <.MEM_72>
p_28 = bfd_malloc (4);
# .MEM_88 = VDEF <.MEM_86>
memset (p_29, 0, 4);
# .MEM_87 = VDEF <.MEM_86>
_40 = rand ();
# .MEM_77 = VDEF <.MEM_72>
compressed_buffer_32 = bfd_malloc (4);
# .MEM_78 = VDEF <.MEM_77>
_33 = rand ();
# .MEM_79 = VDEF <.MEM_78>
p_35 = bfd_malloc (4);
# .MEM_83 = VDEF <.MEM_72>
p_37 = bfd_malloc (4);
# .MEM_93 = VDEF <.MEM_64>
_45 = rand ();
# .MEM_94 = VDEF <.MEM_93>
contents_50 = bfd_malloc (4);
# .MEM_95 = VDEF <.MEM_65>
_53 = __printf_chk (1, "%d\n", _52);
# .MEM_96 = VDEF <.MEM_66>
_54 = rand ();
# .MEM_98 = VDEF <.MEM_67>
_19 = __printf_chk (1, "%d\n", _18);
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
# .MEM_73 = VDEF <.MEM_72>
memhunk_23 = malloc (4);
# .MEM_74 = VDEF <.MEM_73>
memset (memhunk_23, 0, 4);
# .MEM_75 = VDEF <.MEM_74>
_24 = bfd_set_section_contents (memhunk_23);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:bfd_malloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>
# .MEM_18 = VDEF <.MEM_17(D)>
ptr_11 = malloc (size_8(D));

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
In function â€˜bfd_mallocâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================
_5 = PHI <0B(3), ptr_11(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 38

======================================================================
_12 = ptr_11;
./benchmarks/binutils/leak_8/binutils_leak_8.c:27:10: warning: use location
   return ptr;
          ^
_2 = ptr_11 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   if (ptr == NULL && sz != 0)
           ^
_4 = _2 & _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:19: warning: use location
   if (ptr == NULL && sz != 0)
                   ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   if (ptr == NULL && sz != 0)
      ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
Cond in fucntion bfd_malloc basic block 4
 ================== possible direct basic block ================= 
from bfd_malloc basic block 5
 ================== possible direct basic block ================= 
from bfd_malloc basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ptr_11 = malloc (size_8(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:7: warning: use location
   ptr = malloc (sz); // allocation site
       ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb151b69f90 type <integer_type 0x7fb151b7d5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = size_8(D) != 0;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:25: warning: use location
   if (ptr == NULL && sz != 0)
                         ^
_4 = _2 & _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:19: warning: use location
   if (ptr == NULL && sz != 0)
                   ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   if (ptr == NULL && sz != 0)
      ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
Cond in fucntion bfd_malloc basic block 4
 ================== possible direct basic block ================= 
from bfd_malloc basic block 5
 ================== possible direct basic block ================= 
from bfd_malloc basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ptr_11 = malloc (size_8(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:7: warning: use location
   ptr = malloc (sz); // allocation site
       ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================
_5 = PHI <0B(3), ptr_11(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 38

======================================================================
_12 = ptr_11;
./benchmarks/binutils/leak_8/binutils_leak_8.c:27:10: warning: use location
   return ptr;
          ^
_2 = ptr_11 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   if (ptr == NULL && sz != 0)
           ^
_1 = (long int) size_8(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:17:11: warning: use location
       || ((signed long) sz) < 0)
           ^
if (_1 < 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:15:6: warning: use location
   if (size != sz
      ^
if (_1 < 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:15:6: warning: use location
Cond in fucntion bfd_malloc basic block 2
 ================== possible direct basic block ================= 
from bfd_malloc basic block 3
 ================== possible direct basic block ================= 
from bfd_malloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;44m =======node_fun:bfd_set_section_contents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:bfd_set_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_set_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return _5;
In function â€˜bfd_set_section_contentsâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_4 = _3 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_2 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:bfd_set_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_set_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return _5;
In function â€˜mainâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 == 1;
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_4 = _3 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
bb index := 4
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 38

======================================================================
_2 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b71d80
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_set_section_contents========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>
# .MEM_18 = VDEF <.MEM_17(D)>
ptr_11 = malloc (size_8(D));

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================
_5 = PHI <0B(3), ptr_11(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 38

======================================================================
_12 = ptr_11;
./benchmarks/binutils/leak_8/binutils_leak_8.c:27:10: warning: use location
   return ptr;
          ^
_2 = ptr_11 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   if (ptr == NULL && sz != 0)
           ^
_4 = _2 & _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:19: warning: use location
   if (ptr == NULL && sz != 0)
                   ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   if (ptr == NULL && sz != 0)
      ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
Cond in fucntion bfd_malloc basic block 4
 ================== possible direct basic block ================= 
from bfd_malloc basic block 5
 ================== possible direct basic block ================= 
from bfd_malloc basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ptr_11 = malloc (size_8(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:7: warning: use location
   ptr = malloc (sz); // allocation site
       ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b71a20
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1528feab0 ptr>
    def_stmt ptr_11 = malloc (size_8(D));
    version 11
    ptr-info 0x7fb1516b06a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb151b69f90 type <integer_type 0x7fb151b7d5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = size_8(D) != 0;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:25: warning: use location
   if (ptr == NULL && sz != 0)
                         ^
_4 = _2 & _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:19: warning: use location
   if (ptr == NULL && sz != 0)
                   ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   if (ptr == NULL && sz != 0)
      ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
Cond in fucntion bfd_malloc basic block 4
 ================== possible direct basic block ================= 
from bfd_malloc basic block 5
 ================== possible direct basic block ================= 
from bfd_malloc basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ptr_11 = malloc (size_8(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:7: warning: use location
   ptr = malloc (sz); // allocation site
       ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(3), ptr_11(6)>
bb index := 7
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 38

======================================================================
_5 = PHI <0B(3), ptr_11(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_16>
return _5;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_14>
return _9;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:9: warning: use location
  return __RANDBOOL;
         ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = ptr_11;
bb index := 6
# VUSE <.MEM_12>
return 0;
<built-in>: warning: use location
beacuse in succ := 38 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 38

======================================================================
_12 = ptr_11;
./benchmarks/binutils/leak_8/binutils_leak_8.c:27:10: warning: use location
   return ptr;
          ^
_2 = ptr_11 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   if (ptr == NULL && sz != 0)
           ^
_1 = (long int) size_8(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:17:11: warning: use location
       || ((signed long) sz) < 0)
           ^
if (_1 < 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:15:6: warning: use location
   if (size != sz
      ^
if (_1 < 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:15:6: warning: use location
Cond in fucntion bfd_malloc basic block 2
 ================== possible direct basic block ================= 
from bfd_malloc basic block 3
 ================== possible direct basic block ================= 
from bfd_malloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb151b719d8
    type <integer_type 0x7fb15169e150 bfd_size_type public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb151b7d738 precision 64 min <integer_cst 0x7fb151b69f00 0> max <integer_cst 0x7fb151b6b520 18446744073709551615> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7fb1516a5380 size>
    def_stmt GIMPLE_NOP
    version 8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb1516b9ee8
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1516ba7e0 memhunk>
    def_stmt memhunk_23 = malloc (4);
    version 23
    ptr-info 0x7fb1516b0738>
# .MEM_73 = VDEF <.MEM_72>
memhunk_23 = malloc (4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_24 = bfd_set_section_contents (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^
this stmt is child function---bfd_set_section_contents-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9ee8
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1516ba7e0 memhunk>
    def_stmt memhunk_23 = malloc (4);
    version 23
    ptr-info 0x7fb1516b0738>
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_24 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^
if (_24 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:7: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 35
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
memset (memhunk_23, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:4: warning: use location
    memset (memhunk, 0, 4);
    ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9ee8
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1516ba7e0 memhunk>
    def_stmt memhunk_23 = malloc (4);
    version 23
    ptr-info 0x7fb1516b0738>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 
memhunk_23 = malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:169:10: warning: use location
    void *memhunk = xmalloc (4);
          ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9ee8
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1516ba7e0 memhunk>
    def_stmt memhunk_23 = malloc (4);
    version 23
    ptr-info 0x7fb1516b0738>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516b9ee8
    type <pointer_type 0x7fb151b840a8
        type <void_type 0x7fb151b7df18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb151b840a8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb151b89bd0>>
    var <var_decl 0x7fb1516ba7e0 memhunk>
    def_stmt memhunk_23 = malloc (4);
    version 23
    ptr-info 0x7fb1516b0738>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb151b85000 type <pointer_type 0x7fb151b840a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fb1516b9048
    type <integer_type 0x7fb151b7d690 unsigned int public unsigned SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d690 precision 32 min <integer_cst 0x7fb151b69e58 0> max <integer_cst 0x7fb151b69e10 4294967295>
        pointer_to_this <pointer_type 0x7fb151b89888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9048
    type <integer_type 0x7fb151b7d690 unsigned int public unsigned SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d690 precision 32 min <integer_cst 0x7fb151b69e58 0> max <integer_cst 0x7fb151b69e10 4294967295>
        pointer_to_this <pointer_type 0x7fb151b89888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:2: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9048
    type <integer_type 0x7fb151b7d690 unsigned int public unsigned SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d690 precision 32 min <integer_cst 0x7fb151b69e58 0> max <integer_cst 0x7fb151b69e10 4294967295>
        pointer_to_this <pointer_type 0x7fb151b89888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516b9048
    type <integer_type 0x7fb151b7d690 unsigned int public unsigned SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d690 precision 32 min <integer_cst 0x7fb151b69e58 0> max <integer_cst 0x7fb151b69e10 4294967295>
        pointer_to_this <pointer_type 0x7fb151b89888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516b9090
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _3 = rand ();
    version 3>
# .MEM_9 = VDEF <.MEM_8>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:32: warning: use location
  sec.compress_status = rand () % 3;
                                ^
_5 = (<unnamed-unsigned:2>) _4;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:32: warning: use location
sec.compress_status = _5;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:22: warning: use location
  sec.compress_status = rand () % 3;
                      ^
_26 = sec.compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:13: warning: use location
  switch (sec->compress_status)
             ^
_27 = (int) _26;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:13: warning: use location
_3 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:24: warning: use location
  sec.compress_status = rand () % 3;
                        ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9090
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _3 = rand ();
    version 3>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516b9090
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _3 = rand ();
    version 3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516b9c18
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _13 = rand ();
    version 13>
# .MEM_72 = VDEF <.MEM_10>
_13 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_13 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:6: warning: use location
  if (__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9c18
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _13 = rand ();
    version 13>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516b9c18
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _13 = rand ();
    version 13>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb1516b0558 type <integer_type 0x7fb15169e150 bfd_size_type> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
p_29 = PHI <p_25(4), p_28(5)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
memhunk_108 = p_29;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:10: warning: use location
     *ptr = p;
          ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location
this stmt have mutiple branch --------
_22 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_20 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
this stmt is child function---bfd_set_section_contents-----

 ================== trace ================== 
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^
if (_21 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
Cond in fucntion main basic block 32
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_17 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^
_18 = MEM[(int *)_17];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
_19 = __printf_chk (1, "%d\n", _18);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
contents_49 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:11: warning: use location
  contents = *ptr;
           ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location
this stmt have mutiple branch --------
_52 = MEM[(int *)contents_51];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:3: warning: use location
   __USE(contents);
   ^
_53 = __printf_chk (1, "%d\n", _52);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
if (contents_51 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
  if (contents)
     ^
if (contents_51 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
Cond in fucntion main basic block 28
 ================== possible direct basic block ================= 
from main basic block 29
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
this stmt is child function---free-----

 ================== find ================== 
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
# .MEM_88 = VDEF <.MEM_86>
memset (p_29, 0, 4);
memset (p_29, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:3: warning: use location
   memset (location, 0, 4);
   ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:2 
*p_29 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:8: warning: use location
     *p = 12;
        ^
if (p_29 != _31)
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:10: warning: use location
       if (*ptr != p)
          ^
if (p_29 != _31)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:10: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (p_29 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:5: warning: use location
  if (location) {
     ^
if (p_29 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:5: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516c4b40
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
    var <var_decl 0x7fb1516c75a0 p>
    def_stmt p_29 = PHI <p_25(4), p_28(5)>
    version 29
    ptr-info 0x7fb1516b0780>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
memhunk_108 = p_29;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:10: warning: use location
     *ptr = p;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
memhunk_108 = p_29;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:10: warning: use location
     *ptr = p;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_22 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_22 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_22 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_22 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_20 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_20 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_20 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_20 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_17 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_17 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_17 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_17 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# VUSE <.MEM_67>
_18 = MEM[(int *)_17];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# VUSE <.MEM_67>
_18 = MEM[(int *)_17];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# VUSE <.MEM_67>
_18 = MEM[(int *)_17];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# VUSE <.MEM_67>
_18 = MEM[(int *)_17];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:4: warning: use location
    __USE (memhunk);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_98 = VDEF <.MEM_67>
_19 = __printf_chk (1, "%d\n", _18);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
# .MEM_98 = VDEF <.MEM_67>
_19 = __printf_chk (1, "%d\n", _18);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_98 = VDEF <.MEM_67>
_19 = __printf_chk (1, "%d\n", _18);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_98 = VDEF <.MEM_67>
_19 = __printf_chk (1, "%d\n", _18);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
contents_49 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:11: warning: use location
  contents = *ptr;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
contents_49 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:11: warning: use location
  contents = *ptr;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
contents_49 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:11: warning: use location
  contents = *ptr;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
contents_49 = memhunk_104;
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:11: warning: use location
  contents = *ptr;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
contents_51 = PHI <contents_49(26), contents_50(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# VUSE <.MEM_65>
_52 = MEM[(int *)contents_51];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:3: warning: use location
   __USE(contents);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# VUSE <.MEM_65>
_52 = MEM[(int *)contents_51];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:3: warning: use location
   __USE(contents);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# VUSE <.MEM_65>
_52 = MEM[(int *)contents_51];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:3: warning: use location
   __USE(contents);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# VUSE <.MEM_65>
_52 = MEM[(int *)contents_51];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:3: warning: use location
   __USE(contents);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_95 = VDEF <.MEM_65>
_53 = __printf_chk (1, "%d\n", _52);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
# .MEM_95 = VDEF <.MEM_65>
_53 = __printf_chk (1, "%d\n", _52);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_95 = VDEF <.MEM_65>
_53 = __printf_chk (1, "%d\n", _52);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_95 = VDEF <.MEM_65>
_53 = __printf_chk (1, "%d\n", _52);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (contents_51 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
  if (contents)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (contents_51 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
  if (contents)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
if (contents_51 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
  if (contents)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
if (contents_51 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:5: warning: use location
  if (contents)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516cb120
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _40 = rand ();
    version 40>
# .MEM_87 = VDEF <.MEM_86>
_40 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_41 = _40 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:9: warning: use location
  return __RANDBOOL;
         ^
_42 = _41 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:9: warning: use location
_43 = (int) _42;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:9: warning: use location
_44 = PHI <1(7), _43(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_89 = _44;
lto1: warning: use location
_40 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:9: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516cb120
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _40 = rand ();
    version 40>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516cb120
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _40 = rand ();
    version 40>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_44 = PHI <1(7), _43(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_44 = PHI <1(7), _43(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_44 = PHI <1(7), _43(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
_44 = PHI <1(7), _43(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: Use after free error!: free location 
    free (memhunk);
    ^
_44 = PHI <1(7), _43(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516c4c60
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _33 = rand ();
    version 33>
# .MEM_78 = VDEF <.MEM_77>
_33 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_34 = _33 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:9: warning: use location
     if (__RANDBOOL)
         ^
if (_34 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:8: warning: use location
     if (__RANDBOOL)
        ^
if (_34 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:8: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:9: warning: use location
     if (__RANDBOOL)
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516c4c60
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _33 = rand ();
    version 33>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516c4c60
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _33 = rand ();
    version 33>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_34 = _33 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:9: warning: use location
     if (__RANDBOOL)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (_34 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:8: warning: use location
     if (__RANDBOOL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_78 = VDEF <.MEM_77>
_33 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:9: warning: use location
     if (__RANDBOOL)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516cb948
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _45 = rand ();
    version 45>
# .MEM_93 = VDEF <.MEM_64>
_45 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_46 = _45 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^
if (_46 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:5: warning: use location
  if (!use_memmove)
     ^
if (_46 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:5: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_47 = _46 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^
_45 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516cb948
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _45 = rand ();
    version 45>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516cb948
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _45 = rand ();
    version 45>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_46 = _45 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_46 = _45 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_46 = _45 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (_46 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:5: warning: use location
  if (!use_memmove)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
if (_46 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:5: warning: use location
  if (!use_memmove)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
if (_46 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:5: warning: use location
  if (!use_memmove)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_47 = _46 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_47 = _46 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_47 = _46 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_93 = VDEF <.MEM_64>
_45 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_93 = VDEF <.MEM_64>
_45 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_93 = VDEF <.MEM_64>
_45 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:2: warning: use location
  __NONDET(use_memmove, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516cbbd0
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _54 = rand ();
    version 54>
# .MEM_96 = VDEF <.MEM_66>
_54 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_55 = _54 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^
_54 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb1516cbbd0
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _54 = rand ();
    version 54>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516cbbd0
    type <integer_type 0x7fb151b7d5e8 int public SI
        size <integer_cst 0x7fb151b69e28 constant 32>
        unit size <integer_cst 0x7fb151b69e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb151b7d5e8 precision 32 min <integer_cst 0x7fb151b69de0 -2147483648> max <integer_cst 0x7fb151b69df8 2147483647>
        pointer_to_this <pointer_type 0x7fb151b84a80>>
   
    def_stmt _54 = rand ();
    version 54>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (memhunk_23);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
_55 = _54 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
_55 = _54 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
_55 = _54 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_96 = VDEF <.MEM_66>
_54 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_96 = VDEF <.MEM_66>
_54 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_96 = VDEF <.MEM_66>
_54 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:9: warning: use location
  return __RANDBOOL;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb1516b9e10
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
   
    def_stmt _20 = memhunk_104;
    version 20
    ptr-info 0x7fb1516b0708>
_20 = memhunk_104;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^
this stmt is child function---bfd_set_section_contents-----

 ================== trace ================== 
 <ssa_name 0x7fb1516b9e10
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
   
    def_stmt _20 = memhunk_104;
    version 20
    ptr-info 0x7fb1516b0708>
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^
if (_21 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
Cond in fucntion main basic block 32
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb1516b9e10
    type <pointer_type 0x7fb15169e9d8
        type <integer_type 0x7fb15169e930 bfd_byte public unsigned string-flag QI
            size <integer_cst 0x7fb151b69cd8 constant 8>
            unit size <integer_cst 0x7fb151b69cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb151b7d3f0 precision 8 min <integer_cst 0x7fb151b69d08 0> max <integer_cst 0x7fb151b69ca8 255> context <translation_unit_decl 0x7fb151b74168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7fb15169e9d8>>
        public unsigned DI
        size <integer_cst 0x7fb151b69be8 constant 64>
        unit size <integer_cst 0x7fb151b69c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb15169ea80>>
   
    def_stmt _20 = memhunk_104;
    version 20
    ptr-info 0x7fb1516b0708>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: use location
        free (p);
        ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: use location
     free (compressed_buffer);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: use location
      free (compressed_buffer);
      ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_100 = VDEF <.MEM_99>
free (_22);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:4: warning: use location
    free (memhunk);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
# .MEM_99 = VDEF <.MEM_98>
_21 = bfd_set_section_contents (_20);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:9: warning: use location
    if (!bfd_set_section_contents (memhunk))
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_91 = VDEF <.MEM_60>
free (p_29);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:8: warning: Use after free error!: free location 
        free (p);
        ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_80 = VDEF <.MEM_61>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:5: warning: Use after free error!: free location 
     free (compressed_buffer);
     ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_82 = VDEF <.MEM_62>
free (compressed_buffer_32);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:6: warning: Use after free error!: free location 
      free (compressed_buffer);
      ^
if (_21 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:7: warning: use location
    if (!bfd_set_section_contents (memhunk))
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb1516b03d8 type <integer_type 0x7fb1516935e8 size_t> constant 4>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:bfd_malloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = (long int) size_8(D);
if (_1 < 0)
  goto <bb 3>; [5.27%]
else
  goto <bb 4>; [94.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [5.27%]:
_13 = __printf_chk (1, "bfd_error_no_memory\n");
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [94.73%]:
ptr_11 = malloc (size_8(D));
_2 = ptr_11 == 0B;
_3 = size_8(D) != 0;
_4 = _2 & _3;
if (_4 != 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [31.26%]:
_14 = __printf_chk (1, "bfd_error_no_memory\n");

=======is loop:0=========

 bb index 6 
<bb 6> [94.73%]:
_12 = ptr_11;

=======is loop:0=========

 bb index 7 
<bb 7> [100.00%]:
# _5 = PHI <0B(3), ptr_11(6)>
return _5;

=======Mapping node_fun:bfd_set_section_contents=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (location_6(D) != 0B)
  goto <bb 3>; [57.44%]
else
  goto <bb 4>; [42.56%]

=======is loop:0=========

 bb index 3 
<bb 3> [57.44%]:
_1 = MEM[(int *)location_6(D)];
_10 = __printf_chk (1, "%d\n", _1);

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
_2 = rand ();
_3 = _2 % 2;
_4 = _3 == 1;
_9 = (int) _4;
return _9;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_3 = rand ();
_4 = _3 % 3;
_5 = (<unnamed-unsigned:2>) _4;
sec.compress_status = _5;
memhunk_105 = 0B;
_13 = rand ();
_14 = _13 % 2;
if (_14 == 1)
  goto <bb 3>; [34.00%]
else
  goto <bb 34>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [34.00%]:
p_25 = memhunk_105;
_26 = sec.compress_status;
_27 = (int) _26;
switch (_26) <default: <L4> [0.04%], case 0: <L0> [33.33%], case 1: <L3> [33.33%], case 2: <L1> [33.33%]>

=======is loop:0=========

 bb index 4 
<L0> [11.33%]:
if (p_25 == 0B)
  goto <bb 5>; [30.00%]
else
  goto <bb 6>; [70.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [3.40%]:
p_28 = bfd_malloc (4);
if (p_28 == 0B)
  goto <bb 25>; [26.74%]
else
  goto <bb 6>; [73.26%]

=======is loop:0=========

 bb index 6 
<bb 6> [10.42%]:
# p_29 = PHI <p_25(4), p_28(5)>
*p_29 = 12;
if (p_29 != 0B)
  goto <bb 7>; [66.53%]
else
  goto <bb 8>; [33.47%]

=======is loop:0=========

 bb index 7 
<bb 7> [6.93%]:
memset (p_29, 0, 4);
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [3.49%]:
_40 = rand ();
_41 = _40 % 2;
_42 = _41 == 1;
_43 = (int) _42;

=======is loop:0=========

 bb index 9 
<bb 9> [10.42%]:
# _44 = PHI <1(7), _43(8)>
_89 = _44;
_30 = _89;
if (_30 == 0)
  goto <bb 10>; [54.00%]
else
  goto <bb 12>; [46.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [5.63%]:
_31 = memhunk_105;
if (p_29 != _31)
  goto <bb 11>; [53.47%]
else
  goto <bb 25>; [46.53%]

=======is loop:0=========

 bb index 11 
<bb 11> [3.01%]:
free (p_29);
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [4.79%]:
memhunk_108 = p_29;
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 13 
<L1> [11.33%]:
compressed_buffer_32 = bfd_malloc (4);
if (compressed_buffer_32 == 0B)
  goto <bb 25>; [42.57%]
else
  goto <bb 14>; [57.43%]

=======is loop:0=========

 bb index 14 
<bb 14> [6.51%]:
_33 = rand ();
_34 = _33 % 2;
if (_34 == 1)
  goto <bb 19> (fail_compressed); [17.77%]
else
  goto <bb 15>; [82.23%]

=======is loop:0=========

 bb index 15 
<bb 15> [5.35%]:
if (p_25 == 0B)
  goto <bb 16>; [17.43%]
else
  goto <bb 17>; [82.57%]

=======is loop:0=========

 bb index 16 
<bb 16> [0.93%]:
p_35 = bfd_malloc (4);

=======is loop:0=========

 bb index 17 
<bb 17> [5.35%]:
# p_36 = PHI <p_25(15), p_35(16)>
if (p_36 == 0B)
  goto <bb 19> (fail_compressed); [46.53%]
else
  goto <bb 18>; [53.47%]

=======is loop:0=========

 bb index 18 
<bb 18> [2.86%]:
free (compressed_buffer_32);
memhunk_106 = p_36;
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 19 
fail_compressed [3.65%]:
free (compressed_buffer_32);
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 20 
<L3> [11.33%]:
if (p_25 == 0B)
  goto <bb 21>; [17.43%]
else
  goto <bb 22>; [82.57%]

=======is loop:0=========

 bb index 21 
<bb 21> [1.98%]:
p_37 = bfd_malloc (4);

=======is loop:0=========

 bb index 22 
<bb 22> [11.33%]:
# p_38 = PHI <p_25(20), p_37(21)>
if (p_38 == 0B)
  goto <bb 25>; [30.00%]
else
  goto <bb 23>; [70.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [7.93%]:
memhunk_107 = p_38;
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 24 
<L4> [0.01%]:
exit (1);

=======is loop:0=========

 bb index 25 
<bb 25> [34.00%]:
# _39 = PHI <0(5), 0(10), 0(11), 1(12), 0(13), 1(18), 0(19), 0(22), 1(23)>
# memhunk_104 = PHI <memhunk_105(5), memhunk_105(10), memhunk_105(11), memhunk_108(12), memhunk_105(13), memhunk_106(18), memhunk_105(19), memhunk_105(22), memhunk_107(23)>
_92 = _39;
_15 = _92;
if (_15 == 0)
  goto <bb 37>; [67.00%]
else
  goto <bb 26>; [33.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [11.22%]:
_45 = rand ();
_46 = _45 % 2;
_47 = _46 == 1;
use_memmove_48 = (bfd_boolean) _47;
contents_49 = memhunk_104;
if (_46 != 1)
  goto <bb 27>; [48.88%]
else
  goto <bb 28>; [51.12%]

=======is loop:0=========

 bb index 27 
<bb 27> [5.48%]:
contents_50 = bfd_malloc (4);
if (contents_50 == 0B)
  goto <bb 31>; [26.74%]
else
  goto <bb 28>; [73.26%]

=======is loop:0=========

 bb index 28 
<bb 28> [9.75%]:
# contents_51 = PHI <contents_49(26), contents_50(27)>
if (contents_51 != 0B)
  goto <bb 29>; [53.47%]
else
  goto <bb 30>; [46.53%]

=======is loop:0=========

 bb index 29 
<bb 29> [5.21%]:
_52 = MEM[(int *)contents_51];
_53 = __printf_chk (1, "%d\n", _52);

=======is loop:0=========

 bb index 30 
<bb 30> [9.75%]:
_54 = rand ();
_55 = _54 % 2;
_56 = _55 == 1;
_57 = (int) _56;

=======is loop:0=========

 bb index 31 
<bb 31> [11.22%]:
# _58 = PHI <0(27), _57(30)>
_97 = _58;
_16 = _97;
if (_16 == 0)
  goto <bb 37>; [67.00%]
else
  goto <bb 32>; [33.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [3.70%]:
_17 = memhunk_104;
_18 = MEM[(int *)_17];
_19 = __printf_chk (1, "%d\n", _18);
_20 = memhunk_104;
_21 = bfd_set_section_contents (_20);
if (_21 == 0)
  goto <bb 37>; [67.00%]
else
  goto <bb 33>; [33.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [1.22%]:
_22 = memhunk_104;
free (_22);
goto <bb 36>; [100.00%]

=======is loop:0=========

 bb index 34 
<bb 34> [66.00%]:
memhunk_23 = malloc (4);
memset (memhunk_23, 0, 4);
_24 = bfd_set_section_contents (memhunk_23);
if (_24 == 0)
  goto <bb 37>; [67.00%]
else
  goto <bb 35>; [33.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [21.78%]:
free (memhunk_23);

=======is loop:0=========

 bb index 36 
<bb 36> [23.00%]:
goto <bb 38>; [100.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [76.99%]:

=======is loop:0=========

 bb index 38 
<bb 38> [100.00%]:
sec ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 13 [0m
[40;34m    used_stmt array stack totalsize of : 1640 [0m
[40;34m    collect time: : 0.000113 s [0m
[40;34m    algorithm time: 0.020098 s [0m
[40;34m    gimple stmt count : : 108 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
