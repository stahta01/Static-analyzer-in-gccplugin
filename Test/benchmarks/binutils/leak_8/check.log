../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/binutils/leak_8/binutils_leak_8.c:8:
./benchmarks/binutils/leak_8/../include/bfd.h:55:1: warning: useless storage class specifier in empty declaration
   55 | };
      | ^
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function ‘bfd_get_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   34 |                 memset (location, 0, 4);
      |                 ^~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:9:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
    8 | #include "../include/bfd.h"
  +++ |+#include <string.h>
    9 | 
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   34 |                 memset (location, 0, 4);
      |                 ^~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:25: warning: passing argument 1 of ‘memset’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   34 |                 memset (location, 0, 4);
      |                         ^~~~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:25: note: expected ‘void *’ but argument is of type ‘const void *’
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
  170 |                         memset (memhunk, 0, 4);
      |                         ^~~~~~
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/binutils/leak_8/binutils_leak_8.c: In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  183 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 46%)
 phase parsing                      :   0.03 ( 75%)   0.02 ( 67%)   0.05 ( 71%)  1232k ( 44%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 33%)   0.02 ( 29%)   268k ( 10%)
 callgraph optimization             :   0.01 ( 25%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 callgraph ipa passes               :   0.01 ( 25%)   0.01 ( 33%)   0.02 ( 29%)   145k (  5%)
 ipa free lang data                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  5320  (  0%)
 lexical analysis                   :   0.02 ( 50%)   0.00 (  0%)   0.02 ( 29%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 14%)   612k ( 22%)
 parser struct body                 :   0.01 ( 25%)   0.01 ( 33%)   0.02 ( 29%)    91k (  3%)
 address taken                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 TOTAL                              :   0.04          0.03          0.07         2809k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 96%)
 TOTAL                              :   0.00          0.00          0.01         2244k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
addr_expraddr_expraddr_expraddr_expraddr_expr------copy_section--
=======node_fun:copy_section=========
node:= 2 
 	next_branch :=3
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 3 
 	next_branch :=5
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_get_full_section_contents--
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_convert_section_contents--
node:= 5 
 	next_branch :=11
node:= 6 
 	next_branch :=11
	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_set_section_contents--
node:= 7 
 	next_branch :=10
node:= 8 
 	next_branch :=11
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_set_section_contents--
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=12
node:= 11 
 	next_branch :=12
=======node_fun:bfd_set_section_contents=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
=======node_fun:bfd_convert_section_contents=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 3 
 	next_branch :=7
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_malloc--
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
=======node_fun:bfd_get_full_section_contents=========
node:= 2 
 	next_branch :=23
	next_branch :=3
	next_branch :=19
	next_branch :=10
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=24
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_malloc--
node:= 5 
 	next_branch :=6
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_get_section_contents--
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=24
node:= 9 
 	next_branch :=24
node:= 10 
 	next_branch :=24
	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_malloc--
node:= 11 
 	next_branch :=12
	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 12 
 	next_branch :=18
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_malloc--
node:= 15 
 	next_branch :=16
	next_branch :=17
node:= 16 
 	next_branch :=18
node:= 17 
 	next_branch :=24
node:= 18 
 	next_branch :=24
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 	next_branch :=21
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_malloc--
node:= 21 
 	next_branch :=24
	next_branch :=22
node:= 22 
 	next_branch :=24
node:= 23 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:bfd_get_section_contents=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
=======node_fun:bfd_malloc=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 36 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = time (0B);
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
# .MEM_9 = VDEF <.MEM_8>
_3 = rand ();
# .MEM_11 = VDEF <.MEM_10>
copy_section (&sec);
# .MEM_30 = VDEF <.MEM_29>
_1 = rand ();
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
# .MEM_31 = VDEF <.MEM_30>
memhunk_19 = malloc (4);
# .MEM_32 = VDEF <.MEM_31>
memset (memhunk_19, 0, 4);
# .MEM_33 = VDEF <.MEM_32>
_10 = bfd_set_section_contents (memhunk_19);
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
# .MEM_25 = VDEF <.MEM_24(D)>
_1 = rand ();
# .MEM_26 = VDEF <.MEM_25>
contents_17 = bfd_malloc (4);
# .MEM_28 = VDEF <.MEM_22>
_4 = rand ();
# .MEM_48 = VDEF <.MEM_39(D)>
p_32 = bfd_malloc (4);
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
# .MEM_13 = VDEF <.MEM_11(D)>
memset (location_6(D), 0, 4);
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = rand ();
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = time (0B);
========================================================
 <ssa_name 0x7f62e3263630
    type <integer_type 0x7f62e3270690 unsigned int public unsigned SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270690 precision:32 min <integer_cst 0x7f62e325be28 0> max <integer_cst 0x7f62e325bde0 4294967295>
        pointer_to_this <pointer_type 0x7f62e327c690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
=============== *this point analyzable =================
_3 = rand ();
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
copy_section (&sec);
========================================================
=============== *this point analyzable =================
_1 = rand ();
========================================================
=============== *this point analyzable =================
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
========================================================
=============== *this point analyzable =================
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
========================================================
=============== *this point analyzable =================
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
========================================================
=============== *this point analyzable =================
_8 = bfd_set_section_contents (_7);
========================================================
=============== *this point analyzable =================
_8 = bfd_set_section_contents (_7);
========================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
=============== *this point analyzable =================
memhunk_19 = malloc (4);
========================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
=============== *this point analyzable =================
_10 = bfd_set_section_contents (memhunk_19);
========================================================
=============== *this point analyzable =================
_2 = rand ();
========================================================
=============== *this point analyzable =================
_1 = rand ();
========================================================
=============== *this point analyzable =================
contents_17 = bfd_malloc (4);
========================================================
=============== *this point analyzable =================
_4 = rand ();
========================================================
=============== *this point analyzable =================
p_32 = bfd_malloc (4);
========================================================
=============== *this point analyzable =================
_2 = bfd_get_section_contents (sec_19(D), p_6);
========================================================
=============== *this point analyzable =================
_2 = bfd_get_section_contents (sec_19(D), p_6);
========================================================
=============== *this point analyzable =================
_2 = bfd_get_section_contents (sec_19(D), p_6);
========================================================
=============== *this point analyzable =================
compressed_buffer_21 = bfd_malloc (4);
========================================================
=============== *this point analyzable =================
_4 = rand ();
========================================================
=============== *this point analyzable =================
p_24 = bfd_malloc (4);
========================================================
=============== *this point analyzable =================
p_29 = bfd_malloc (4);
========================================================
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
=============== *this point analyzable =================
memset (location_6(D), 0, 4);
========================================================
=============== *this point analyzable =================
_1 = rand ();
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"bfd_error_no_memory"[0]);
========================================================
=============== *this point analyzable =================
ptr_10 = malloc (size_7(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"bfd_error_no_memory"[0]);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:copy_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_section  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_set_section_contents  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_set_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_set_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
  134 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_set_section_contents========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_convert_section_contents  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre_check_funciton:bfd_convert_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_convert_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:12: warning: use location
  115 |         if (!use_memmove)
      |            ^
# .MEM_25 = VDEF <.MEM_24(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
contents_7 = PHI <contents_15(2), contents_17(3)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
_3 = MEM[(int *)contents_7];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
  123 |                 __USE(contents);
      |                 ^
printf ("%d\n", _3);
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
if (contents_7 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:12: warning: use location
  122 |         if (contents)
      |            ^
# .MEM_26 = VDEF <.MEM_25>
contents_17 = bfd_malloc (4);
contents_17 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:117:49: warning: use location
  117 |                         contents = (bfd_byte *) bfd_malloc (4);
      |                                                 ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
  125 |         return __RANDBOOL;
      |                ^
_6 = _5 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_20 = (int) _6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_8 = PHI <0(3), _20(6)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_28 = VDEF <.MEM_22>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_convert_section_contents========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_full_section_contents  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_section_contents  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:bfd_get_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_11(D)>
memset (location_6(D), 0, 4);
memset (location_6(D), 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: use location
   34 |                 memset (location, 0, 4);
      |                 ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
if (location_6(D) != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:12: warning: use location
   33 |         if (location) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
   39 |         return __RANDBOOL;
      |                ^
_3 = _2 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_9 = (int) _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_4 = PHI <1(3), _9(4)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_section_contents========= [0m
[40;42m =======pre_check_funciton:bfd_get_full_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_full_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
if (p_32 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:54:52: warning: use location
   54 |                                                 if (p == NULL)
      |                                                    ^
# .MEM_48 = VDEF <.MEM_39(D)>
p_32 = bfd_malloc (4);
p_32 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:53:66: warning: use location
   53 |                                                 p = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
is Other function bfd_get_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_full_section_contents========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:copy_section========= [0m
[40;42m =======start_check_funciton:copy_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:13: warning: use location
  143 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:12: warning: use location
  143 |         if (__RANDBOOL)
      |            ^
# .MEM_30 = VDEF <.MEM_29>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:13: warning: use location
  143 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
[40;36m ======= relate node_fun argument:isection========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
[40;36m ======= relate node_fun argument:isection========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :888========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
is Other function bfd_get_full_section_contents
 
 Start check Pointer Collect  

======================================================================
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_37>
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_38>
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :888========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
is Other function bfd_convert_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_37>
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_38>
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:28: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
is Other function bfd_set_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:28: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_31 = VDEF <.MEM_30>
memhunk_19 = malloc (4);
memhunk_19 = malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:169:41: warning: use location
  169 |                         void *memhunk = xmalloc (4);
      |                                         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
# .MEM_32 = VDEF <.MEM_31>
memset (memhunk_19, 0, 4);
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 
memhunk_19 = malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:169:41: warning: use location
  169 |                         void *memhunk = xmalloc (4);
      |                                         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
is Other function bfd_set_section_contents
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_33 = VDEF <.MEM_32>
_10 = bfd_set_section_contents (memhunk_19);
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:copy_section========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e32635e8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = time (0B);
    version:1>
 <ssa_name 0x7f62e32635e8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e32635e8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = time (0B);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
_2 = (unsigned int) _1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:9: warning: use location
  183 |         srand(time(NULL));
      |         ^
srand (_2);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = time (0B);
_1 = time (0B);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:15: warning: use location
  183 |         srand(time(NULL));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e32635e8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263630
    type <integer_type 0x7f62e3270690 unsigned int public unsigned SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270690 precision:32 min <integer_cst 0x7f62e325be28 0> max <integer_cst 0x7f62e325bde0 4294967295>
        pointer_to_this <pointer_type 0x7f62e327c690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7f62e3263630
    type <integer_type 0x7f62e3270690 unsigned int public unsigned SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270690 precision:32 min <integer_cst 0x7f62e325be28 0> max <integer_cst 0x7f62e325bde0 4294967295>
        pointer_to_this <pointer_type 0x7f62e327c690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263630
    type <integer_type 0x7f62e3270690 unsigned int public unsigned SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270690 precision:32 min <integer_cst 0x7f62e325be28 0> max <integer_cst 0x7f62e325bde0 4294967295>
        pointer_to_this <pointer_type 0x7f62e327c690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:9: warning: use location
  183 |         srand(time(NULL));
      |         ^
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_8/binutils_leak_8.c:183:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263630
    type <integer_type 0x7f62e3270690 unsigned int public unsigned SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270690 precision:32 min <integer_cst 0x7f62e325be28 0> max <integer_cst 0x7f62e325bde0 4294967295>
        pointer_to_this <pointer_type 0x7f62e327c690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:39: warning: use location
  187 |         sec.compress_status = rand () % 3;
      |                                       ^
_5 = (<unnamed-unsigned:2>) _4;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:39: warning: use location
sec.compress_status = _5;
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:29: warning: use location
  187 |         sec.compress_status = rand () % 3;
      |                             ^
copy_section (&sec);
./benchmarks/binutils/leak_8/binutils_leak_8.c:189:9: warning: use location
  189 |         copy_section(isection);
      |         ^
this stmt call this function :copy_section
trace fucntion name:copy_section 
[40;44m =======trace_function_path copy_section  function_call count: 8 level :0========  [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:copy_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_convert_section_contents========= [0m
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_full_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :1========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:5 
copy_section (&sec);
./benchmarks/binutils/leak_8/binutils_leak_8.c:189:9: warning: use location
  189 |         copy_section(isection);
      |         ^
this stmt call this function :copy_section
trace fucntion name:copy_section 
[40;44m =======trace_function_path copy_section  function_call count: 8 level :0========  [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:copy_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_convert_section_contents========= [0m
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_full_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :1========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:10 
# .MEM_9 = VDEF <.MEM_8>
_3 = rand ();
_3 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:187:31: warning: use location
  187 |         sec.compress_status = rand () % 3;
      |                               ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:10 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263678
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:10 [0m
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
copy_section (&sec);
copy_section (&sec);
./benchmarks/binutils/leak_8/binutils_leak_8.c:189:9: warning: use location
  189 |         copy_section(isection);
      |         ^
this stmt call this function :copy_section
trace fucntion name:copy_section 
[40;44m =======trace_function_path copy_section  function_call count: 8 level :0========  [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:copy_section========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_convert_section_contents========= [0m
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :1========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:contents========= [0m
In function ‘bfd_convert_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:18: warning: use location
  113 |         contents = *ptr;
      |                  ^
contents_15 = *ptr_14(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:18: warning: use location
contents_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_full_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :1========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:5 
# .MEM_11 = VDEF <.MEM_10>
copy_section (&sec);
copy_section (&sec);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:189:9: warning: use location
  189 |         copy_section(isection);
      |         ^
this stmt call this function :copy_section
trace fucntion name:copy_section 
[40;44m =======trace_function_path copy_section  function_call count: 8 level :0========  [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:copy_section========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_convert_section_contents========= [0m
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :1========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:contents========= [0m
In function ‘bfd_convert_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:18: warning: use location
  113 |         contents = *ptr;
      |                  ^
contents_15 = *ptr_14(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:113:18: warning: use location
contents_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_full_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :1========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
In function ‘main’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :2========  [0m
 <var_decl 0x7f62e3b03bd0 sec
    type <record_type 0x7f62e2d7c9d8 bfd_section BLK
        size <integer_cst 0x7f62e2d6ab58 constant 2176>
        unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8
        fields <field_decl 0x7f62e2d81130 name type <pointer_type 0x7f62e2d73930>
            unsigned DI ./benchmarks/binutils/leak_8/../include/bfd.h:77:15
            size <integer_cst 0x7f62e325bbb8 constant 64>
            unit-size <integer_cst 0x7f62e325bbd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f62e325bbe8 constant 0>
            bit-offset <integer_cst 0x7f62e325bc30 constant 0> context <record_type 0x7f62e2d7c9d8 bfd_section> chain <field_decl 0x7f62e2d81098 id>> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
        pointer_to_this <pointer_type 0x7f62e2d7ca80>>
    addressable BLK ./benchmarks/binutils/leak_8/binutils_leak_8.c:185:21 size <integer_cst 0x7f62e2d6ab58 2176> unit-size <integer_cst 0x7f62e2d6a7b0 272>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d7a000 main>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:10 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:10 [0m
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:copy_section========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path copy_section  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:bfd_set_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_set_section_contents  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_set_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_set_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
  134 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_set_section_contents========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_convert_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_convert_section_contents  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre_check_funciton:bfd_convert_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_convert_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:12: warning: use location
  115 |         if (!use_memmove)
      |            ^
# .MEM_25 = VDEF <.MEM_24(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
contents_7 = PHI <contents_15(2), contents_17(3)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
_3 = MEM[(int *)contents_7];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
  123 |                 __USE(contents);
      |                 ^
printf ("%d\n", _3);
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
if (contents_7 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:12: warning: use location
  122 |         if (contents)
      |            ^
# .MEM_26 = VDEF <.MEM_25>
contents_17 = bfd_malloc (4);
contents_17 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:117:49: warning: use location
  117 |                         contents = (bfd_byte *) bfd_malloc (4);
      |                                                 ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
  125 |         return __RANDBOOL;
      |                ^
_6 = _5 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_20 = (int) _6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_8 = PHI <0(3), _20(6)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_28 = VDEF <.MEM_22>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_convert_section_contents========= [0m
[40;42m =======pre add _ fucntion:bfd_get_full_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_full_section_contents  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_section_contents  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:bfd_get_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_11(D)>
memset (location_6(D), 0, 4);
memset (location_6(D), 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: use location
   34 |                 memset (location, 0, 4);
      |                 ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
if (location_6(D) != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:12: warning: use location
   33 |         if (location) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
   39 |         return __RANDBOOL;
      |                ^
_3 = _2 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_9 = (int) _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_4 = PHI <1(3), _9(4)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_section_contents========= [0m
[40;42m =======pre_check_funciton:bfd_get_full_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_full_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
if (p_32 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:54:52: warning: use location
   54 |                                                 if (p == NULL)
      |                                                    ^
# .MEM_48 = VDEF <.MEM_39(D)>
p_32 = bfd_malloc (4);
p_32 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:53:66: warning: use location
   53 |                                                 p = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
is Other function bfd_get_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_full_section_contents========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:copy_section========= [0m
[40;42m =======start_check_funciton:copy_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:13: warning: use location
  143 |         if (__RANDBOOL)
      |             ^
if (_2 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:12: warning: use location
  143 |         if (__RANDBOOL)
      |            ^
# .MEM_30 = VDEF <.MEM_29>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:143:13: warning: use location
  143 |         if (__RANDBOOL)
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263948
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
[40;36m ======= relate node_fun argument:isection========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
[40;36m ======= relate node_fun argument:isection========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with isection ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c60
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83100 isection>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f62e2d8a978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
   46 |         bfd_byte *p = *ptr;
      |                   ^
p_18 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:46:19: warning: use location
p_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
*p_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
   61 |                                                 if (*ptr != p)
      |                                                     ^
_3 = *ptr_17(D);
./benchmarks/binutils/leak_8/binutils_leak_8.c:61:53: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:memhunk========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
*ptr_17(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <var_decl 0x7f62e3b03f30 memhunk
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    addressable unsigned DI ./benchmarks/binutils/leak_8/binutils_leak_8.c:141:12 size <integer_cst 0x7f62e325bbb8 64> unit-size <integer_cst 0x7f62e325bbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f62e2d74f00 copy_section>>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :888========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
In function ‘copy_section’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
is Other function bfd_get_full_section_contents
 
 Start check Pointer Collect  

======================================================================
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e32639d8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_37>
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_38>
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :888========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
is Other function bfd_convert_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^
this stmt call this function :bfd_convert_section_contents
trace fucntion name:bfd_convert_section_contents 
[40;44m =======trace_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_convert_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
bfd_malloc this fucntion return value is heap-object 
bfd_convert_section_contents this fucntion return value is heap-object bfd_malloc
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: use location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^
this stmt call this function :bfd_get_full_section_contents
trace fucntion name:bfd_get_full_section_contents 
[40;44m =======trace_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_get_full_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;46m =======add node_fun stack:bfd_malloc========= [0m
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;46m =======add node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:3 
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263a20
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = bfd_convert_section_contents (isection_23(D), &memhunk);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:45: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
if (_4 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:150:41: warning: use location
  150 |                                         || !bfd_convert_section_contents (isection, &memhunk))
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_5 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_36>
_6 = MEM[(int *)_5];
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
printf ("%d\n", _6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:156:25: warning: use location
  156 |                         __USE (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_37>
_7 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# VUSE <.MEM_38>
_9 = memhunk;
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_30>
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
./benchmarks/binutils/leak_8/binutils_leak_8.c:149:30: warning: free in this location
  149 |                         if (!bfd_get_full_section_contents (isection, &memhunk)
      |                              ^

===== possiable asias =====
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:28: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263af8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
   
    def_stmt _7 = memhunk;
    version:7
    ptr-info 0x7f62e2d8a930>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
is Other function bfd_set_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
_8 = bfd_set_section_contents (_7);
_8 = bfd_set_section_contents (_7);
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:30: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:158:28: warning: use location
  158 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263b40
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _8 = bfd_set_section_contents (_7);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_31 = VDEF <.MEM_30>
memhunk_19 = malloc (4);
memhunk_19 = malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:169:41: warning: use location
  169 |                         void *memhunk = xmalloc (4);
      |                                         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with memhunk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
# .MEM_32 = VDEF <.MEM_31>
memset (memhunk_19, 0, 4);
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 
memhunk_19 = malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:169:41: warning: use location
  169 |                         void *memhunk = xmalloc (4);
      |                                         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263c18
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e3b03b40 memhunk>
    def_stmt memhunk_19 = malloc (4);
    version:19
    ptr-info 0x7f62e2d8a960>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
is Other function bfd_set_section_contents
 
 Start check Pointer Collect  

======================================================================
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_33 = VDEF <.MEM_32>
_10 = bfd_set_section_contents (memhunk_19);
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^
this stmt call this function :bfd_set_section_contents
trace fucntion name:bfd_set_section_contents 
[40;44m =======trace_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>
[40;36m ======= node_fun:bfd_set_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e3263bd0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _10 = bfd_set_section_contents (memhunk_19);
    version:10>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: use location
  164 |                         free (memhunk);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:178:25: warning: use location
  178 |                         free (memhunk);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
_10 = bfd_set_section_contents (memhunk_19);
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:30: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
if (_10 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:172:28: warning: use location
  172 |                         if (!bfd_set_section_contents (memhunk))
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_39 = VDEF <.MEM_38>
free (_9);
./benchmarks/binutils/leak_8/binutils_leak_8.c:164:25: warning: free in this location
  164 |                         free (memhunk);
      |                         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
memset (memhunk_19, 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:170:25: warning: use location
  170 |                         memset (memhunk, 0, 4);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:copy_section========= [0m
[40;44m =======node_fun:bfd_set_section_contents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_set_section_contents  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_set_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_set_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘bfd_set_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
  134 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
# .MEM_14 = VDEF <.MEM_11>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:134:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94240
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_set_section_contents========= [0m
[40;44m =======node_fun:bfd_convert_section_contents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_convert_section_contents  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
In function ‘bfd_convert_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre_check_funciton:bfd_convert_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_convert_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:115:12: warning: use location
  115 |         if (!use_memmove)
      |            ^
# .MEM_25 = VDEF <.MEM_24(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:111:9: warning: use location
  111 |         __NONDET(use_memmove, 1, 0);
      |         ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d944c8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
contents_7 = PHI <contents_15(2), contents_17(3)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
_3 = MEM[(int *)contents_7];
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
  123 |                 __USE(contents);
      |                 ^
printf ("%d\n", _3);
./benchmarks/binutils/leak_8/binutils_leak_8.c:123:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
if (contents_7 != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:122:12: warning: use location
  122 |         if (contents)
      |            ^
# .MEM_26 = VDEF <.MEM_25>
contents_17 = bfd_malloc (4);
contents_17 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:117:49: warning: use location
  117 |                         contents = (bfd_byte *) bfd_malloc (4);
      |                                                 ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with contents ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94798
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91630 contents>
    def_stmt contents_17 = bfd_malloc (4);
    version:17
    ptr-info 0x7f62e2d8a9f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
  125 |         return __RANDBOOL;
      |                ^
_6 = _5 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_20 = (int) _6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
_8 = PHI <0(3), _20(6)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_28 = VDEF <.MEM_22>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:125:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d945a0
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_convert_section_contents========= [0m
[40;44m =======node_fun:bfd_get_full_section_contents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_get_full_section_contents  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:bfd_malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
In function ‘bfd_get_full_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:bfd_get_section_contents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_section_contents  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:bfd_get_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_11(D)>
memset (location_6(D), 0, 4);
memset (location_6(D), 0, 4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: use location
   34 |                 memset (location, 0, 4);
      |                 ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
if (location_6(D) != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:12: warning: use location
   33 |         if (location) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
   39 |         return __RANDBOOL;
      |                ^
_3 = _2 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_9 = (int) _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_4 = PHI <1(3), _9(4)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_section_contents========= [0m
[40;42m =======pre_check_funciton:bfd_get_full_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_full_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
if (p_32 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:54:52: warning: use location
   54 |                                                 if (p == NULL)
      |                                                    ^
# .MEM_48 = VDEF <.MEM_39(D)>
p_32 = bfd_malloc (4);
p_32 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:53:66: warning: use location
   53 |                                                 p = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ee8
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_32 = bfd_malloc (4);
    version:32
    ptr-info 0x7f62e2d8aaf8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_6 = PHI <p_18(3), p_32(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with sec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94dc8
    type <pointer_type 0x7f62e2d7cb28 sec_ptr
        type <record_type 0x7f62e2d7c9d8 bfd_section BLK
            size <integer_cst 0x7f62e2d6ab58 constant 2176>
            unit-size <integer_cst 0x7f62e2d6a7b0 constant 272>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e2d7c9d8 fields <field_decl 0x7f62e2d81130 name> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d7ca80>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83500 sec>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7f62e2d8aa98>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^
*p_6 = 12;
./benchmarks/binutils/leak_8/binutils_leak_8.c:58:36: warning: use location
   58 |                                 *p = 12;
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94c18
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_6 = PHI <p_18(3), p_32(4)>
    version:6
    ptr-info 0x7f62e2d8aa20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*ptr_17(D) = p_6;
./benchmarks/binutils/leak_8/binutils_leak_8.c:66:38: warning: use location
   66 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
is Other function bfd_get_section_contents
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
_2 = bfd_get_section_contents (sec_19(D), p_6);
_2 = bfd_get_section_contents (sec_19(D), p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:38: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                      ^
this stmt call this function :bfd_get_section_contents
trace fucntion name:bfd_get_section_contents 
[40;44m =======trace_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>
[40;36m ======= node_fun:bfd_get_section_contents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_2 == 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:59:36: warning: use location
   59 |                                 if (!bfd_get_section_contents (sec, p))
      |                                    ^
_1 = sec_19(D)->compress_status;
./benchmarks/binutils/leak_8/binutils_leak_8.c:48:20: warning: use location
   48 |         switch (sec->compress_status)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94af8
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _2 = bfd_get_section_contents (sec_19(D), p_6);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with compressed_buffer ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e10
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91900 compressed_buffer>
    def_stmt compressed_buffer_21 = bfd_malloc (4);
    version:21
    ptr-info 0x7f62e2d8aab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (compressed_buffer_21 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:71:36: warning: use location
   71 |                                 if (compressed_buffer == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_40 = VDEF <.MEM_39(D)>
compressed_buffer_21 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:70:66: warning: use location
   70 |                                 compressed_buffer = (bfd_byte *) bfd_malloc (4);
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94b88
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
_5 = _4 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (_5 == 1)
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:36: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
_4 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:74:37: warning: use location
   74 |                                 if (__RANDBOOL)
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94e58
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_24 = bfd_malloc (4);
    version:24
    ptr-info 0x7f62e2d8aac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_7 = PHI <p_18(13), p_24(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_44 = VDEF <.MEM_43>
*ptr_17(D) = p_7;
./benchmarks/binutils/leak_8/binutils_leak_8.c:84:38: warning: use location
   84 |                                 *ptr = p;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_7 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:80:36: warning: use location
   80 |                                 if (p == NULL)
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_42 = VDEF <.MEM_41>
p_24 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:78:58: warning: use location
   78 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_11>
return _5;
lto1: warning: use location
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
is Other function bfd_malloc
 
 Start check Pointer Collect  

======================================================================
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location
this stmt have mutiple branch ---bfd_malloc-----
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^
this stmt call this function :bfd_malloc
trace fucntion name:bfd_malloc 
[40;44m =======trace_function_path bfd_malloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>
[40;36m ======= node_fun:bfd_malloc========= [0m
[40;36m ======= find relate stmt with p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d94ea0
    type <pointer_type 0x7f62e2d73f18
        type <integer_type 0x7f62e2d73e70 bfd_byte public unsigned QI
            size <integer_cst 0x7f62e325bca8 constant 8>
            unit-size <integer_cst 0x7f62e325bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e325bcd8 0> max <integer_cst 0x7f62e325bc78 255> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>
            pointer_to_this <pointer_type 0x7f62e2d73f18>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e2d73348>>
    var <var_decl 0x7f62e2d91870 p>
    def_stmt p_29 = bfd_malloc (4);
    version:29
    ptr-info 0x7f62e2d8aae0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: use location
   62 |                                                         free (p);
      |                                                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: use location
   83 |                                 free (compressed_buffer);
      |                                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: use location
   88 |                                         free (compressed_buffer);
      |                                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
p_8 = PHI <p_18(19), p_29(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_37>
*ptr_17(D) = p_8;
./benchmarks/binutils/leak_8/binutils_leak_8.c:97:46: warning: use location
   97 |                                         *ptr = p;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
if (p_8 == 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:94:44: warning: use location
   94 |                                         if (p == NULL)
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_50>
free (p_6);
./benchmarks/binutils/leak_8/binutils_leak_8.c:62:57: warning: free in this location
   62 |                                                         free (p);
      |                                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_35>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:83:33: warning: free in this location
   83 |                                 free (compressed_buffer);
      |                                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_36>
free (compressed_buffer_21);
./benchmarks/binutils/leak_8/binutils_leak_8.c:88:41: warning: free in this location
   88 |                                         free (compressed_buffer);
      |                                         ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_39(D)>
p_29 = bfd_malloc (4);
./benchmarks/binutils/leak_8/binutils_leak_8.c:93:58: warning: use location
   93 |                                         p = (bfd_byte *) bfd_malloc (4);
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_full_section_contents========= [0m
[40;44m =======node_fun:bfd_get_section_contents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_get_section_contents  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:bfd_get_section_contents========= [0m
[40;42m =======start_check_funciton:bfd_get_section_contents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_11(D)>
memset (location_6(D), 0, 4);
memset (location_6(D), 0, 4);
In function ‘bfd_get_section_contents’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:34:17: warning: use location
   34 |                 memset (location, 0, 4);
      |                 ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
if (location_6(D) != 0B)
./benchmarks/binutils/leak_8/binutils_leak_8.c:33:12: warning: use location
   33 |         if (location) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d678
    type <pointer_type 0x7f62e3277150
        type <void_type 0x7f62e32770a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277150>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f62e2d83980 location>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f62e2d8ab10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
   39 |         return __RANDBOOL;
      |                ^
_3 = _2 == 1;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_9 = (int) _3;
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
_4 = PHI <1(3), _9(4)>
lto1: warning: use location
this stmt have mutiple branch ---rand-----
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = rand ();
_1 = rand ();
./benchmarks/binutils/leak_8/binutils_leak_8.c:39:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d558
    type <integer_type 0x7f62e32705e8 int public SI
        size <integer_cst 0x7f62e325bdf8 constant 32>
        unit-size <integer_cst 0x7f62e325be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32705e8 precision:32 min <integer_cst 0x7f62e325bdb0 -2147483648> max <integer_cst 0x7f62e325bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f62e32779d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_get_section_contents========= [0m
[40;44m =======node_fun:bfd_malloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_malloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:bfd_malloc========= [0m
[40;42m =======start_check_funciton:bfd_malloc========= [0m

dot graph START

======================================================================
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652a0
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d989f0
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
In function ‘bfd_malloc’:
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
   19 |                         printf("bfd_error_no_memory\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_12(D)>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:19:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_2 = ptr_10 == 0B;
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:11: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |           ^
if (_4 != 0)
./benchmarks/binutils/leak_8/binutils_leak_8.c:24:6: warning: use location
   24 |   if (ptr == NULL && sz != 0)
      |      ^
# .MEM_13 = VDEF <.MEM_12(D)>
ptr_10 = malloc (size_7(D));
ptr_10 = malloc (size_7(D));
./benchmarks/binutils/leak_8/binutils_leak_8.c:23:9: warning: use location
   23 |   ptr = malloc (sz); // allocation site
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f62e2d9d9d8
    type <pointer_type 0x7f62e3277000
        type <void_type 0x7f62e3270f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f62e3277000>>
        public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f62e327c9d8>>
    var <var_decl 0x7f62e2da0000 ptr>
    def_stmt ptr_10 = malloc (size_7(D));
    version:10
    ptr-info 0x7f62e2d8ab40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f62e32652d8
    type <integer_type 0x7f62e2d73888 char readonly QI
        size <integer_cst 0x7f62e325bca8 constant 8>
        unit-size <integer_cst 0x7f62e325bcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e32703f0 precision:8 min <integer_cst 0x7f62e2d6a720 -128> max <integer_cst 0x7f62e2d6a708 127>
        pointer_to_this <pointer_type 0x7f62e2d73930>>
   
    arg:0 <string_cst 0x7f62e2d98a20
        type <array_type 0x7f62e2d7b7e0 type <integer_type 0x7f62e2d73888 char>
            BLK
            size <integer_cst 0x7f62e2d6a798 constant 160>
            unit-size <integer_cst 0x7f62e2d6a780 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f62e2d7b738>>
        readonly constant static "bfd_error_no_memory\000">
    arg:1 <integer_cst 0x7f62e325bf48 type <integer_type 0x7f62e32705e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
   25 |                 printf("bfd_error_no_memory\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_14 = VDEF <.MEM_13>
__builtin_puts (&"bfd_error_no_memory"[0]);
__builtin_puts (&"bfd_error_no_memory"[0]);
./benchmarks/binutils/leak_8/binutils_leak_8.c:25:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f62e2d9d990
    type <integer_type 0x7f62e2d739d8 bfd_size_type public unsigned DI
        size <integer_cst 0x7f62e325bbb8 constant 64>
        unit-size <integer_cst 0x7f62e325bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f62e3270738 precision:64 min <integer_cst 0x7f62e325bed0 0> max <integer_cst 0x7f62e325c520 18446744073709551615> context <translation_unit_decl 0x7f62e3266168 ./benchmarks/binutils/leak_8/binutils_leak_8.c>>
    var <parm_decl 0x7f62e2d83a80 size>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_malloc========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_3 = rand ();
_4 = _3 % 3;
_5 = (<unnamed-unsigned:2>) _4;
sec.compress_status = _5;
copy_section (&sec);
sec ={v} {CLOBBER};
return 0;

=======Mapping node_fun:copy_section=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
memhunk = 0B;
_1 = rand ();
_2 = _1 % 2;
if (_2 == 1)
  goto <bb 3>; [34.00%]
else
  goto <bb 8>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
_3 = bfd_get_full_section_contents (isection_23(D), &memhunk);
if (_3 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 178447302]:
_4 = bfd_convert_section_contents (isection_23(D), &memhunk);
if (_4 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 277847183]:
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 87225041]:
_5 = memhunk;
_6 = MEM[(int *)_5];
printf ("%d\n", _6);
_7 = memhunk;
_8 = bfd_set_section_contents (_7);
if (_8 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 7>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 42635600]:
_9 = memhunk;
free (_9);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 708669600]:
memhunk_19 = malloc (4);
memset (memhunk_19, 0, 4);
_10 = bfd_set_section_contents (memhunk_19);
if (_10 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 9>; [48.88%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 346397698]:
free (memhunk_19);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 389033297]:
memhunk ={v} {CLOBBER};
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 684708527]:
memhunk ={v} {CLOBBER};

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
return;

=======Mapping node_fun:bfd_set_section_contents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (location_6(D) != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_1 = MEM[(int *)location_6(D)];
printf ("%d\n", _1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_2 = rand ();
_3 = _2 % 2;
_4 = _3 == 1;
_10 = (int) _4;
return _10;

=======Mapping node_fun:bfd_convert_section_contents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = rand ();
_2 = _1 % 2;
contents_15 = *ptr_14(D);
if (_2 != 1)
  goto <bb 3>; [48.88%]
else
  goto <bb 4>; [51.12%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524844999]:
contents_17 = bfd_malloc (4);
if (contents_17 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073531886]:
# contents_7 = PHI <contents_15(2), contents_17(3)>
if (contents_7 != 0B)
  goto <bb 5>; [53.47%]
else
  goto <bb 6>; [46.53%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 574017499]:
_3 = MEM[(int *)contents_7];
printf ("%d\n", _3);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073531887]:
_4 = rand ();
_5 = _4 % 2;
_6 = _5 == 1;
_20 = (int) _6;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# _8 = PHI <0(3), _20(6)>
return _8;

=======Mapping node_fun:bfd_get_full_section_contents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
p_18 = *ptr_17(D);
_1 = sec_19(D)->compress_status;
switch (_1) <default: <L4> [0.05%], case 0: <L0> [33.32%], case 1: <L3> [33.32%], case 2: <L1> [33.32%]>

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 357734984]:
<L0>:
if (p_18 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 5>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 107320494]:
p_32 = bfd_malloc (4);
if (p_32 == 0B)
  goto <bb 24>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 357692056]:
# p_6 = PHI <p_18(3), p_32(4)>
*p_6 = 12;
_2 = bfd_get_section_contents (sec_19(D), p_6);
if (_2 == 0)
  goto <bb 6>; [34.00%]
else
  goto <bb 9>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 121615300]:
_3 = *ptr_17(D);
if (_3 != p_6)
  goto <bb 7>; [53.47%]
else
  goto <bb 8>; [46.53%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 65027701]:
free (p_6);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 121615300]:
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 236076756]:
*ptr_17(D) = p_6;
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 357734984]:
<L1>:
compressed_buffer_21 = bfd_malloc (4);
if (compressed_buffer_21 == 0B)
  goto <bb 24>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 357591890]:
_4 = rand ();
_5 = _4 % 2;
if (_5 == 1)
  goto <bb 12>; [20.97%]
else
  goto <bb 13>; [79.03%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 74987021]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 282604870]:
if (p_18 == 0B)
  goto <bb 14>; [17.43%]
else
  goto <bb 15>; [82.57%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 49258029]:
p_24 = bfd_malloc (4);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 282604870]:
# p_7 = PHI <p_18(13), p_24(14)>
if (p_7 == 0B)
  goto <bb 16>; [30.95%]
else
  goto <bb 17>; [69.05%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 87466208]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 195138662]:
free (compressed_buffer_21);
*ptr_17(D) = p_7;
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 162453228]:
fail_compressed:
free (compressed_buffer_21);
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 357734984]:
<L3>:
if (p_18 == 0B)
  goto <bb 20>; [17.43%]
else
  goto <bb 21>; [82.57%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 62353208]:
p_29 = bfd_malloc (4);

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 357734985]:
# p_8 = PHI <p_18(19), p_29(20)>
if (p_8 == 0B)
  goto <bb 24>; [18.09%]
else
  goto <bb 22>; [81.91%]

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 293020726]:
*ptr_17(D) = p_8;
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 536864]:
<L4>:
exit (1);

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 1073204955]:
# _9 = PHI <0(4), 0(8), 1(9), 0(10), 1(17), 0(18), 0(21), 1(22)>
return _9;

=======Mapping node_fun:bfd_get_section_contents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (location_6(D) != 0B)
  goto <bb 3>; [54.59%]
else
  goto <bb 4>; [45.41%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 586155665]:
memset (location_6(D), 0, 4);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 487586160]:
_1 = rand ();
_2 = _1 % 2;
_3 = _2 == 1;
_9 = (int) _3;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _4 = PHI <1(3), _9(4)>
return _4;

=======Mapping node_fun:bfd_malloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = (long int) size_7(D);
if (_1 < 0)
  goto <bb 3>; [12.76%]
else
  goto <bb 4>; [87.24%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 137009456]:
__builtin_puts (&"bfd_error_no_memory"[0]);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 936732369]:
ptr_10 = malloc (size_7(D));
_2 = ptr_10 == 0B;
_3 = size_7(D) != 0;
_4 = _2 & _3;
if (_4 != 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 309121680]:
__builtin_puts (&"bfd_error_no_memory"[0]);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _5 = PHI <0B(3), ptr_10(4), ptr_10(5)>
return _5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    all ptable point : 37 [0m
[40;34m    analyzable ptable point : 30 [0m
[40;34m    used_stmt array stack totalsize of : 0.001920 mb[0m
[40;34m    collect time: : 0.002673 s [0m
[40;34m    algorithm time: 0.202944 s [0m
[40;34m    gimple stmt count : : 110 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:47 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 76%)
 phase opt and generate             :   0.09 (100%)   0.15 (100%)   0.24 (100%)   598k ( 21%)
 callgraph functions expansion      :   0.03 ( 33%)   0.01 (  7%)   0.03 ( 13%)   480k ( 17%)
 ipa lto gimple in                  :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    83k (  3%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)    40  (  0%)
 tree strlen optimization           :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  8032  (  0%)
 dominance computation              :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 combiner                           :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    45k (  2%)
 integrated RA                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)   173k (  6%)
 plugin execution                   :   0.05 ( 56%)   0.14 ( 93%)   0.21 ( 87%)  2560  (  0%)
 initialize rtl                     :   0.01 ( 11%)   0.01 (  7%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.09          0.15          0.24         2820k
