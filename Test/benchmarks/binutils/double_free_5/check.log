In file included from ./benchmarks/binutils/double_free_5/binutils_df_5.c:6:0:
./benchmarks/binutils/double_free_5/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/double_free_5/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/double_free_5/binutils_df_5.c: At top level:
./benchmarks/binutils/double_free_5/binutils_df_5.c:17:26: warning: â€˜struct symbolâ€™ declared inside parameter list will not be visible outside of this definition or declaration
 find_oload_champ (struct symbol **oload_syms,
                          ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:37:10: warning: â€˜struct symbolâ€™ declared inside parameter list will not be visible outside of this definition or declaration
   struct symbol ***oload_syms,
          ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c: In function â€˜find_oload_champ_namespace_loopâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
  int name_len = strlen(qualified_name);
                 ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:39: warning: passing argument 1 of â€˜find_oload_champâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
                                       ^~~~~~~~~~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:17:1: note: expected â€˜struct symbol **â€™ but argument is of type â€˜struct symbol **â€™
 find_oload_champ (struct symbol **oload_syms,
 ^~~~~~~~~~~~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c: In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:48: warning: passing argument 3 of â€˜find_oload_champ_namespace_loopâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
                                                ^
./benchmarks/binutils/double_free_5/binutils_df_5.c:34:1: note: expected â€˜struct symbol ***â€™ but argument is of type â€˜symbol ** (*)[10] {aka char ** (*)[10]}â€™
 find_oload_champ_namespace_loop (
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:57: warning: passing argument 4 of â€˜find_oload_champ_namespace_loopâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
                                                         ^
./benchmarks/binutils/double_free_5/binutils_df_5.c:34:1: note: expected â€˜struct badness_vector **â€™ but argument is of type â€˜struct badness_vector * (*)[10]â€™
 find_oload_champ_namespace_loop (
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 11
succs:= 13
succs:= 6
succs:= 13
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_19 = VDEF <.MEM_17>
_15 = __printf_chk (1, "freearg: %x\n", _5);
# .MEM_25 = VDEF <.MEM_24>
_19 = __printf_chk (1, "cleanup!!!!! =========\n");
# .MEM_26 = VDEF <.MEM_25>
_18 = __printf_chk (1, "%x\n", _4);
# VUSE <.MEM_45>
_3 = strlen (qualified_name_24(D));
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
# .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
# .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
# .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
# .MEM_98 = VDEF <.MEM_52>
_78 = __printf_chk (1, "%d\n", _77);
# .MEM_99 = VDEF <.MEM_98>
bv_79 = malloc (16);
# .MEM_104 = VDEF <.MEM_63>
do_my_cleanups (&cleanup_chain, old_cleanups_36);
# .MEM_103 = VDEF <.MEM_59>
discard_my_cleanups (&cleanup_chain, old_cleanups_36);
# .MEM_102 = VDEF <.MEM_56>
discard_my_cleanups (&cleanup_chain, old_cleanups_36);
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
# .MEM_7 = VDEF <.MEM_2>
do_my_cleanups (&cleanup_chain, 0B);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:discard_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;44m =======node_fun:find_oload_champ_namespace_loop========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:find_oload_champ_namespace_loop========= [0m
[40;42m =======start_check_funciton:find_oload_champ_namespace_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>
# .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>
# .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
cleanup_chain = new_74;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
cleanup_chain = new_74;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
new_74->free_arg = 0B;
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^
new_74->function = free;
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
# .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_oload_syms_38 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
# .MEM_99 = VDEF <.MEM_98>
bv_79 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_oload_champ_bv_107 = bv_79;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:18: warning: use location
  *oload_champ_bv = bv;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = new_oload_champ_bv_107;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
_13 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = new_oload_champ_bv_107;
bb index := 14
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_14 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
bb index := 14
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = new_oload_champ_bv_107;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
_15 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
bv_79 = malloc (16);
./benchmarks/binutils/double_free_5/binutils_df_5.c:25:5: warning: use location
  bv = malloc(sizeof(struct badness_vector));
     ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
_15 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
_15 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
this stmt is child function---find_oload_champ_namespace_loop-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 16
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   *oload_syms = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
_10 = new_oload_champ_41 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:22: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                      ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:28: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                            ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
     ^
if (_12 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 11
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 12
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:6: warning: use location
  int name_len = strlen(qualified_name);
      ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                      ^
if (_6 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 3
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
this stmt is child function---find_oload_champ_namespace_loop-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 16
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   *oload_syms = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 12
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
_10 = new_oload_champ_41 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:22: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                      ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:28: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                            ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
     ^
if (_12 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 11
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 12
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:6: warning: use location
  int name_len = strlen(qualified_name);
      ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                      ^
if (_6 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 3
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afe70 type <integer_type 0x7faa34d967e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afe70 type <integer_type 0x7faa34d967e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348af288 type <integer_type 0x7faa34d967e0 long unsigned int> constant 800>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afea0 type <integer_type 0x7faa34d967e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <addr_expr 0x7faa348d3720
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:118:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:118:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa348d3840
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:71:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:71:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:71:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa348d38c0
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:71:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:71:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:71:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa34d82f90 type <integer_type 0x7faa34d965e8 int> constant 1>
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:find_oload_champ_namespace_loop========= [0m
[40;42m =======start_check_funciton:find_oload_champ_namespace_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>
# .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70 = malloc (32);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cfcf0
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d2990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7faa348dd270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>
# .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
cleanup_chain = new_74;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
cleanup_chain = new_74;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
new_74->free_arg = 0B;
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^
new_74->function = free;
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cfe10
    type <pointer_type 0x7faa348ac9d8
        type <record_type 0x7faa348aca80 cleanup BLK
            size <integer_cst 0x7faa34d82f48 constant 256>
            unit size <integer_cst 0x7faa34d9e048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348aca80 fields <field_decl 0x7faa348ae2f8 next> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348ac9d8> chain <type_decl 0x7faa348ae390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348b41f8>>
    var <var_decl 0x7faa348d7120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7faa348dd2d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
# .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_oload_syms_38 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348cac60
    type <pointer_type 0x7faa348ac2a0
        type <pointer_type 0x7faa348ac348 type <record_type 0x7faa348ac3f0 symbol>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348ac2a0>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348ac1f8>>
    var <var_decl 0x7faa348c8480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7faa348dd210>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
# .MEM_99 = VDEF <.MEM_98>
bv_79 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
new_oload_champ_bv_107 = bv_79;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:18: warning: use location
  *oload_champ_bv = bv;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = new_oload_champ_bv_107;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
_13 = new_oload_champ_bv_107;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = new_oload_champ_bv_107;
bb index := 14
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_14 = new_oload_champ_bv_107;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
bb index := 14
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (_14);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = new_oload_champ_bv_107;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
_15 = new_oload_champ_bv_107;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
bv_79 = malloc (16);
./benchmarks/binutils/double_free_5/binutils_df_5.c:25:5: warning: use location
  bv = malloc(sizeof(struct badness_vector));
     ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348d8120
    type <pointer_type 0x7faa348acc78
        type <record_type 0x7faa348acbd0 badness_vector TI
            size <integer_cst 0x7faa34d82c30 constant 128>
            unit size <integer_cst 0x7faa34d82c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7faa348acbd0 fields <field_decl 0x7faa348ae4c0 length> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acc78> chain <type_decl 0x7faa348ae558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7faa348acd20>>
    var <var_decl 0x7faa348d76c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7faa348dd318>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
_15 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
_15 = new_oload_champ_bv_107;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:4: warning: Use after free error!: free location 
    free (new_oload_champ_bv);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
this stmt is child function---find_oload_champ_namespace_loop-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
if (_7 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 16
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_8 = *oload_syms_26(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   *oload_syms = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
_10 = new_oload_champ_41 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:22: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                      ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:28: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                            ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
     ^
if (_12 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 11
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 12
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:6: warning: use location
  int name_len = strlen(qualified_name);
      ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                      ^
if (_6 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 3
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
this stmt is child function---find_oload_champ_namespace_loop-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate stmt argument:qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 != 0)
bb index := 4
# VUSE <.MEM_43>
return _17;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
if (_7 != 0)
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      ^
if (_7 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:6: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 16
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
bb index := 14
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
free (new_oload_syms_38);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
    free (new_oload_syms);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_syms_26(D) = new_oload_syms_38;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
_77 = MEM[(int *)new_oload_syms_38];
./benchmarks/binutils/double_free_5/binutils_df_5.c:21:2: warning: use location
  __USE(oload_syms)
  ^
_78 = __printf_chk (1, "%d\n", _77);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
*new_oload_syms_38 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
if (new_oload_syms_38 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_8 = *oload_syms_26(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->arg = _8;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
cleanup_chain = new_70;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82>
new_70->free_arg = 0B;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->free_arg = 0B;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
new_70->function = free;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->function = free;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
bb index := 5
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
new_70->next = _72;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->next = _76;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^
new_74->arg = _9;
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   *oload_syms = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _15;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_bv_28(D) = _13;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:20: warning: use location
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 15
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_31(D) = new_oload_champ_41;
bb index := 12
# VUSE <.MEM_43>
return _17;
In function â€˜find_oload_champ_namespace_loopâ€™:
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================
*oload_champ_31(D) = new_oload_champ_41;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
_10 = new_oload_champ_41 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:22: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                      ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:28: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
                            ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
  if (new_oload_champ != -1 || call_num == 1)
     ^
if (_12 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:5: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 11
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 12
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:6: warning: use location
  int name_len = strlen(qualified_name);
      ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:55: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                      ^
if (_6 == 58)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:38: warning: use location
Cond in fucntion find_oload_champ_namespace_loop basic block 3
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 4
 ================== possible direct basic block ================= 
from find_oload_champ_namespace_loop basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7faa348caa20
    type <pointer_type 0x7faa348acf18
        type <integer_type 0x7faa348ace70 char readonly public string-flag QI
            size <integer_cst 0x7faa34d82cd8 constant 8>
            unit size <integer_cst 0x7faa34d82cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faa34d963f0 precision 8 min <integer_cst 0x7faa348af180 -128> max <integer_cst 0x7faa348af168 127> context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7faa348acf18>>
        public unsigned DI
        size <integer_cst 0x7faa34d82be8 constant 64>
        unit size <integer_cst 0x7faa34d82c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faa348b7580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7faa348dd180>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afe70 type <integer_type 0x7faa34d967e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afe70 type <integer_type 0x7faa34d967e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348af288 type <integer_type 0x7faa34d967e0 long unsigned int> constant 800>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7faa348afea0 type <integer_type 0x7faa34d967e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <addr_expr 0x7faa348d3720
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:118:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:118:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa348d3840
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:71:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:71:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:71:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa348d38c0
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:71:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:71:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:71:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7faa348d3980
    type <pointer_type 0x7faa348b4e70
        type <array_type 0x7faa348b4dc8 type <integer_type 0x7faa348acdc8 char>
            DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7faa348b4d20>
            pointer_to_this <pointer_type 0x7faa348b4e70>>
        unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7faa348d3960 type <array_type 0x7faa348b4dc8>
        readonly constant static "A::B::C\000">
    ./benchmarks/binutils/double_free_5/binutils_df_5.c:113:26 start: ./benchmarks/binutils/double_free_5/binutils_df_5.c:113:26 finish: ./benchmarks/binutils/double_free_5/binutils_df_5.c:113:26>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7faa348d3a80
    type <pointer_type 0x7faa348b41f8
        type <pointer_type 0x7faa348ac9d8 type <record_type 0x7faa348aca80 cleanup>
            public unsigned DI
            size <integer_cst 0x7faa34d82be8 constant 64>
            unit size <integer_cst 0x7faa34d82c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7faa348b41f8>>
        public unsigned DI size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7faa35b18ab0 cleanup_chain type <pointer_type 0x7faa348ac9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_5/../include/common.h line 49 col 24 size <integer_cst 0x7faa34d82be8 64> unit size <integer_cst 0x7faa34d82c00 8>
        align 64 context <translation_unit_decl 0x7faa34d8d168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7faa34d82bd0>>
    ./benchmarks/binutils/double_free_5/../include/common.h:118:3 start: ./benchmarks/binutils/double_free_5/../include/common.h:118:3 finish: ./benchmarks/binutils/double_free_5/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:discard_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_1 = ptr_10->next;
*pmy_chain_9(D) = _1;
_2 = ptr_10->free_arg;
if (_2 != 0B)
  goto <bb 4>; [93.48%]
else
  goto <bb 5>; [6.52%]

=======is loop:1=========

 bb index 4 
<bb 4> [79.46%]:
_3 = ptr_10->free_arg;
_4 = ptr_10->arg;
_3 (_4);

=======is loop:1=========

 bb index 5 
<bb 5> [85.00%]:
free (ptr_10);

=======is loop:1=========

 bb index 6 
<bb 6> [100.00%]:
ptr_10 = *pmy_chain_9(D);
if (ptr_10 != old_chain_11(D))
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [15.00%]:
_5 = ptr_10->arg;
_15 = __printf_chk (1, "freearg: %x\n", _5);
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
_19 = __printf_chk (1, "cleanup!!!!! =========\n");
_4 = ptr_12->arg;
_18 = __printf_chk (1, "%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [93.48%]
else
  goto <bb 5>; [6.52%]

=======is loop:1=========

 bb index 4 
<bb 4> [79.46%]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [85.00%]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [100.00%]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [15.00%]:
return;

=======Mapping node_fun:find_oload_champ_namespace_loop=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = static_call_num;
_2 = _1 + 1;
static_call_num = _2;
call_num_23 = static_call_num;
_3 = strlen (qualified_name_24(D));
name_len_25 = (int) _3;
*oload_syms_26(D) = 0B;
*oload_champ_bv_28(D) = 0B;
if (namespace_len_20(D) < name_len_25)
  goto <bb 3>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [67.00%]:
_4 = (sizetype) namespace_len_20(D);
_5 = qualified_name_24(D) + _4;
_6 = *_5;
if (_6 == 58)
  goto <bb 4>; [7.80%]
else
  goto <bb 5>; [92.20%]

=======is loop:0=========

 bb index 4 
<bb 4> [5.23%]:
next_namespace_len_30 = namespace_len_20(D) + 3;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
if (_7 != 0)
  goto <bb 16>; [46.00%]
else
  goto <bb 5>; [54.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [97.60%]:
# searched_deeper_16 = PHI <0(2), 0(3), 1(4)>
_8 = *oload_syms_26(D);
new_70 = malloc (32);
old_chain_71 = cleanup_chain;
_72 = cleanup_chain;
new_70->next = _72;
new_70->function = free;
new_70->free_arg = 0B;
new_70->arg = _8;
cleanup_chain = new_70;
if (old_chain_71 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [0.04%]:
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [97.56%]:
_86 = old_chain_71;
_69 = _86;
_87 = _69;
_68 = _87;
_88 = _68;
old_cleanups_34 = _88;
_9 = *oload_champ_bv_28(D);
new_74 = malloc (32);
old_chain_75 = cleanup_chain;
_76 = cleanup_chain;
new_74->next = _76;
new_74->function = free;
new_74->free_arg = 0B;
new_74->arg = _9;
cleanup_chain = new_74;
if (old_chain_75 == 0B)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [0.04%]:
exit (1);

=======is loop:0=========

 bb index 9 
<bb 9> [97.52%]:
_95 = old_chain_75;
_73 = _95;
_96 = _73;
_67 = _96;
_97 = _67;
old_cleanups_36 = _97;
new_oload_syms_38 = malloc (800);
if (new_oload_syms_38 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [0.04%]:
exit (1);

=======is loop:0=========

 bb index 11 
<bb 11> [97.48%]:
*new_oload_syms_38 = 0B;
_77 = MEM[(int *)new_oload_syms_38];
_78 = __printf_chk (1, "%d\n", _77);
bv_79 = malloc (16);
new_oload_champ_bv_107 = bv_79;
_101 = -1;
new_oload_champ_41 = _101;
_10 = new_oload_champ_41 != -1;
_11 = call_num_23 == 1;
_12 = _10 | _11;
if (_12 != 0)
  goto <bb 12>; [29.56%]
else
  goto <bb 13>; [70.44%]

=======is loop:0=========

 bb index 12 
<bb 12> [28.81%]:
*oload_syms_26(D) = new_oload_syms_38;
*oload_champ_31(D) = new_oload_champ_41;
_13 = new_oload_champ_bv_107;
*oload_champ_bv_28(D) = _13;
do_my_cleanups (&cleanup_chain, old_cleanups_36);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [68.66%]:
if (searched_deeper_16 != 0)
  goto <bb 14>; [46.00%]
else
  goto <bb 15>; [54.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [31.59%]:
free (new_oload_syms_38);
_14 = new_oload_champ_bv_107;
free (_14);
discard_my_cleanups (&cleanup_chain, old_cleanups_36);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [37.08%]:
*oload_syms_26(D) = new_oload_syms_38;
*oload_champ_31(D) = new_oload_champ_41;
_15 = new_oload_champ_bv_107;
*oload_champ_bv_28(D) = _15;
discard_my_cleanups (&cleanup_chain, old_cleanups_36);

=======is loop:0=========

 bb index 16 
<bb 16> [99.88%]:
# _17 = PHI <1(4), 1(12), 0(14), 0(15)>
return _17;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
do_my_cleanups (&cleanup_chain, 0B);
symvec ={v} {CLOBBER};
bvvec ={v} {CLOBBER};
oload_champ ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 5 [0m
[40;34m    used_stmt array stack totalsize of : 2408 [0m
[40;34m    collect time: : 0.000327 s [0m
[40;34m    algorithm time: 0.036251 s [0m
[40;34m    gimple stmt count : : 116 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
