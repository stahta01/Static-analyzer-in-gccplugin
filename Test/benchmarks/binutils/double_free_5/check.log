../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/double_free_5/binutils_df_5.c:17:26: warning: ‘struct symbol’ declared inside parameter list will not be visible outside of this definition or declaration
   17 | find_oload_champ (struct symbol **oload_syms,
      |                          ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:37:24: warning: ‘struct symbol’ declared inside parameter list will not be visible outside of this definition or declaration
   37 |                 struct symbol ***oload_syms,
      |                        ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c: In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   54 |         int name_len = strlen(qualified_name);
      |                        ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:7:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
    6 | #include "../include/common.h"
  +++ |+#include <string.h>
    7 | 
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   54 |         int name_len = strlen(qualified_name);
      |                        ^~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:39: warning: passing argument 1 of ‘find_oload_champ’ from incompatible pointer type [-Wincompatible-pointer-types]
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                                       ^~~~~~~~~~~~~~
      |                                       |
      |                                       struct symbol **
./benchmarks/binutils/double_free_5/binutils_df_5.c:17:35: note: expected ‘struct symbol **’ but argument is of type ‘struct symbol **’
   17 | find_oload_champ (struct symbol **oload_syms,
      |                   ~~~~~~~~~~~~~~~~^~~~~~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c: In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:55: warning: passing argument 3 of ‘find_oload_champ_namespace_loop’ from incompatible pointer type [-Wincompatible-pointer-types]
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |                                                       ^~~~~~~
      |                                                       |
      |                                                       symbol ** (*)[10] {aka char ** (*)[10]}
./benchmarks/binutils/double_free_5/binutils_df_5.c:37:34: note: expected ‘struct symbol ***’ but argument is of type ‘symbol ** (*)[10]’ {aka ‘char ** (*)[10]’}
   37 |                 struct symbol ***oload_syms,
      |                 ~~~~~~~~~~~~~~~~~^~~~~~~~~~
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:64: warning: passing argument 4 of ‘find_oload_champ_namespace_loop’ from incompatible pointer type [-Wincompatible-pointer-types]
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |                                                                ^~~~~~
      |                                                                |
      |                                                                struct badness_vector * (*)[10]
./benchmarks/binutils/double_free_5/binutils_df_5.c:38:41: note: expected ‘struct badness_vector **’ but argument is of type ‘struct badness_vector * (*)[10]’
   38 |                 struct badness_vector **oload_champ_bv,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 52%)
 phase parsing                      :   0.03 (100%)   0.01 ( 50%)   0.04 ( 80%)   999k ( 40%)
 phase opt and generate             :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 20%)   177k (  7%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 20%)   100k (  4%)
 preprocessing                      :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 20%)   289k ( 12%)
 lexical analysis                   :   0.01 ( 33%)   0.00 (  0%)   0.02 ( 40%)     0  (  0%)
 parser (global)                    :   0.02 ( 67%)   0.00 (  0%)   0.01 ( 20%)   591k ( 24%)
 dominance computation              :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 TOTAL                              :   0.03          0.02          0.05         2485k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    55k (  2%)
 lto stream decompression           :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.00          0.00          0.01         2214k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------find_oload_champ_namespace_loop--
addr_expraddr_expraddr_expraddr_expraddr_expr------do_cleanups--
=======node_fun:find_oload_champ_namespace_loop=========
node:= 2 
 	next_branch :=3
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=12
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------find_oload_champ_namespace_loop--
node:= 5 
 	next_branch :=6
	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
node:= 6 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 7 
 	next_branch :=8
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------find_oload_champ--
node:= 8 
 	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------do_cleanups--
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------discard_cleanups--
node:= 11 
 	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------discard_cleanups--
=======node_fun:find_oload_champ=========
=======node_fun:make_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup--
=======node_fun:make_my_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup2--
=======node_fun:make_my_cleanup2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:do_cleanups=========
addr_expraddr_expraddr_expraddr_expraddr_expr------do_my_cleanups--
=======node_fun:do_my_cleanups=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:discard_my_cleanups=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:discard_cleanups=========
addr_expraddr_expraddr_expraddr_expraddr_expr------discard_my_cleanups--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 36 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
# .MEM_3 = VDEF <.MEM_2>
do_cleanups (0B);
# VUSE <.MEM_44>
_3 = strlen (qualified_name_24(D));
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
# .MEM_50 = VDEF <.MEM_49>
new_oload_syms_37 = malloc (800);
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
# .MEM_10 = VDEF <.MEM_9>
bv_6 = malloc (16);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
========================================================
=============== *this point analyzable =================
_3 = strlen (qualified_name_24(D));
========================================================
=============== *this point analyzable =================
_3 = strlen (qualified_name_24(D));
========================================================
=============== *this point analyzable =================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
========================================================
=============== *this point analyzable =================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
========================================================
=============== *this point analyzable =================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
========================================================
=============== *this point analyzable =================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
========================================================
=============== *this point analyzable =================
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
make_cleanup (free, _8);
========================================================
=============== *this point analyzable =================
make_cleanup (free, _8);
========================================================
=============== *this point analyzable =================
old_cleanups_35 = make_cleanup (free, _9);
========================================================
=============== *this point analyzable =================
old_cleanups_35 = make_cleanup (free, _9);
========================================================
=============== *this point analyzable =================
new_oload_syms_37 = malloc (800);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
========================================================
=============== *this point analyzable =================
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
========================================================
=============== *this point analyzable =================
bv_6 = malloc (16);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
new_4 = malloc (32);
========================================================
=============== *this point analyzable =================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"cleanup!!!!! ========="[0]);
========================================================
=============== *this point analyzable =================
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_cleanups  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre_check_funciton:discard_cleanups========= [0m
[40;42m =======start_check_funciton:discard_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:discard_cleanups========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_oload_champ  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:find_oload_champ========= [0m
[40;42m =======start_check_funciton:find_oload_champ========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_champ_bv_7(D) = bv_6;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
# .MEM_10 = VDEF <.MEM_9>
bv_6 = malloc (16);
bv_6 = malloc (16);
./benchmarks/binutils/double_free_5/binutils_df_5.c:25:14: warning: use location
   25 |         bv = malloc(sizeof(struct badness_vector));
      |              ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:find_oload_champ_namespace_loop========= [0m
[40;42m =======start_check_funciton:find_oload_champ_namespace_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
_3 = strlen (qualified_name_24(D));
_3 = strlen (qualified_name_24(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 != 0)
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
_3 = strlen (qualified_name_24(D));
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:8 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:5 
if (_7 != 0)
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:5 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:7 
do_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_bv_28(D) = 0B;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:7 
if (_7 != 0)
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:7 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:8 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_syms_26(D) = 0B;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_7 != 0)
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:4 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
*oload_syms_26(D) = 0B;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:7 
do_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_bv_28(D) = 0B;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :888========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :890========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :890========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :891========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :889========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :891========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :891========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :891========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :892========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
is Other function find_oload_champ_namespace_loop
 
 Start check Pointer Collect  

======================================================================
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :12 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_cleanup
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
# .MEM_50 = VDEF <.MEM_49>
new_oload_syms_37 = malloc (800);
new_oload_syms_37 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:26: warning: use location
   76 |         new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
new_oload_syms_37 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:26: warning: use location
   76 |         new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:new_oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:new_oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>

 ================== pre trace ptable ================== 
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
is Other function find_oload_champ
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_57>
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_57>
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2eb485db80
    type <array_type 0x7f2eb4183540
        type <integer_type 0x7f2eb4179bd0 char public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>>
        DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb4183498 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb4170900 7>>
        pointer_to_this <pointer_type 0x7f2eb41835e8>>
    readonly constant static "A::B::C\000">

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09f30 symvec
    type <array_type 0x7f2eb41833f0
        type <pointer_type 0x7f2eb4183348 type <pointer_type 0x7f2eb41832a0>
            unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183690>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:110:11 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09ea0 bvvec>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with symvec ========= [0m
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:symvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:16 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:16 [0m
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09ea0 bvvec
    type <array_type 0x7f2eb4183150
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        BLK
        size <integer_cst 0x7f2eb47360a8 constant 640>
        unit-size <integer_cst 0x7f2eb41708d0 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2eb41830a8 type <integer_type 0x7f2eb4676000 sizetype>
            DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661be8 0> max <integer_cst 0x7f2eb41708b8 9>>
        pointer_to_this <pointer_type 0x7f2eb4183738>>
    addressable BLK ./benchmarks/binutils/double_free_5/binutils_df_5.c:111:25 size <integer_cst 0x7f2eb47360a8 640> unit-size <integer_cst 0x7f2eb41708d0 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main> chain <var_decl 0x7f2eb4f09e10 oload_champ>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with bvvec ========= [0m
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bvvec========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:16 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:16 [0m
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
# .MEM_2 = VDEF <.MEM_1(D)>
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:115:9: warning: use location
  115 |         find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
      |         ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘main’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <var_decl 0x7f2eb4f09e10 oload_champ
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    addressable SI ./benchmarks/binutils/double_free_5/binutils_df_5.c:112:6 size <integer_cst 0x7f2eb4661df8 32> unit-size <integer_cst 0x7f2eb4661e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7f2eb4181400 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:16 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:16 [0m
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:16 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:find_oload_champ_namespace_loop========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre_check_funciton:discard_cleanups========= [0m
[40;42m =======start_check_funciton:discard_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:discard_cleanups========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_oload_champ  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:find_oload_champ========= [0m
[40;42m =======start_check_funciton:find_oload_champ========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_champ_bv_7(D) = bv_6;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
# .MEM_10 = VDEF <.MEM_9>
bv_6 = malloc (16);
bv_6 = malloc (16);
./benchmarks/binutils/double_free_5/binutils_df_5.c:25:14: warning: use location
   25 |         bv = malloc(sizeof(struct badness_vector));
      |              ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:find_oload_champ_namespace_loop========= [0m
[40;42m =======start_check_funciton:find_oload_champ_namespace_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
_3 = strlen (qualified_name_24(D));
_3 = strlen (qualified_name_24(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:qualified_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with qualified_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669cf0
    type <pointer_type 0x7f2eb4179d20
        type <integer_type 0x7f2eb4179c78 char readonly public QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179d20>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185180 qualified_name>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f2eb418d768>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
_3 = strlen (qualified_name_24(D));
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669828
    type <integer_type 0x7f2eb46767e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4676738 precision:64 min <integer_cst 0x7f2eb4661e88 0> max <integer_cst 0x7f2eb4662500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2eb46827e0>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:8 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with next_namespace_len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669e10
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b5a0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:5 
if (_7 != 0)
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:5 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:7 
do_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_syms ========= [0m
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_syms========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_bv_28(D) = 0B;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669d80
    type <pointer_type 0x7f2eb4179e70
        type <pointer_type 0x7f2eb4179f18 type <pointer_type 0x7f2eb4179348>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185280 oload_syms>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f2eb418d780>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:7 
if (_7 != 0)
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:7 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:8 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_syms_26(D) = 0B;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669dc8
    type <pointer_type 0x7f2eb4182bd0
        type <pointer_type 0x7f2eb4182b28 type <record_type 0x7f2eb4182a80 badness_vector>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4182bd0>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185300 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version:28
    ptr-info 0x7f2eb418d798>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
# .MEM_58 = VDEF <.MEM_57>
free (_14);
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
*oload_syms_26(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
*oload_champ_bv_28(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
*new_oload_syms_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:4 
if (_7 != 0)
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:4 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
*oload_syms_26(D) = 0B;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:6 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:7 
do_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with oload_champ ========= [0m
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:oload_champ========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:8 
*oload_champ_bv_28(D) = 0B;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669e58
    type <pointer_type 0x7f2eb467d9d8
        type <integer_type 0x7f2eb46765e8 int public SI
            size <integer_cst 0x7f2eb4661df8 constant 32>
            unit-size <integer_cst 0x7f2eb4661e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
            pointer_to_this <pointer_type 0x7f2eb467d9d8>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185380 oload_champ>
    def_stmt GIMPLE_NOP
    version:31
    ptr-info 0x7f2eb418d7b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :888========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :890========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :890========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :891========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :889========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :891========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :891========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :891========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :892========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
is Other function find_oload_champ_namespace_loop
 
 Start check Pointer Collect  

======================================================================
_3 = strlen (qualified_name_24(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:24: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |                        ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
name_len_25 = (int) _3;
./benchmarks/binutils/double_free_5/binutils_df_5.c:54:13: warning: use location
   54 |         int name_len = strlen(qualified_name);
      |             ^
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^
this stmt call this function :find_oload_champ_namespace_loop
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 9 level :1========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
# .MEM_58 = VDEF <.MEM_57>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ_namespace_loop========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_cleanups========= [0m
[40;46m =======add node_fun stack:discard_cleanups========= [0m
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :3========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ========= [0m
[40;46m =======add node_fun stack:find_oload_champ========= [0m
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
*oload_syms_26(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:57:15: warning: use location
   57 |   *oload_syms = NULL;
      |               ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:9 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:10 
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:11 
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:12 
*oload_champ_bv_28(D) = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:58:19: warning: use location
   58 |   *oload_champ_bv = NULL;
      |                   ^
_5 = qualified_name_24(D) + _4;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                                              ^
_6 = *_5;
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:62: warning: use location
if (_6 == 58)
./benchmarks/binutils/double_free_5/binutils_df_5.c:60:45: warning: use location
   60 |         if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669948
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version:7>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_7 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:20: warning: use location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_60 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_61 = VDEF <.MEM_60>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_50>
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_41>
_8 = *oload_syms_26(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: free in this location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# VUSE <.MEM_48>
_9 = *oload_champ_bv_28(D);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
./benchmarks/binutils/double_free_5/binutils_df_5.c:65:21: warning: free in this location
   65 |                 if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
      |                     ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :12 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2eb4181300 free
    type <function_type 0x7f2eb4179738
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
            chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb41797e0>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
    attributes <tree_list 0x7f2eb417b938
        purpose <identifier_node 0x7f2eb469be10 nothrow>
        chain <tree_list 0x7f2eb417b910
            purpose <identifier_node 0x7f2eb469be38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
make_cleanup (free, _8);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669990
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
   
    def_stmt _8 = *oload_syms_26(D);
    version:8
    ptr-info 0x7f2eb418d6f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb46699d8
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
   
    def_stmt _9 = *oload_champ_bv_28(D);
    version:9
    ptr-info 0x7f2eb418d708>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_cleanup
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
# .MEM_48 = VDEF <.MEM_41>
make_cleanup (free, _8);
./benchmarks/binutils/double_free_5/binutils_df_5.c:73:18: warning: use location
   73 |   old_cleanups = make_cleanup (free, *oload_syms);                      /* double-free */
      |                  ^
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48>
old_cleanups_35 = make_cleanup (free, _9);
old_cleanups_35 = make_cleanup (free, _9);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:74:18: warning: use location
   74 |   old_cleanups = make_cleanup (free, *oload_champ_bv);
      |                  ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^
this stmt call this function :discard_cleanups
trace fucntion name:discard_cleanups 
[40;44m =======trace_function_path discard_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
do_cleanups (old_cleanups_35);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: use location
   89 |                         do_cleanups (old_cleanups);
      |                         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_cleanups ========= [0m
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ea0
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb418b3f0 old_cleanups>
    def_stmt old_cleanups_35 = make_cleanup (free, _9);
    version:35
    ptr-info 0x7f2eb418d7c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:104:25: warning: use location
  104 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_63 = VDEF <.MEM_62>
do_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:89:25: warning: free in this location
   89 |                         do_cleanups (old_cleanups);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_58>
discard_cleanups (old_cleanups_35);
./benchmarks/binutils/double_free_5/binutils_df_5.c:96:25: warning: use location
   96 |                         discard_cleanups (old_cleanups);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
# .MEM_50 = VDEF <.MEM_49>
new_oload_syms_37 = malloc (800);
new_oload_syms_37 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:26: warning: use location
   76 |         new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_syms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
new_oload_syms_37 = malloc (800);
./benchmarks/binutils/double_free_5/binutils_df_5.c:76:26: warning: use location
   76 |         new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669ee8
    type <pointer_type 0x7f2eb4179f18
        type <pointer_type 0x7f2eb4179348 type <record_type 0x7f2eb4179498 symbol>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4179f18>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4179e70>>
    var <var_decl 0x7f2eb418b360 new_oload_syms>
    def_stmt new_oload_syms_37 = malloc (800);
    version:37
    ptr-info 0x7f2eb418d7e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:new_oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2eb418b2d0 new_oload_champ_bv
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    addressable unsigned DI ./benchmarks/binutils/double_free_5/binutils_df_5.c:48:26 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2eb417aa00 find_oload_champ_namespace_loop> chain <var_decl 0x7f2eb418b240 call_num>>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ_bv ========= [0m
[40;36m ======= relate node_fun argument:new_oload_champ_bv========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
*oload_champ_bv_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>

 ================== pre trace ptable ================== 
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
is Other function find_oload_champ
 
 Start check Pointer Collect  

======================================================================
*oload_syms_26(D) = new_oload_syms_37;
In function ‘find_oload_champ_namespace_loop’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:86:37: warning: use location
   86 |                         *oload_syms = new_oload_syms;
      |                                     ^
# .MEM_52 = VDEF <.MEM_51>
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
./benchmarks/binutils/double_free_5/binutils_df_5.c:82:21: warning: use location
   82 |   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
      |                     ^
this stmt call this function :find_oload_champ
trace fucntion name:find_oload_champ 
[40;44m =======trace_function_path find_oload_champ  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>
[40;36m ======= node_fun:find_oload_champ========= [0m
[40;36m ======= find relate stmt with new_oload_champ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:87:38: warning: use location
   87 |                         *oload_champ = new_oload_champ;
      |                                      ^
_10 = new_oload_champ_40 != -1;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:29: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                             ^
_12 = _10 | _11;
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:35: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |                                   ^
if (_12 != 0)
./benchmarks/binutils/double_free_5/binutils_df_5.c:84:12: warning: use location
   84 |         if (new_oload_champ != -1 || call_num == 1)
      |            ^
*new_oload_syms_37 = 0B;
./benchmarks/binutils/double_free_5/binutils_df_5.c:80:27: warning: use location
   80 |         new_oload_syms[0] = NULL;
      |                           ^
if (new_oload_syms_37 == 0B)
./benchmarks/binutils/double_free_5/binutils_df_5.c:78:12: warning: use location
   78 |         if (!new_oload_syms)
      |            ^
_13 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
   88 |                         *oload_champ_bv = new_oload_champ_bv;
      |                                         ^
*oload_champ_bv_28(D) = _13;
./benchmarks/binutils/double_free_5/binutils_df_5.c:88:41: warning: use location
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4669f30
    type <integer_type 0x7f2eb46765e8 int public SI
        size <integer_cst 0x7f2eb4661df8 constant 32>
        unit-size <integer_cst 0x7f2eb4661e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46765e8 precision:32 min <integer_cst 0x7f2eb4661db0 -2147483648> max <integer_cst 0x7f2eb4661dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2eb467d9d8>>
    var <var_decl 0x7f2eb418b480 new_oload_champ>
    def_stmt new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
    version:40>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: use location
   94 |                         free (new_oload_syms);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
*oload_syms_26(D) = new_oload_syms_37;
./benchmarks/binutils/double_free_5/binutils_df_5.c:101:19: warning: use location
  101 |       *oload_syms = new_oload_syms;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
*oload_champ_31(D) = new_oload_champ_40;
./benchmarks/binutils/double_free_5/binutils_df_5.c:102:20: warning: use location
  102 |       *oload_champ = new_oload_champ;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_57>
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_57>
_14 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: use location
   95 |                         free (new_oload_champ_bv);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_54>
_15 = new_oload_champ_bv;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (new_oload_syms_37);
./benchmarks/binutils/double_free_5/binutils_df_5.c:94:25: warning: free in this location
   94 |                         free (new_oload_syms);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_14);
./benchmarks/binutils/double_free_5/binutils_df_5.c:95:25: warning: free in this location
   95 |                         free (new_oload_champ_bv);
      |                         ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_bv_28(D) = _15;
./benchmarks/binutils/double_free_5/binutils_df_5.c:103:23: warning: use location
  103 |       *oload_champ_bv = new_oload_champ_bv;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======node_fun:find_oload_champ========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_oload_champ  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:find_oload_champ========= [0m
[40;42m =======start_check_funciton:find_oload_champ========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*oload_champ_bv_7(D) = bv_6;
In function ‘find_oload_champ’:
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
   26 |         *oload_champ_bv = bv;
      |                         ^
*oload_champ_bv_7(D) = bv_6;
./benchmarks/binutils/double_free_5/binutils_df_5.c:26:25: warning: use location
# .MEM_10 = VDEF <.MEM_9>
bv_6 = malloc (16);
bv_6 = malloc (16);
./benchmarks/binutils/double_free_5/binutils_df_5.c:25:14: warning: use location
   25 |         bv = malloc(sizeof(struct badness_vector));
      |              ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197750
    type <pointer_type 0x7f2eb4182b28
        type <record_type 0x7f2eb4182a80 badness_vector TI
            size <integer_cst 0x7f2eb4661c00 constant 128>
            unit-size <integer_cst 0x7f2eb4661c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4182a80 fields <field_decl 0x7f2eb417c428 length> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4182b28>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4182bd0>>
    var <var_decl 0x7f2eb418bcf0 bv>
    def_stmt bv_6 = malloc (16);
    version:6
    ptr-info 0x7f2eb418d810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ========= [0m
[40;44m =======node_fun:make_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <var_decl 0x7f2eb4f09bd0 cleanup_chain
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_5/../include/common.h:49:24 size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c> initial <error_mark 0x7f2eb4661ba0>>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197900
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185500 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197948
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197990
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2eb418d870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197a68
    type <pointer_type 0x7f2eb4180e70
        type <pointer_type 0x7f2eb4179930 type <record_type 0x7f2eb4179888 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2eb4661bb8 constant 64>
            unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb4180e70>>
        public unsigned DI size <integer_cst 0x7f2eb4661bb8 64> unit-size <integer_cst 0x7f2eb4661bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185600 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197ab0
    type <pointer_type 0x7f2eb41801f8
        type <function_type 0x7f2eb4180150 make_cleanup_ftype type <void_type 0x7f2eb4676f18 void>
            QI
            size <integer_cst 0x7f2eb4661ca8 constant 8>
            unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2eb417b5f0 value <pointer_type 0x7f2eb467d000>
                chain <tree_list 0x7f2eb4675b18 value <void_type 0x7f2eb4676f18 void>>> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb41801f8>>
        unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2eb4185680 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2eb418d8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197af8
    type <pointer_type 0x7f2eb467d000
        type <void_type 0x7f2eb4676f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2eb467d000>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb46829d8>>
    var <parm_decl 0x7f2eb4185700 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2eb418d8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_5/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_5/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197b40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2eb418d8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_5/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_5/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_5/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_5/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_5/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_5/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb4197c60
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <var_decl 0x7f2eb419a120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2eb418d900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:do_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘do_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘do_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_5/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_5/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_5/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_5/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419d090
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185980 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418d990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2eb466b118
    type <integer_type 0x7f2eb4179c78 char readonly public QI
        size <integer_cst 0x7f2eb4661ca8 constant 8>
        unit-size <integer_cst 0x7f2eb4661cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb46763f0 precision:8 min <integer_cst 0x7f2eb4170738 -128> max <integer_cst 0x7f2eb4170720 127> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
        pointer_to_this <pointer_type 0x7f2eb4179d20>>
   
    arg:0 <string_cst 0x7f2eb419c3c0
        type <array_type 0x7f2eb4182498 type <integer_type 0x7f2eb4179c78 char>
            BLK
            size <integer_cst 0x7f2eb4170858 constant 184>
            unit-size <integer_cst 0x7f2eb4170840 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2eb41823f0>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2eb4661f48 type <integer_type 0x7f2eb46765e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_5/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;44m =======node_fun:discard_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;44m =======node_fun:discard_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path discard_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre_check_funciton:discard_cleanups========= [0m
[40;42m =======start_check_funciton:discard_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘discard_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘discard_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘discard_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘discard_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:71:3: warning: use location
   71 |   discard_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :discard_my_cleanups
trace fucntion name:discard_my_cleanups 
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :0========  [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_12>
free (ptr_10);
./benchmarks/binutils/double_free_5/../include/common.h:91:7: warning: use location
   91 |       free (ptr);
      |       ^
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>
[40;36m ======= node_fun:discard_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘discard_my_cleanups’:
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                       ^
_1 = ptr_10->next;
./benchmarks/binutils/double_free_5/../include/common.h:88:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
   88 |       *pmy_chain = ptr->next;
      |                  ^
*pmy_chain_9(D) = _1;
./benchmarks/binutils/double_free_5/../include/common.h:88:18: warning: use location
*pmy_chain_9(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
   89 |       if (ptr->free_arg)
      |              ^
_2 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:89:14: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
   90 |         (*ptr->free_arg) (ptr->arg);
      |          ^
_3 = ptr_10->free_arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:90:10: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
   86 |   while ((ptr = *pmy_chain) != old_chain)
      |               ^
ptr_10 = *pmy_chain_9(D);
./benchmarks/binutils/double_free_5/../include/common.h:86:15: warning: use location
ptr_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
   94 |                 printf("freearg: %x\n", ptr->arg);
      |                 ^
_5 = ptr_10->arg;
./benchmarks/binutils/double_free_5/../include/common.h:94:17: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2eb419db40
    type <pointer_type 0x7f2eb4179930
        type <record_type 0x7f2eb4179888 cleanup BLK
            size <integer_cst 0x7f2eb4661f18 constant 256>
            unit-size <integer_cst 0x7f2eb467f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2eb4179888 fields <field_decl 0x7f2eb417c2f8 next> context <translation_unit_decl 0x7f2eb466c168 ./benchmarks/binutils/double_free_5/binutils_df_5.c>
            pointer_to_this <pointer_type 0x7f2eb4179930>>
        public unsigned DI
        size <integer_cst 0x7f2eb4661bb8 constant 64>
        unit-size <integer_cst 0x7f2eb4661bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2eb4180e70>>
    var <parm_decl 0x7f2eb4185c00 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2eb418db58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:discard_cleanups========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
do_cleanups (0B);
symvec ={v} {CLOBBER};
bvvec ={v} {CLOBBER};
oload_champ ={v} {CLOBBER};
return 0;

=======Mapping node_fun:find_oload_champ_namespace_loop=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = static_call_num;
_2 = _1 + 1;
static_call_num = _2;
call_num_23 = static_call_num;
_3 = strlen (qualified_name_24(D));
name_len_25 = (int) _3;
*oload_syms_26(D) = 0B;
*oload_champ_bv_28(D) = 0B;
if (namespace_len_20(D) < name_len_25)
  goto <bb 3>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407025]:
_4 = (sizetype) namespace_len_20(D);
_5 = qualified_name_24(D) + _4;
_6 = *_5;
if (_6 == 58)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 145607981]:
next_namespace_len_30 = namespace_len_20(D) + 3;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
if (_7 != 0)
  goto <bb 12>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1024235111]:
# searched_deeper_16 = PHI <0(2), 0(3), 1(4)>
_8 = *oload_syms_26(D);
make_cleanup (free, _8);
_9 = *oload_champ_bv_28(D);
old_cleanups_35 = make_cleanup (free, _9);
new_oload_syms_37 = malloc (800);
if (new_oload_syms_37 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 409693]:
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1023825418]:
*new_oload_syms_37 = 0B;
new_oload_champ_40 = find_oload_champ (new_oload_syms_37, &new_oload_champ_bv);
_10 = new_oload_champ_40 != -1;
_11 = call_num_23 == 1;
_12 = _10 | _11;
if (_12 != 0)
  goto <bb 8>; [20.24%]
else
  goto <bb 9>; [79.76%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 207222263]:
*oload_syms_26(D) = new_oload_syms_37;
*oload_champ_31(D) = new_oload_champ_40;
_13 = new_oload_champ_bv;
*oload_champ_bv_28(D) = _13;
do_cleanups (old_cleanups_35);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 816603155]:
if (searched_deeper_16 != 0)
  goto <bb 10>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 408301577]:
free (new_oload_syms_37);
_14 = new_oload_champ_bv;
free (_14);
discard_cleanups (old_cleanups_35);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 408301577]:
*oload_syms_26(D) = new_oload_syms_37;
*oload_champ_31(D) = new_oload_champ_40;
_15 = new_oload_champ_bv;
*oload_champ_bv_28(D) = _15;
discard_cleanups (old_cleanups_35);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073332133]:
# _17 = PHI <1(4), 1(8), 0(10), 0(11)>
new_oload_champ_bv ={v} {CLOBBER};
return _17;

=======Mapping node_fun:find_oload_champ=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)oload_syms_3(D)];
printf ("%d\n", _1);
bv_6 = malloc (16);
*oload_champ_bv_7(D) = bv_6;
return -1;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:discard_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_10->next;
*pmy_chain_9(D) = _1;
_2 = ptr_10->free_arg;
if (_2 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_3 = ptr_10->free_arg;
_4 = ptr_10->arg;
_3 (_4);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_10);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_10 = *pmy_chain_9(D);
if (ptr_10 != old_chain_11(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
_5 = ptr_10->arg;
printf ("freearg: %x\n", _5);
return;

=======Mapping node_fun:discard_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
discard_my_cleanups (&cleanup_chain, old_chain_2(D));
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    all ptable point : 37 [0m
[40;34m    analyzable ptable point : 31 [0m
[40;34m    used_stmt array stack totalsize of : 0.004576 mb[0m
[40;34m    collect time: : 0.001940 s [0m
[40;34m    algorithm time: 0.592101 s [0m
[40;34m    gimple stmt count : : 106 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:55 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  2157k ( 75%)
 phase opt and generate             :   0.22 (100%)   0.41 (100%)   0.62 ( 98%)   656k ( 23%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 callgraph functions expansion      :   0.02 (  9%)   0.00 (  0%)   0.03 (  5%)   535k ( 19%)
 ipa lto constructors in            :   0.01 (  5%)   0.00 (  0%)   0.00 (  0%)   128  (  0%)
 forward prop                       :   0.01 (  5%)   0.00 (  0%)   0.00 (  0%)    72  (  0%)
 integrated RA                      :   0.01 (  5%)   0.00 (  0%)   0.00 (  0%)   246k (  9%)
 LRA hard reg assignment            :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 plugin execution                   :   0.19 ( 86%)   0.41 (100%)   0.59 ( 94%)  1408  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    12k (  0%)
 TOTAL                              :   0.22          0.41          0.63         2864k
