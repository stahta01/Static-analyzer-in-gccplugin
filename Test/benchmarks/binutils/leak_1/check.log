In file included from ./benchmarks/binutils/leak_1/binutils_leak_1.c:5:0:
./benchmarks/binutils/leak_1/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/leak_1/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_1/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/leak_1/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜filename_cmpâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:131:10: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
   return strcmp(s1, s2);
          ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜template_in_dirâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: implicit declaration of function â€˜strrchrâ€™ [-Wimplicit-function-declaration]
   const char *slash = strrchr (path, '/');
                       ^~~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: incompatible implicit declaration of built-in function â€˜strrchrâ€™
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strrchrâ€™
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
       memcpy (tmpname, path, len);
       ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
   memcpy (tmpname + len, template, sizeof (template));
   ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜make_tempnameâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: implicit declaration of function â€˜closeâ€™; did you mean â€˜pcloseâ€™? [-Wimplicit-function-declaration]
   close (fd);
   ^~~~~
   pclose
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜set_timesâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: implicit declaration of function â€˜utimeâ€™; did you mean â€˜futimensâ€™? [-Wimplicit-function-declaration]
     result = utime (destination, tb);
              ^~~~~
              futimens
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜smart_renameâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: implicit declaration of function â€˜chownâ€™ [-Wimplicit-function-declaration]
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: implicit declaration of function â€˜unlinkâ€™; did you mean â€˜unixâ€™? [-Wimplicit-function-declaration]
    unlink (from);
    ^~~~~~
    unix
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function â€˜copy_mainâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:25: warning: passing argument 2 of â€˜set_timesâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
     set_times (tmpname, &statbuf);
                         ^
./benchmarks/binutils/leak_1/binutils_leak_1.c:211:1: note: expected â€˜const struct stat *â€™ but argument is of type â€˜int *â€™
 set_times (const char *destination, const struct stat *statbuf)
 ^~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 3
succs:= 11
succs:= 11
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 13
succs:= 14
succs:= 14
succs:= 13
--------GIMPLE Cond -------
succs:= 17
--------GIMPLE Cond -------
succs:= 18
--------GIMPLE Cond -------
succs:= 18
succs:= 20
--------GIMPLE Cond -------
succs:= 21
--------GIMPLE Cond -------
succs:= 22
--------GIMPLE Cond -------
succs:= 21
succs:= 23
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 24
succs:= 25
--------GIMPLE Cond -------
succs:= 26
succs:= 24
--------GIMPLE Cond -------
succs:= 22
succs:= 23
succs:= 29
succs:= 29
succs:= 25
succs:= 26
succs:= 17
succs:= 20
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_15 = VDEF <.MEM_14(D)>
tb[0] = _1;
# .MEM_16 = VDEF <.MEM_15>
tb[1] = _2;
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
# .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
# .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
# .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:set_times========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_13>
return;
In function â€˜set_timesâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
this stmt is child function---utime-----

 ================== trace ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
   if (result != 0)
      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa256675f90 type <integer_type 0x7fa2566895e8 int> constant 1>
[40;33m =======POP node_fun stack:set_times========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_13>
return;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
this stmt is child function---utime-----

 ================== trace ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
   if (result != 0)
      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa25667d9d8
    type <pointer_type 0x7fa25619fa80
        type <integer_type 0x7fa25619f9d8 char readonly string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619fa80>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa2561b3300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fa2561bdb10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa256675f90 type <integer_type 0x7fa2566895e8 int> constant 1>
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
# .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_90 = tmpname_49;
lto1: warning: use location
tmpname_36 = _90;
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_94 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_37 = mkstemp (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_37 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
   if (fd == -1)
      ^
if (fd_37 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_52 = tmpname_49;
./benchmarks/binutils/leak_1/binutils_leak_1.c:188:10: warning: use location
   return tmpname;
          ^
tmpname_45 = malloc (_44);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c9cf0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7fa2561bdc60>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
# .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_90 = tmpname_49;
lto1: warning: use location
tmpname_36 = _90;
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_94 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_37 = mkstemp (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_37 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
   if (fd == -1)
      ^
if (fd_37 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_52 = tmpname_49;
./benchmarks/binutils/leak_1/binutils_leak_1.c:188:10: warning: use location
   return tmpname;
          ^
tmpname_48 = malloc (9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c9dc8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cda20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7fa2561bdc90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
# VUSE <.MEM_8(D)>
input_filename_15 = *_14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_51 = tmpname_49 + len_50;
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_69 >= 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
if (_69 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:11: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c5af8
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7fa2561bdb70>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_69 >= 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
_44 = len_43 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_45 = malloc (_44);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_90 = tmpname_49;
lto1: warning: use location
tmpname_36 = _90;
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_94 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_37 = mkstemp (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_37 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
   if (fd == -1)
      ^
if (fd_37 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_52 = tmpname_49;
./benchmarks/binutils/leak_1/binutils_leak_1.c:188:10: warning: use location
   return tmpname;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c9ca8
    type <integer_type 0x7fa2566897e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa256689738 precision 64 min <integer_cst 0x7fa256675eb8 0> max <integer_cst 0x7fa256677500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa2566959d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa2561bd9c0 type <integer_type 0x7fa2566897e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7fa2561c9ea0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7fa2561bdcc0>
_51 = tmpname_49 + len_50;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ea0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7fa2561bdcc0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9ea0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7fa2561bdcc0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c9ea0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7fa2561bdcc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
tmpname_36 = _90;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_94 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_51 = tmpname_49 + len_50;
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_37 = mkstemp (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_37 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
   if (fd == -1)
      ^
if (fd_37 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c93f0
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561cd120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7fa2561bdc18>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(8), tmpname_36(9)>
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_94 = _38;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
_94 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_25 = _94;
bb index := 10
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 34

======================================================================
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_51 = tmpname_49 + len_50;
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_37 = mkstemp (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_37 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
   if (fd == -1)
      ^
if (fd_37 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c9438
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
    var <var_decl 0x7fa2561cd1b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_25 = _94;
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa25667d798
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
   
    def_stmt _53 = rand ();
    version 53>
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = _53 % 2;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = _53 % 2;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = _53 % 2;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================
_54 = _53 % 2;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_54 != 1)
bb index := 14
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 34

======================================================================
if (_54 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
       if (size == 0)
          ^
if (_54 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = _54 == 1;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = _54 == 1;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = _54 == 1;
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================
_55 = _54 == 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
bb index := 13
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 34

======================================================================
_53 = rand ();
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fa25667d798
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
   
    def_stmt _53 = rand ();
    version 53>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa25667d798
    type <integer_type 0x7fa2566895e8 int public SI
        size <integer_cst 0x7fa256675e28 constant 32>
        unit size <integer_cst 0x7fa256675e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa2566895e8 precision 32 min <integer_cst 0x7fa256675de0 -2147483648> max <integer_cst 0x7fa256675df8 2147483647>
        pointer_to_this <pointer_type 0x7fa256690a80>>
   
    def_stmt _53 = rand ();
    version 53>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_54 = _53 % 2;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_54 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
       if (size == 0)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_55 = _54 == 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_51 = tmpname_49 + len_50;
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 Expand conflict 
 The same function may have multiple branches :set_times
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
=======================Path Constaint===========================

succs:= 29
if (_31 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:297:10: warning: use location
       if (preserve_dates)
          ^
	relate logic:= 1
succs:= 23
if (_63 == 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:260:4: warning: use location
    && s.st_nlink == 1)
    ^
	relate logic:= 1
succs:= 22
if (_62 == 32896)
./benchmarks/binutils/leak_1/binutils_leak_1.c:257:7: warning: use location
       || (!S_ISLNK (s.st_mode)
       ^
	relate logic:= 0
succs:= 21
if (_58 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:256:6: warning: use location
   if (! exists
      ^
	relate logic:= 1
succs:= 20
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
	relate logic:= 0
succs:= 18
if (_29 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:371:10: warning: use location
       if (preserve_dates)
          ^
	relate logic:= 1
succs:= 17
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
	relate logic:= 0
succs:= 13
if (_54 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:324:6: warning: use location
   if (size < 1)
      ^
	relate logic:= 0
succs:= 11
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
	relate logic:= 1
=======================Path Constaint===========================

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 != output_filename_30)
bb index := 20
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = ret_73;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_110 = ret_73;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _110;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = _32 != 0;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = (int) _33;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_109>
status = _34;
bb index := 32
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_28 = status;
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 17
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 34

======================================================================
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_112>
_7 = status;
bb index := 34
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 34

======================================================================
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
slash_39 = strrchr (input_filename_15, 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_40 = (long int) slash_39;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^
_42 = _40 - _41;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
len_43 = (size_t) _42;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
       len = slash - path;
           ^
_47 = tmpname_45 + len_43;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
*_47 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
len_46 = len_43 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
this stmt have mutiple branch --------
_51 = tmpname_49 + len_50;
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
memcpy (_51, "stXXXXXX", 9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_45, input_filename_15, len_43);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_39 != 0B)
bb index := 4
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 34

======================================================================
if (slash_39 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _58 == 0;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_60 = (bfd_boolean) _59;
bb index := 21
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
_41 = (long int) input_filename_15;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
bb index := 12
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 34

======================================================================
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
 }
 ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_13>
return;
./benchmarks/binutils/leak_1/binutils_leak_1.c:243:1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmpname_26 == 0B)
bb index := 11
# VUSE <.MEM_112>
return _7;
lto1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 34

======================================================================
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
if (tmpname_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa2561c5e10
    type <pointer_type 0x7fa25619f7e0
        type <integer_type 0x7fa25619f738 char public string-flag QI
            size <integer_cst 0x7fa256675cd8 constant 8>
            unit size <integer_cst 0x7fa256675cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa2566893f0 precision 8 min <integer_cst 0x7fa2561a2180 -128> max <integer_cst 0x7fa2561a2168 127>
            pointer_to_this <pointer_type 0x7fa25619f7e0>>
        public unsigned DI
        size <integer_cst 0x7fa256675be8 constant 64>
        unit size <integer_cst 0x7fa256675c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa256680168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fa25619f888>>
    var <var_decl 0x7fa2561c3870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7fa2561bdbd0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
./benchmarks/binutils/leak_1/binutils_leak_1.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_32 = _110;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:set_times=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [36.64%]
else
  goto <bb 4>; [63.36%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = *argv_3(D);
_11 = optind;
_12 = (long unsigned int) _11;
_13 = _12 * 8;
_14 = argv_3(D) + _13;
input_filename_15 = *_14;
_16 = optind;
_17 = _16 + 1;
if (argc_5(D) > _17)
  goto <bb 3>; [67.00%]
else
  goto <bb 4>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [67.00%]:
_18 = optind;
_19 = (sizetype) _18;
_20 = _19 + 1;
_21 = _20 * 8;
_22 = argv_3(D) + _21;
output_filename_23 = *_22;
if (output_filename_23 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 11>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [53.10%]:
# output_filename_35 = PHI <0B(2), output_filename_23(3)>
slash_39 = strrchr (input_filename_15, 47);
if (slash_39 != 0B)
  goto <bb 5>; [66.53%]
else
  goto <bb 6>; [33.47%]

=======is loop:0=========

 bb index 5 
<bb 5> [35.33%]:
_40 = (long int) slash_39;
_41 = (long int) input_filename_15;
_42 = _40 - _41;
len_43 = (size_t) _42;
_44 = len_43 + 11;
tmpname_45 = malloc (_44);
memcpy (tmpname_45, input_filename_15, len_43);
len_46 = len_43 + 1;
_47 = tmpname_45 + len_43;
*_47 = 47;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [17.77%]:
tmpname_48 = malloc (9);

=======is loop:0=========

 bb index 7 
<bb 7> [53.10%]:
# tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
# len_50 = PHI <len_46(5), 0(6)>
_51 = tmpname_49 + len_50;
memcpy (_51, "stXXXXXX", 9);
_52 = tmpname_49;
_90 = tmpname_49;
tmpname_36 = _90;
fd_37 = mkstemp (tmpname_36);
if (fd_37 == -1)
  goto <bb 8>; [4.85%]
else
  goto <bb 9>; [95.15%]

=======is loop:0=========

 bb index 8 
<bb 8> [2.58%]:
free (tmpname_36);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [50.52%]:
close (fd_37);

=======is loop:0=========

 bb index 10 
<bb 10> [53.10%]:
# _38 = PHI <0B(8), tmpname_36(9)>
_94 = _38;
tmpname_25 = _94;

=======is loop:0=========

 bb index 11 
<bb 11> [100.00%]:
# tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
# output_filename_30 = PHI <output_filename_23(3), output_filename_35(10)>
if (tmpname_26 == 0B)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [0.04%]:
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
exit (1);

=======is loop:0=========

 bb index 13 
<bb 13> [99.96%]:
_53 = rand ();
_54 = _53 % 2;
_55 = _54 == 1;
size_56 = (off_t) _55;
if (_54 != 1)
  goto <bb 14>; [69.50%]
else
  goto <bb 17>; [30.50%]

=======is loop:0=========

 bb index 14 
<bb 14> [69.47%]:
if (_54 != 1)
  goto <bb 15>; [48.88%]
else
  goto <bb 16>; [51.12%]

=======is loop:0=========

 bb index 15 
<bb 15> [33.96%]:
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

=======is loop:0=========

 bb index 16 
<bb 16> [69.47%]:
status = 1;

=======is loop:0=========

 bb index 17 
<bb 17> [99.96%]:
_28 = status;
if (_28 == 0)
  goto <bb 18>; [67.00%]
else
  goto <bb 33>; [33.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [66.97%]:
_29 = 0;
if (_29 != 0)
  goto <bb 19>; [33.00%]
else
  goto <bb 20>; [67.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [22.10%]:
set_times (tmpname_26, &statbuf);

=======is loop:0=========

 bb index 20 
<bb 20> [66.97%]:
if (tmpname_26 != output_filename_30)
  goto <bb 21>; [53.47%]
else
  goto <bb 34>; [46.53%]

=======is loop:0=========

 bb index 21 
<bb 21> [35.81%]:
_31 = 0;
_58 = lstat (input_filename_15, &s);
_59 = _58 == 0;
exists_60 = (bfd_boolean) _59;
if (_58 != 0)
  goto <bb 24>; [33.00%]
else
  goto <bb 22>; [67.00%]

=======is loop:0=========

 bb index 22 
<bb 22> [23.99%]:
_61 = BIT_FIELD_REF <s, 32, 192>;
_62 = _61 & 61568;
if (_62 == 32896)
  goto <bb 23>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [8.16%]:
_63 = s.st_nlink;
if (_63 == 1)
  goto <bb 24>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [14.59%]:
ret_64 = rename (tmpname_26, input_filename_15);
if (ret_64 == 0)
  goto <bb 25>; [70.44%]
else
  goto <bb 28>; [29.56%]

=======is loop:0=========

 bb index 25 
<bb 25> [10.28%]:
if (_58 == 0)
  goto <bb 26>; [36.64%]
else
  goto <bb 32>; [63.36%]

=======is loop:0=========

 bb index 26 
<bb 26> [3.77%]:
_65 = s.st_mode;
_66 = _65 & 511;
chmod (input_filename_15, _66);
_67 = s.st_gid;
_68 = s.st_uid;
_69 = chown (input_filename_15, _68, _67);
if (_69 >= 0)
  goto <bb 27>; [46.68%]
else
  goto <bb 32>; [53.32%]

=======is loop:0=========

 bb index 27 
<bb 27> [1.76%]:
_70 = s.st_mode;
_71 = _70 & 4095;
chmod (input_filename_15, _71);
goto <bb 32>; [100.00%]

=======is loop:0=========

 bb index 28 
<bb 28> [4.31%]:
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
unlink (tmpname_26);
goto <bb 32>; [100.00%]

=======is loop:0=========

 bb index 29 
<bb 29> [21.22%]:
if (_31 != 0)
  goto <bb 30>; [33.00%]
else
  goto <bb 31>; [67.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [7.00%]:
set_times (input_filename_15, &s);

=======is loop:0=========

 bb index 31 
<bb 31> [21.22%]:
unlink (tmpname_26);

=======is loop:0=========

 bb index 32 
<bb 32> [35.81%]:
# ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
s ={v} {CLOBBER};
_110 = ret_73;
_32 = _110;
_33 = _32 != 0;
_34 = (int) _33;
status = _34;
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [32.99%]:
_74 = MEM[(int *)tmpname_26];
_75 = __printf_chk (1, "%d\n", _74);

=======is loop:0=========

 bb index 34 
<bb 34> [99.96%]:
statbuf ={v} {CLOBBER};
_113 = 0;
_7 = status;
return _7;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 8952 [0m
[40;34m    collect time: : 0.000539 s [0m
[40;34m    algorithm time: 0.077496 s [0m
[40;34m    gimple stmt count : : 106 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
