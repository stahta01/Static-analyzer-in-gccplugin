./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘filename_cmp’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:131:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  131 |   return strcmp(s1, s2);
      |          ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:7:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
    6 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    7 | 
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘template_in_dir’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
  170 |   const char *slash = strrchr (path, '/');
      |                       ^~~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: incompatible implicit declaration of built-in function ‘strrchr’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  178 |       memcpy (tmpname, path, len);
      |       ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  187 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:187:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘make_tempname’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
  206 |   close (fd);
      |   ^~~~~
      |   pclose
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘set_times’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
  228 |     result = utime (destination, tb);
      |              ^~~~~
      |              futimens
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘smart_rename’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: implicit declaration of function ‘unlink’ [-Wimplicit-function-declaration]
  289 |           unlink (from);
      |           ^~~~~~
./benchmarks/binutils/leak_1/binutils_leak_1.c: In function ‘copy_main’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:53: warning: passing argument 2 of ‘set_times’ from incompatible pointer type [-Wincompatible-pointer-types]
  372 |                                 set_times (tmpname, &statbuf);
      |                                                     ^~~~~~~~
      |                                                     |
      |                                                     int *
./benchmarks/binutils/leak_1/binutils_leak_1.c:211:56: note: expected ‘const struct stat *’ but argument is of type ‘int *’
  211 | set_times (const char *destination, const struct stat *statbuf)
      |                                     ~~~~~~~~~~~~~~~~~~~^~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.7%|          |
nothrow                          |      |      |      |      |     -1.7%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.9%|          |
forwprop                         |      |      |      |      |     -0.9%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.4%|          |
phiopt                           |      |      |      |      |     -0.4%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
=======node_fun:copy_main=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:copy_file=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:unlink_if_ordinary=========
=======node_fun:smart_rename=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:set_times=========
--------GIMPLE Cond -------
=======node_fun:make_tempname=========
--------GIMPLE Cond -------
=======node_fun:template_in_dir=========
--------GIMPLE Cond -------
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_10 = VDEF <.MEM_8(D)>
copy_main (argc_5(D), argv_3(D));
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
# .MEM_11 = VDEF <.MEM_10(D)>
_1 = rand ();
# .MEM_12 = VDEF <.MEM_11>
printf ("error: the input file \'%s\' is empty", input_filename_7(D));
# .MEM_5 = VDEF <.MEM_4(D)>
printf ("%d\n", _1);
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
# .MEM_31 = VDEF <.MEM_30>
printf ("unable to rename \'%s\';", to_16(D));
# .MEM_32 = VDEF <.MEM_31>
unlink (from_20(D));
# .MEM_28 = VDEF <.MEM_27>
set_times (to_16(D), &s);
# .MEM_29 = VDEF <.MEM_24>
unlink (from_20(D));
# .MEM_13 = VDEF <.MEM_12(D)>
tb[0] = _1;
# .MEM_14 = VDEF <.MEM_13>
tb[1] = _2;
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:copy_main========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_main  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink_if_ordinary========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unlink_if_ordinary  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:unlink_if_ordinary========= [0m
[40;42m =======start_check_funciton:unlink_if_ordinary========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20f00
    type <pointer_type 0x7fc4a25599d8
        type <array_type 0x7fc4a2559930 type <integer_type 0x7fc4a254d9d8 char>
            SI
            size <integer_cst 0x7fc4a2a24df8 constant 32>
            unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a2559888>
            pointer_to_this <pointer_type 0x7fc4a25599d8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2c20ee0 type <array_type 0x7fc4a2559930>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:unlink_if_ordinary========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘main’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_23 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
  264 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573000
    type <pointer_type 0x7fc4a2559738
        type <array_type 0x7fc4a2559690 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448e8 constant 184>
            unit-size <integer_cst 0x7fc4a25448d0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25595e8>
            pointer_to_this <pointer_type 0x7fc4a2559738>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2571360 type <array_type 0x7fc4a2559690>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:copy_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_file  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:copy_file========= [0m
[40;42m =======start_check_funciton:copy_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_11 = VDEF <.MEM_10(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
  326 |       if (size == 0)
      |          ^
if (_2 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
Cond in fucntion copy_file basic block 3
 ================== possible direct basic block ================= 
from copy_file basic block 4
 ================== possible direct basic block ================= 
from copy_file basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20e40
    type <pointer_type 0x7fc4a255a5e8
        type <array_type 0x7fc4a255a540 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a2544960 constant 288>
            unit-size <integer_cst 0x7fc4a2544990 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a255a498>
            pointer_to_this <pointer_type 0x7fc4a255a5e8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2a37040 type <array_type 0x7fc4a255a540>
        readonly constant static "error: the input file '%s' is empty\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_file========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:183:26: warning: use location
  183 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: use location
  170 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
  176 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
  176 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
  179 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
  174 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc4a25646f0 type <integer_type 0x7fc4a2a397e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576630
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fc4a2564960>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre_check_funciton:copy_main========= [0m
[40;42m =======start_check_funciton:copy_main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2ce58
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25691b0 input_filename>
    def_stmt input_filename_26 = *_4;
    version:26
    ptr-info 0x7fc4a2564828>
# VUSE <.MEM_34(D)>
input_filename_26 = *_4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2ce58
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25691b0 input_filename>
    def_stmt input_filename_26 = *_4;
    version:26
    ptr-info 0x7fc4a2564828>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20c60
    type <pointer_type 0x7fc4a255a930
        type <array_type 0x7fc4a255a888 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25449a8 constant 488>
            unit-size <integer_cst 0x7fc4a2544a08 constant 61>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a255a7e0>
            pointer_to_this <pointer_type 0x7fc4a255a930>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25672c0 type <array_type 0x7fc4a255a888>
        readonly constant static "warning: could not create temporary file whilst copying '%s'\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location
this stmt have mutiple branch --------
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location
this stmt have mutiple branch --------
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:copy_main========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2c708
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <parm_decl 0x7fc4a255e200 argc>
    def_stmt GIMPLE_NOP
    version:5>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_8(D)>
copy_main (argc_5(D), argv_3(D));
copy_main (argc_5(D), argv_3(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:387:3: warning: use location
  387 |   copy_main (argc, argv);
      |   ^
this stmt is child function---copy_main-----

 ================== trace ================== 
trace fucntion name:copy_main 
[40;44m =======trace_function_path copy_main  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:unlink_if_ordinary========= [0m
[40;46m =======add node_fun stack:unlink_if_ordinary========= [0m
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;46m =======add node_fun stack:smart_rename========= [0m
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:copy_file========= [0m
[40;46m =======add node_fun stack:copy_file========= [0m
[40;44m =======trace_function_path copy_file  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;46m =======add node_fun stack:make_tempname========= [0m
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :1========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_10 = VDEF <.MEM_8(D)>
copy_main (argc_5(D), argv_3(D));
copy_main (argc_5(D), argv_3(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:387:3: warning: use location
  387 |   copy_main (argc, argv);
      |   ^
this stmt is child function---copy_main-----

 ================== trace ================== 
trace fucntion name:copy_main 
[40;44m =======trace_function_path copy_main  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:unlink_if_ordinary========= [0m
[40;46m =======add node_fun stack:unlink_if_ordinary========= [0m
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;46m =======add node_fun stack:smart_rename========= [0m
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:copy_file========= [0m
[40;46m =======add node_fun stack:copy_file========= [0m
[40;44m =======trace_function_path copy_file  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;46m =======add node_fun stack:make_tempname========= [0m
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :1========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2c708
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <parm_decl 0x7fc4a255e200 argc>
    def_stmt GIMPLE_NOP
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:copy_main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path copy_main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink_if_ordinary========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unlink_if_ordinary  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:unlink_if_ordinary========= [0m
[40;42m =======start_check_funciton:unlink_if_ordinary========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20f00
    type <pointer_type 0x7fc4a25599d8
        type <array_type 0x7fc4a2559930 type <integer_type 0x7fc4a254d9d8 char>
            SI
            size <integer_cst 0x7fc4a2a24df8 constant 32>
            unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a2559888>
            pointer_to_this <pointer_type 0x7fc4a25599d8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2c20ee0 type <array_type 0x7fc4a2559930>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:unlink_if_ordinary========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘copy_main’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_23 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
  264 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573000
    type <pointer_type 0x7fc4a2559738
        type <array_type 0x7fc4a2559690 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448e8 constant 184>
            unit-size <integer_cst 0x7fc4a25448d0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25595e8>
            pointer_to_this <pointer_type 0x7fc4a2559738>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2571360 type <array_type 0x7fc4a2559690>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:copy_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_file  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:copy_file========= [0m
[40;42m =======start_check_funciton:copy_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_11 = VDEF <.MEM_10(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
  326 |       if (size == 0)
      |          ^
if (_2 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
Cond in fucntion copy_file basic block 3
 ================== possible direct basic block ================= 
from copy_file basic block 4
 ================== possible direct basic block ================= 
from copy_file basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20e40
    type <pointer_type 0x7fc4a255a5e8
        type <array_type 0x7fc4a255a540 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a2544960 constant 288>
            unit-size <integer_cst 0x7fc4a2544990 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a255a498>
            pointer_to_this <pointer_type 0x7fc4a255a5e8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2a37040 type <array_type 0x7fc4a255a540>
        readonly constant static "error: the input file '%s' is empty\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_file========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:183:26: warning: use location
  183 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: use location
  170 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
  176 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
  176 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
  179 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
  174 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc4a25646f0 type <integer_type 0x7fc4a2a397e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576630
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fc4a2564960>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre_check_funciton:copy_main========= [0m
[40;42m =======start_check_funciton:copy_main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2ce58
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25691b0 input_filename>
    def_stmt input_filename_26 = *_4;
    version:26
    ptr-info 0x7fc4a2564828>
# VUSE <.MEM_34(D)>
input_filename_26 = *_4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2ce58
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25691b0 input_filename>
    def_stmt input_filename_26 = *_4;
    version:26
    ptr-info 0x7fc4a2564828>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20c60
    type <pointer_type 0x7fc4a255a930
        type <array_type 0x7fc4a255a888 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25449a8 constant 488>
            unit-size <integer_cst 0x7fc4a2544a08 constant 61>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a255a7e0>
            pointer_to_this <pointer_type 0x7fc4a255a930>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25672c0 type <array_type 0x7fc4a255a888>
        readonly constant static "warning: could not create temporary file whilst copying '%s'\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location
this stmt have mutiple branch --------
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^
this stmt is child function---unlink_if_ordinary-----

 ================== trace ================== 
trace fucntion name:unlink_if_ordinary 
[40;44m =======trace_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:unlink_if_ordinary========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
Cond in fucntion copy_main basic block 7
 ================== possible direct basic block ================= 
from copy_main basic block 8
 ================== possible direct basic block ================= 
from copy_main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^
this stmt is child function---copy_file-----

 ================== trace ================== 
trace fucntion name:copy_file 
[40;44m =======trace_function_path copy_file  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_file========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: use location
  359 |     tmpname = make_tempname (input_filename);
      |               ^
this stmt is child function---make_tempname-----

 ================== trace ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:1 
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location
this stmt have mutiple branch --------
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^
if (tmpname_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
Cond in fucntion copy_main basic block 5
 ================== possible direct basic block ================= 
from copy_main basic block 6
 ================== possible direct basic block ================= 
from copy_main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2a2cd38
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a2569090 tmpname>
    def_stmt tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
    version:18
    ptr-info 0x7fc4a25647c8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_37 = VDEF <.MEM_36>
unlink_if_ordinary (tmpname_18);
./benchmarks/binutils/leak_1/binutils_leak_1.c:377:17: warning: use location
  377 |                 unlink_if_ordinary (tmpname);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_39 = VDEF <.MEM_32>
_15 = smart_rename (tmpname_18, input_filename_26, _14);
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:43: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_16 = _15 != 0;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
_17 = (int) _16;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:98: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_40 = VDEF <.MEM_39>
status = _17;
./benchmarks/binutils/leak_1/binutils_leak_1.c:374:40: warning: use location
  374 |                                 status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_10>
_7 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:389:10: warning: use location
  389 |   return status;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# VUSE <.MEM_36>
_12 = status;
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:14: warning: use location
  369 |   if (status == 0)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (_12 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:369:6: warning: use location
  369 |   if (status == 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_36 = VDEF <.MEM_31>
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
./benchmarks/binutils/leak_1/binutils_leak_1.c:368:3: warning: use location
  368 |   copy_file (input_filename, tmpname, input_target, output_target, input_arch);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
# .MEM_42 = VDEF <.MEM_31>
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:365:5: warning: use location
  365 |     fatal ("warning: could not create temporary file whilst copying '%s'",
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_36>
set_times (tmpname_18, &statbuf);
./benchmarks/binutils/leak_1/binutils_leak_1.c:372:33: warning: use location
  372 |                                 set_times (tmpname, &statbuf);
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34(D)>
tmpname_30 = make_tempname (input_filename_26);
./benchmarks/binutils/leak_1/binutils_leak_1.c:359:15: warning: Use after free error!: free location 
  359 |     tmpname = make_tempname (input_filename);
      |               ^
if (tmpname_18 == 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:364:6: warning: use location
  364 |   if (tmpname == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:copy_main========= [0m
[40;44m =======node_fun:copy_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path copy_file  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:copy_file========= [0m
[40;42m =======start_check_funciton:copy_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_11 = VDEF <.MEM_10(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
In function ‘copy_file’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
if (_2 != 1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
  326 |       if (size == 0)
      |          ^
if (_2 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:326:10: warning: use location
Cond in fucntion copy_file basic block 3
 ================== possible direct basic block ================= 
from copy_file basic block 4
 ================== possible direct basic block ================= 
from copy_file basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/binutils/leak_1/binutils_leak_1.c:322:9: warning: use location
  322 |         __NONDET(size, 1, 0);
      |         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256f318
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20e40
    type <pointer_type 0x7fc4a255a5e8
        type <array_type 0x7fc4a255a540 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a2544960 constant 288>
            unit-size <integer_cst 0x7fc4a2544990 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a255a498>
            pointer_to_this <pointer_type 0x7fc4a255a5e8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2a37040 type <array_type 0x7fc4a255a540>
        readonly constant static "error: the input file '%s' is empty\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:327:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_file========= [0m
[40;44m =======node_fun:unlink_if_ordinary========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path unlink_if_ordinary  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:unlink_if_ordinary========= [0m
[40;42m =======start_check_funciton:unlink_if_ordinary========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fc4a2c20f00
    type <pointer_type 0x7fc4a25599d8
        type <array_type 0x7fc4a2559930 type <integer_type 0x7fc4a254d9d8 char>
            SI
            size <integer_cst 0x7fc4a2a24df8 constant 32>
            unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a2559888>
            pointer_to_this <pointer_type 0x7fc4a25599d8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2c20ee0 type <array_type 0x7fc4a2559930>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:307:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:unlink_if_ordinary========= [0m
[40;44m =======node_fun:smart_rename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘smart_rename’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256fa68
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e800 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fc4a25648a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:299:7: warning: use location
  299 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:289:11: warning: use location
  289 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:263:13: warning: use location
  263 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_23 == 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
  264 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:264:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:298:33: warning: use location
  298 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:288:11: warning: use location
  288 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_1/binutils_leak_1.c:282:17: warning: use location
  282 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_1/binutils_leak_1.c:281:19: warning: use location
  281 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:280:15: warning: use location
  280 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_1/binutils_leak_1.c:252:12: warning: use location
  252 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a256faf8
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e780 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fc4a25648b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573000
    type <pointer_type 0x7fc4a2559738
        type <array_type 0x7fc4a2559690 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448e8 constant 184>
            unit-size <integer_cst 0x7fc4a25448d0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25595e8>
            pointer_to_this <pointer_type 0x7fc4a2559738>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a2571360 type <array_type 0x7fc4a2559690>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:288:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;44m =======node_fun:set_times========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘set_times’:
./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5: warning: use location
  242 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_1/binutils_leak_1.c:228:14: warning: use location
  228 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
  241 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576000
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255e900 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fc4a25648e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc4a2573140
    type <pointer_type 0x7fc4a25591f8
        type <array_type 0x7fc4a2559150 type <integer_type 0x7fc4a254d9d8 char>
            BLK
            size <integer_cst 0x7fc4a25448a0 constant 168>
            unit-size <integer_cst 0x7fc4a2544888 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fc4a25590a8>
            pointer_to_this <pointer_type 0x7fc4a25591f8>>
        unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fc4a25715d0 type <array_type 0x7fc4a2559150>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 start: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5 finish: ./benchmarks/binutils/leak_1/binutils_leak_1.c:242:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;44m =======node_fun:make_tempname========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
In function ‘make_tempname’:
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:183:26: warning: use location
  183 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: use location
  170 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
  176 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
  176 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
  179 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
  174 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc4a25646f0 type <integer_type 0x7fc4a2a397e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576630
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fc4a2564960>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25762d0
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <parm_decl 0x7fc4a255ea00 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fc4a2564918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_1/binutils_leak_1.c:197:19: warning: use location
  197 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576318
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25781b0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fc4a2564930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:200:8: warning: use location
  200 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
  201 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:201:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576360
    type <integer_type 0x7fc4a2a395e8 int public SI
        size <integer_cst 0x7fc4a2a24df8 constant 32>
        unit-size <integer_cst 0x7fc4a2a24e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a395e8 precision:32 min <integer_cst 0x7fc4a2a24db0 -2147483648> max <integer_cst 0x7fc4a2a24dc8 2147483647>
        pointer_to_this <pointer_type 0x7fc4a2a409d8>>
    var <var_decl 0x7fc4a2578120 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: use location
  203 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_1/binutils_leak_1.c:203:7: warning: Use after free error!: free location 
  203 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_1/binutils_leak_1.c:206:3: warning: use location
  206 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;44m =======node_fun:template_in_dir========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
In function ‘template_in_dir’:
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576828
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fc4a25649d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_1/binutils_leak_1.c:183:26: warning: use location
  183 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576798
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
    var <var_decl 0x7fc4a25785a0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fc4a25649c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_1/binutils_leak_1.c:170:23: warning: use location
  170 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:19: warning: use location
  176 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:176:11: warning: use location
  176 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:18: warning: use location
  179 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
  174 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_1/binutils_leak_1.c:174:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a2576708
    type <pointer_type 0x7fc4a254dbd0
        type <integer_type 0x7fc4a254db28 char readonly QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254dbd0>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fc4a255ea80 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fc4a2564990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_1/binutils_leak_1.c:177:26: warning: use location
  177 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:14: warning: use location
  179 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_1/binutils_leak_1.c:179:22: warning: use location
  179 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_1/binutils_leak_1.c:178:7: warning: use location
  178 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc4a25765a0
    type <integer_type 0x7fc4a2a397e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a39738 precision:64 min <integer_cst 0x7fc4a2a24e88 0> max <integer_cst 0x7fc4a2a25500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fc4a2a457e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc4a25646f0 type <integer_type 0x7fc4a2a397e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7fc4a2576630
    type <pointer_type 0x7fc4a254da80
        type <integer_type 0x7fc4a254d9d8 char public QI
            size <integer_cst 0x7fc4a2a24ca8 constant 8>
            unit-size <integer_cst 0x7fc4a2a24cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc4a2a393f0 precision:8 min <integer_cst 0x7fc4a2544708 -128> max <integer_cst 0x7fc4a25446f0 127>
            pointer_to_this <pointer_type 0x7fc4a254da80>>
        public unsigned DI
        size <integer_cst 0x7fc4a2a24bb8 constant 64>
        unit-size <integer_cst 0x7fc4a2a24bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc4a2a2f168 ./benchmarks/binutils/leak_1/binutils_leak_1.c>
        pointer_to_this <pointer_type 0x7fc4a254d888>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fc4a2564960>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = *argv_3(D);
copy_main (argc_5(D), argv_3(D));
_7 = status;
return _7;

=======Mapping node_fun:copy_main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = optind;
_2 = (long unsigned int) _1;
_3 = _2 * 8;
_4 = argv_25(D) + _3;
input_filename_26 = *_4;
_5 = optind;
_6 = _5 + 1;
if (_6 < argc_27(D))
  goto <bb 3>; [67.00%]
else
  goto <bb 4>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407025]:
_7 = optind;
_8 = (sizetype) _7;
_9 = _8 + 1;
_10 = _9 * 8;
_11 = argv_25(D) + _10;
output_filename_28 = *_11;
if (output_filename_28 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 5>; [70.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 570156906]:
# output_filename_22 = PHI <0B(2), output_filename_28(3)>
tmpname_30 = make_tempname (input_filename_26);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# tmpname_18 = PHI <output_filename_28(3), tmpname_30(4)>
# output_filename_23 = PHI <output_filename_28(3), output_filename_22(4)>
if (tmpname_18 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 429496]:
printf ("warning: could not create temporary file whilst copying \'%s\'", input_filename_26);
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073312329]:
copy_file (input_filename_26, tmpname_18, 0B, 0B, 0B);
_12 = status;
if (_12 == 0)
  goto <bb 8>; [67.00%]
else
  goto <bb 12>; [33.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 719119263]:
_13 = preserve_dates;
if (_13 != 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 237309355]:
set_times (tmpname_18, &statbuf);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 719119264]:
if (output_filename_23 != tmpname_18)
  goto <bb 11>; [53.47%]
else
  goto <bb 13>; [46.53%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 384513069]:
_14 = preserve_dates;
_15 = smart_rename (tmpname_18, input_filename_26, _14);
_16 = _15 != 0;
_17 = (int) _16;
status = _17;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 354193067]:
unlink_if_ordinary (tmpname_18);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073312331]:
statbuf ={v} {CLOBBER};
return 0;

=======Mapping node_fun:copy_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = rand ();
_2 = _1 % 2;
if (_2 != 1)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
if (_2 != 1)
  goto <bb 4>; [48.88%]
else
  goto <bb 5>; [51.12%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 262422500]:
printf ("error: the input file \'%s\' is empty", input_filename_7(D));

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 536870913]:
status = 1;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
return;

=======Mapping node_fun:unlink_if_ordinary=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_3(D)];
printf ("%d\n", _1);
return;

=======Mapping node_fun:smart_rename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = lstat (to_16(D), &s);
if (_1 != 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 3>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407024]:
_2 = BIT_FIELD_REF <s, 32, 192>;
_3 = _2 & 61568;
if (_3 == 32896)
  goto <bb 4>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 244598390]:
_4 = s.st_nlink;
if (_4 == 1)
  goto <bb 5>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 437498253]:
ret_23 = rename (from_20(D), to_16(D));
if (ret_23 == 0)
  goto <bb 6>; [67.00%]
else
  goto <bb 9>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 293123831]:
if (_1 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 13>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 96730864]:
_5 = s.st_mode;
_6 = _5 & 511;
chmod (to_16(D), _6);
_7 = s.st_gid;
_8 = s.st_uid;
_9 = chown (to_16(D), _8, _7);
if (_9 >= 0)
  goto <bb 8>; [41.48%]
else
  goto <bb 13>; [58.52%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 40123963]:
_10 = s.st_mode;
_11 = _10 & 4095;
chmod (to_16(D), _11);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 144374423]:
printf ("unable to rename \'%s\';", to_16(D));
unlink (from_20(D));
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 636243571]:
if (preserve_dates_18(D) != 0)
  goto <bb 11>; [33.00%]
else
  goto <bb 12>; [67.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 209960377]:
set_times (to_16(D), &s);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 636243571]:
unlink (from_20(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
s ={v} {CLOBBER};
return ret_12;

=======Mapping node_fun:set_times=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
printf ("%s: cannot set time:", destination_8(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;

=======Mapping node_fun:make_tempname=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
tmpname_6 = template_in_dir (filename_4(D));
fd_8 = mkstemp (tmpname_6);
if (fd_8 == -1)
  goto <bb 3>; [9.78%]
else
  goto <bb 4>; [90.22%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 105011952]:
free (tmpname_6);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 968729873]:
close (fd_8);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _1 = PHI <0B(3), tmpname_6(4)>
return _1;

=======Mapping node_fun:template_in_dir=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
slash_10 = strrchr (path_9(D), 47);
if (slash_10 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
_1 = slash_10 - path_9(D);
len_13 = (size_t) _1;
_2 = len_13 + 11;
tmpname_15 = malloc (_2);
memcpy (tmpname_15, path_9(D), len_13);
len_17 = len_13 + 1;
_3 = tmpname_15 + len_13;
*_3 = 47;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 322122544]:
tmpname_12 = malloc (9);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
# len_6 = PHI <len_17(3), 0(4)>
_4 = tmpname_5 + len_6;
memcpy (_4, "stXXXXXX", 9);
return tmpname_5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    find Entry point : 14 [0m
[40;34m    used_stmt array stack totalsize of : 0.002752 mb[0m
[40;34m    collect time: : 0.000202 s [0m
[40;34m    algorithm time: 0.079216 s [0m
[40;34m    gimple stmt count : : 104 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline                           |      |      |      |      |     -0.3%|     -0.2%|
fixup_cfg                        |      |      |      |      |     -0.3%|     -0.2%|
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -1.9%|     -0.9%|
backprop                         |      |      |      |      |     -1.9%|     -0.9%|
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.3%|     -0.2%|
stdarg                           |      |      |      |      |     -0.3%|     -0.2%|
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |          |     -0.2%|
copyprop                         |      |    +2|      |      |          |     -0.2%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +2.0%|     -0.3%|
strlen                           |      |      |      |      |     +2.0%|     -0.3%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.3%|     -0.1%|
forwprop                         |      |      |      |      |     -0.3%|     -0.1%|
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +73.4%|    +45.5%|
into_cfglayout                   |      |      |      |      |     -2.0%|     -1.0%|
jump                             |      |      |      |      |     -3.1%|     -2.6%|
subreg1                          |      |      |      |      |     -1.1%|     -1.6%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.2%|     -1.5%|
ce1                              |      |      |      |      |     -1.2%|     -1.5%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.1%|     +4.8%|
ce2                              |      |      |      |      |     +3.0%|     +4.6%|
outof_cfglayout                  |      |      |      |      |     +1.7%|     +0.7%|
split1                           |      |      |      |      |     +1.7%|     +0.7%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.5%|     -0.3%|
reload                           |      |      |      |      |     -7.3%|     -9.4%|
postreload                       |      |      |      |      |     -7.3%|    -10.0%|
split2                           |      |      |      |      |     +0.3%|     +1.2%|
cmpelim                          |      |      |      |      |     +0.3%|     +1.1%|
pro_and_epilogue                 |      |      |      |      |     +8.8%|    +14.4%|
dse2                             |      |      |      |      |     +8.1%|    +12.6%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.2%|     -0.3%|
rtl_dce                          |      |      |      |      |     -0.2%|     -0.3%|
bbro                             |      |      |      |      |     -0.5%|     -0.3%|
split4                           |      |      |      |      |     -0.5%|     -0.3%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
