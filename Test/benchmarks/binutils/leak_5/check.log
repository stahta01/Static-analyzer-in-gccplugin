../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:7:
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_quick_insert’:
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
    7 | #include "../include/vec.h"
  +++ |+#include <string.h>
    8 | 
In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:7:
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:733:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_ordered_remove’:
./benchmarks/binutils/leak_5/../include/vec.h:748:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  748 |   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:748:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  748 |   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_block_remove’:
./benchmarks/binutils/leak_5/../include/vec.h:775:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  775 |   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));          \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:775:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  775 |   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));          \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_copy’:
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_merge’:
./benchmarks/binutils/leak_5/../include/vec.h:558:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  558 |       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);        \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:558:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  558 |       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);        \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
   49 |         srand(time(&t));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 42%)
 phase parsing                      :   0.03 ( 75%)   0.04 ( 80%)   0.08 ( 80%)  1530k ( 49%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 20%)   0.02 ( 20%)   275k (  9%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 ( 20%)   0.02 ( 20%)   154k (  5%)
 ipa lto gimple out                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)  2416  (  0%)
 preprocessing                      :   0.01 ( 25%)   0.02 ( 40%)   0.04 ( 40%)   630k ( 20%)
 lexical analysis                   :   0.01 ( 25%)   0.01 ( 20%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 20%)   0.01 ( 10%)   631k ( 20%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)    73k (  2%)
 parser inl. func. body             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)   155k (  5%)
 tree CFG cleanup                   :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 10%)     0  (  0%)
 branch prediction                  :   0.00 (  0%)   0.01 ( 20%)   0.00 (  0%)  6992  (  0%)
 symout                             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)     0  (  0%)
 plugin execution                   :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.04          0.05          0.10         3115k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2231k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:btrace_clear=========
=======node_fun:VEC_btrace_insn_safe_push=========
=======node_fun:VEC_btrace_insn_reserve=========
=======node_fun:VEC_btrace_insn_alloc=========
=======node_fun:VEC_btrace_insn_quick_push=========
=======node_fun:VEC_btrace_insn_space=========
=======node_fun:vec_o_reserve=========
=======node_fun:calculate_allocation=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 32 
===============The second stage : Mapping stmt=================
# .MEM_49 = VDEF <.MEM_48(D)>
_1 = time (&t);
# .MEM_50 = VDEF <.MEM_49>
srand (_2);
# .MEM_51 = VDEF <.MEM_50>
bfunc_19 = malloc (24);
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
# .MEM_65 = VDEF <.MEM_58>
next_37 = malloc (24);
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
# .MEM_58 = VDEF <.MEM_46>
_8 = rand ();
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
# .MEM_12 = VDEF <.MEM_11>
MEM <struct VEC_btrace_insn> [(btrace_insn *)vec__6(D)].vec[_3] = obj__9(D);
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
bfunc_19 = malloc (24);
_3 = VEC_btrace_insn_alloc (10);
bfunc_19->insn = _3;
bfunc_19->next = 0B;
_4 = bfunc_19->next;
bfunc_19->prev = _4;
btinfo.end = bfunc_19;
_5 = btinfo.end;
btinfo.begin = _5;
it_26 = btinfo.begin;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
next_37 = malloc (24);
_6 = VEC_btrace_insn_alloc (10);
insn_vec_p = _6;
_7 = insn_vec_p;
next_37->insn = _7;
it_11->next = next_37;
next_37->prev = it_11;
next_37->next = 0B;
btinfo.end = next_37;
it_45 = it_11->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# it_11 = PHI <it_26(2), it_45(3)>
_8 = rand ();
_9 = _8 % 2;
if (_9 == 1)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
it_28 = btinfo.begin;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
_10 = it_12->insn;
insn_vec_p = _10;
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
it_35 = it_12->next;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# it_12 = PHI <it_28(5), it_35(6)>
if (it_12 != 0B)
  goto <bb 6>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
btrace_clear (&btinfo);
t ={v} {CLOBBER};
btinfo ={v} {CLOBBER};
insn_vec_p ={v} {CLOBBER};
return 0;

=======Mapping node_fun:btrace_clear=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
it_5 = btp_4(D)->begin;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
it_8 = it_1->next;
free (it_1);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# it_1 = PHI <it_5(2), it_8(3)>
if (it_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
btp_4(D)->begin = 0B;
btp_4(D)->end = 0B;
return;

=======Mapping node_fun:VEC_btrace_insn_safe_push=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
_1 = *vec__3(D);
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
return _9;

=======Mapping node_fun:VEC_btrace_insn_reserve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = ABS_EXPR <alloc__8(D)>;
_2 = *vec__10(D);
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_4 = _3 == 0;
extend_13 = (int) _4;
if (_3 == 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_5 = *vec__10(D);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
*vec__10(D) = _6;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return extend_13;

=======Mapping node_fun:VEC_btrace_insn_alloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = -alloc__2(D);
_5 = vec_o_reserve (0B, _1, 8, 4);
return _5;

=======Mapping node_fun:VEC_btrace_insn_quick_push=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = vec__6(D)->num;
_2 = vec__6(D)->alloc;
if (_1 >= _2)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_3 = vec__6(D)->num;
_4 = _3 + 1;
vec__6(D)->num = _4;
slot__8 = &vec__6(D)->vec[_3];
MEM <struct VEC_btrace_insn> [(btrace_insn *)vec__6(D)].vec[_3] = obj__9(D);
return slot__8;

=======Mapping node_fun:VEC_btrace_insn_space=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (alloc__8(D) < 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
if (vec__9(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751318634]:
_1 = vec__9(D)->alloc;
_2 = vec__9(D)->num;
_3 = _1 - _2;
_4 = (unsigned int) alloc__8(D);
_5 = _3 >= _4;
_12 = (int) _5;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 321993695]:
_6 = alloc__8(D) == 0;
_10 = (int) _6;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073312329]:
# _7 = PHI <_12(5), _10(6)>
return _7;

=======Mapping node_fun:vec_o_reserve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
if (alloc_9 == 0)
  goto <bb 7>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370897]:
_1 = (long unsigned int) alloc_9;
_2 = _1 * elt_size_10(D);
_3 = _2 + vec_offset_11(D);
vec_13 = realloc (vec_6(D), _3);
if (vec_13 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 300948]:
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 752069949]:
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
if (vec_6(D) == 0B)
  goto <bb 6>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 225620982]:
MEM[(struct vec_prefix *)vec_13].num = 0;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073440878]:
# _4 = PHI <0B(2), vec_13(5), vec_13(6)>
return _4;

=======Mapping node_fun:calculate_allocation=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (pfx_13(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
alloc_16 = pfx_13(D)->alloc;
num_17 = pfx_13(D)->num;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 322122544]:
if (reserve_14(D) == 0)
  goto <bb 15>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 964220159]:
# alloc_9 = PHI <alloc_16(3), 0(4)>
# num_11 = PHI <num_17(3), 0(4)>
_1 = alloc_9 - num_11;
_2 = ABS_EXPR <reserve_14(D)>;
_3 = (unsigned int) _2;
if (_1 >= _3)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 385687]:
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 963834472]:
if (reserve_14(D) < 0)
  goto <bb 8>; [41.00%]
else
  goto <bb 9>; [59.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 395172130]:
_4 = (unsigned int) reserve_14(D);
alloc_21 = num_11 - _4;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 568662342]:
if (alloc_9 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 284331171]:
if (alloc_9 <= 15)
  goto <bb 11>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 142165585]:
alloc_19 = alloc_9 * 2;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 142165585]:
_5 = alloc_9 * 3;
alloc_18 = _5 / 2;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 568662343]:
# alloc_10 = PHI <4(9), alloc_19(11), alloc_18(12)>
_6 = (unsigned int) reserve_14(D);
_7 = _6 + num_11;
if (_7 > alloc_10)
  goto <bb 14>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 284331171]:
_8 = (unsigned int) reserve_14(D);
alloc_20 = _8 + num_11;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 1073356139]:
# _12 = PHI <0(4), alloc_21(8), alloc_10(13), alloc_20(14)>
return _12;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 32 [0m
[40;34m    analyzable ptable point : 31 [0m
[40;34m    analyzable ptable all point stmt : 129 [0m
[40;34m    used_stmt array stack totalsize of : 0.003944 mb[0m
[40;34m    collect time: : 0.000460 s [0m
[40;34m    mapping time: : 0.001374 s [0m
[40;34m    algorithm time: 0.006028 s [0m
[40;34m    gimple stmt count : : 118 [0m
[40;34m    this report analysis in Mon Jun 20 14:57:45 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 20%)   0.00 (  0%)   0.01 ( 14%)  2157k ( 76%)
 phase opt and generate             :   0.04 ( 80%)   0.02 (100%)   0.06 ( 86%)   649k ( 23%)
 callgraph functions expansion      :   0.03 ( 60%)   0.02 (100%)   0.05 ( 71%)   534k ( 19%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   120  (  0%)
 tree CCP                           :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 14%)   336  (  0%)
 expand                             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    61k (  2%)
 CSE                                :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)   376  (  0%)
 integrated RA                      :   0.01 ( 20%)   0.01 ( 50%)   0.00 (  0%)   221k (  8%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  3400  (  0%)
 plugin execution                   :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)  2032  (  0%)
 initialize rtl                     :   0.01 ( 20%)   0.00 (  0%)   0.01 ( 14%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    25k (  1%)
 TOTAL                              :   0.05          0.02          0.07         2854k
