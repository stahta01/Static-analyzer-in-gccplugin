../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:7:
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_quick_insert’:
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
    7 | #include "../include/vec.h"
  +++ |+#include <string.h>
    8 | 
In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:7:
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:733:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  733 |   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_ordered_remove’:
./benchmarks/binutils/leak_5/../include/vec.h:748:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  748 |   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:748:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  748 |   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));           \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_block_remove’:
./benchmarks/binutils/leak_5/../include/vec.h:775:3: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
  775 |   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));          \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:775:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
  775 |   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));          \
      |   ^~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro ‘DEF_VEC_FUNC_P’
  484 | DEF_VEC_FUNC_P(T)                                                         \
      | ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_copy’:
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  540 |       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);               \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘VEC_btrace_insn_merge’:
./benchmarks/binutils/leak_5/../include/vec.h:558:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  558 |       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);        \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:558:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  558 |       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);        \
      |       ^~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro ‘DEF_VEC_ALLOC_FUNC_I’
  485 | DEF_VEC_ALLOC_FUNC_I(T)                                                   \
      | ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro ‘DEF_VEC_I’
   11 | DEF_VEC_I(btrace_insn);
      | ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
   49 |         srand(time(&t));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)  1298k ( 42%)
 phase parsing                      :   0.05 ( 71%)   0.00 (  0%)   0.04 ( 50%)  1530k ( 49%)
 phase opt and generate             :   0.02 ( 29%)   0.01 (100%)   0.03 ( 38%)   275k (  9%)
 callgraph construction             :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    23k (  1%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 13%)    48  (  0%)
 callgraph ipa passes               :   0.01 ( 14%)   0.01 (100%)   0.02 ( 25%)   154k (  5%)
 ipa lto gimple out                 :   0.01 ( 14%)   0.01 (100%)   0.01 ( 12%)  2416  (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 13%)   630k ( 20%)
 lexical analysis                   :   0.03 ( 43%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.02 ( 29%)   0.00 (  0%)   0.02 ( 25%)   631k ( 20%)
 parser inl. func. body             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)   155k (  5%)
 tree gimplify                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)    68k (  2%)
 TOTAL                              :   0.07          0.01          0.08         3115k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2231k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_alloc--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_alloc--
node:= 4 
 	next_branch :=3
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_safe_push--
node:= 7 
 	next_branch :=6
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------btrace_clear--
=======node_fun:btrace_clear=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
=======node_fun:VEC_btrace_insn_safe_push=========
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_reserve--
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_quick_push--
=======node_fun:VEC_btrace_insn_reserve=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------VEC_btrace_insn_space--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------vec_o_reserve--
=======node_fun:VEC_btrace_insn_alloc=========
addr_expraddr_expraddr_expraddr_expraddr_expr------vec_o_reserve--
=======node_fun:VEC_btrace_insn_quick_push=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:VEC_btrace_insn_space=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
=======node_fun:vec_o_reserve=========
node:= 2 
 	next_branch :=7
	next_branch :=3
addr_expraddr_expraddr_expraddr_expraddr_expr------calculate_allocation--
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=7
=======node_fun:calculate_allocation=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=15
	next_branch :=5
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=15
node:= 9 
 	next_branch :=13
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 	next_branch :=15
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 32 
===============The second stage : Mapping stmt=================
# .MEM_49 = VDEF <.MEM_48(D)>
_1 = time (&t);
# .MEM_50 = VDEF <.MEM_49>
srand (_2);
# .MEM_51 = VDEF <.MEM_50>
bfunc_19 = malloc (24);
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
# .MEM_65 = VDEF <.MEM_58>
next_37 = malloc (24);
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
# .MEM_58 = VDEF <.MEM_46>
_8 = rand ();
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
# .MEM_12 = VDEF <.MEM_11>
MEM <struct VEC_btrace_insn> [(btrace_insn *)vec__6(D)].vec[_3] = obj__9(D);
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_1 = time (&t);
========================================================
=============== *this point analyzable =================
_1 = time (&t);
========================================================
 <ssa_name 0x7f5a2a35c630
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
=============== *this point analyzable =================
bfunc_19 = malloc (24);
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_alloc (10);
========================================================
=============== *this point analyzable =================
next_37 = malloc (24);
========================================================
=============== *this point analyzable =================
_6 = VEC_btrace_insn_alloc (10);
========================================================
=============== *this point analyzable =================
_8 = rand ();
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
btrace_clear (&btinfo);
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
========================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
=============== *this point analyzable =================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
========================================================
=============== *this point analyzable =================
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
========================================================
=============== *this point analyzable =================
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
========================================================
=============== *this point analyzable =================
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
========================================================
=============== *this point analyzable =================
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
========================================================
=============== *this point analyzable =================
_5 = vec_o_reserve (0B, _1, 8, 4);
========================================================
=============== *this point analyzable =================
_5 = vec_o_reserve (0B, _1, 8, 4);
========================================================
=============== *this point analyzable =================
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
========================================================
=============== *this point analyzable =================
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
========================================================
=============== *this point analyzable =================
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:btrace_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path btrace_clear  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:btrace_clear========= [0m
[40;42m =======start_check_funciton:btrace_clear========= [0m
[40;33m =======POP node_fun stack:btrace_clear========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_safe_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_reserve  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_space  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_space========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_space========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_space========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_reserve========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
is Other function VEC_btrace_insn_space
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================== pre trace ptable ================== 
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_19 = VDEF <.MEM_16>
exit (1);
./benchmarks/binutils/leak_5/../include/vec.h:448:19: warning: use location
  448 |         if (!vec) exit (1);
      |                   ^
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
is Other function vec_o_reserve
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_safe_push========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_safe_push========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_13 = VDEF <.MEM_10(D)>
exit (1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
is Other function VEC_btrace_insn_quick_push
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_safe_push========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_alloc  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_alloc========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>

 ================== pre trace ptable ================== 
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_19 = VDEF <.MEM_16>
exit (1);
./benchmarks/binutils/leak_5/../include/vec.h:448:19: warning: use location
  448 |         if (!vec) exit (1);
      |                   ^
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
is Other function vec_o_reserve
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_alloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7f5a2abfcea0 t
    type <integer_type 0x7f5a29e75b28 time_t DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369738 precision:64 min <integer_cst 0x7f5a2a354e40 -9223372036854775808> max <integer_cst 0x7f5a2a354e58 9223372036854775807> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75c78>>
    addressable DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:43:9 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfce10 btinfo>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f5a2abfcea0 t
    type <integer_type 0x7f5a29e75b28 time_t DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369738 precision:64 min <integer_cst 0x7f5a2a354e40 -9223372036854775808> max <integer_cst 0x7f5a2a354e58 9223372036854775807> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75c78>>
    addressable DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:43:9 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfce10 btinfo>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48(D)>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:15: warning: use location
   49 |         srand(time(&t));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48(D)>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c5e8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = time (&t);
    version:1>
 <ssa_name 0x7f5a2a35c5e8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a2a35c5e8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = time (&t);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48(D)>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
_2 = (unsigned int) _1;
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:9: warning: use location
   49 |         srand(time(&t));
      |         ^
srand (_2);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c5e8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c630
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7f5a2a35c630
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a2a35c630
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_49>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_50 = VDEF <.MEM_49>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c630
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c948
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfcc60 bfunc>
    def_stmt bfunc_19 = malloc (24);
    version:19
    ptr-info 0x7f5a29e7c708>
 <ssa_name 0x7f5a2a35c948
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfcc60 bfunc>
    def_stmt bfunc_19 = malloc (24);
    version:19
    ptr-info 0x7f5a29e7c708>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
btinfo.end = bfunc_19;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:35: warning: use location
   55 |         btinfo.begin = btinfo.end = bfunc;
      |                                   ^
btinfo.end = bfunc_19;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:35: warning: use location
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35c948
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfcc60 bfunc>
    def_stmt bfunc_19 = malloc (24);
    version:19
    ptr-info 0x7f5a29e7c708>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with bfunc ========= [0m
[40;36m ======= relate node_fun argument:bfunc========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bfunc========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
btrace_clear (&btinfo);
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35c948
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfcc60 bfunc>
    def_stmt bfunc_19 = malloc (24);
    version:19
    ptr-info 0x7f5a29e7c708>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with bfunc ========= [0m
[40;36m ======= relate node_fun argument:bfunc========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:bfunc========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
bfunc_19->prev = _4;
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->prev = it_11;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:28: warning: use location
   65 |                 next->prev = it;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_45 = it_11->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:20: warning: use location
   69 |                 it = it->next;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_11->next = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:26: warning: use location
   64 |                 it->next = next;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:28: warning: use location
   68 |                 btinfo.end = next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:28: warning: use location
   66 |                 next->next = NULL;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
   62 |                 next->insn = insn_vec_p;
      |                            ^
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                     ^
_4 = bfunc_19->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                            ^
bfunc_19->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:35: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                                   ^
# .MEM_51 = VDEF <.MEM_50>
bfunc_19 = malloc (24);
bfunc_19 = malloc (24);
./benchmarks/binutils/leak_5/binutils_leak_5.c:51:17: warning: use location
   51 |         bfunc = xmalloc(sizeof(struct btrace_function));
      |                 ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c948
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfcc60 bfunc>
    def_stmt bfunc_19 = malloc (24);
    version:19
    ptr-info 0x7f5a29e7c708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_alloc 
[40;44m =======trace_function_path VEC_btrace_insn_alloc  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:VEC_btrace_insn_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :889========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
is Other function VEC_btrace_insn_alloc
 
 Start check Pointer Collect  

======================================================================
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                     ^
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
btinfo.end = bfunc_19;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:35: warning: use location
   55 |         btinfo.begin = btinfo.end = bfunc;
      |                                   ^
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
btrace_clear (&btinfo);
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
bfunc_19->prev = _4;
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->prev = it_11;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:28: warning: use location
   65 |                 next->prev = it;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_45 = it_11->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:20: warning: use location
   69 |                 it = it->next;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_11->next = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:26: warning: use location
   64 |                 it->next = next;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:28: warning: use location
   68 |                 btinfo.end = next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:28: warning: use location
   66 |                 next->next = NULL;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
   62 |                 next->insn = insn_vec_p;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
_4 = bfunc_19->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                            ^
bfunc_19->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:35: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                                   ^
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^
this stmt call this function :VEC_btrace_insn_alloc
trace fucntion name:VEC_btrace_insn_alloc 
[40;44m =======trace_function_path VEC_btrace_insn_alloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:VEC_btrace_insn_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c678
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _3 = VEC_btrace_insn_alloc (10);
    version:3
    ptr-info 0x7f5a29e7c648>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_55>
btinfo.end = bfunc_19;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:35: warning: use location
   55 |         btinfo.begin = btinfo.end = bfunc;
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
bfunc_19->prev = _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_70 = VDEF <.MEM_69>
next_37->prev = it_11;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:28: warning: use location
   65 |                 next->prev = it;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# VUSE <.MEM_72>
it_45 = it_11->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:20: warning: use location
   69 |                 it = it->next;
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_69 = VDEF <.MEM_68>
it_11->next = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:26: warning: use location
   64 |                 it->next = next;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_72 = VDEF <.MEM_71>
btinfo.end = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:28: warning: use location
   68 |                 btinfo.end = next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_71 = VDEF <.MEM_70>
next_37->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:28: warning: use location
   66 |                 next->next = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_68 = VDEF <.MEM_67>
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
   62 |                 next->insn = insn_vec_p;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_68 = VDEF <.MEM_67>
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
   62 |                 next->insn = insn_vec_p;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# VUSE <.MEM_54>
_4 = bfunc_19->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
_3 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:23: warning: free in this location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                       ^

===== possiable asias =====
# .MEM_54 = VDEF <.MEM_53>
bfunc_19->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:35: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35ca68
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfccf0 next>
    def_stmt next_37 = malloc (24);
    version:37
    ptr-info 0x7f5a29e7c768>
 <ssa_name 0x7f5a2a35ca68
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfccf0 next>
    def_stmt next_37 = malloc (24);
    version:37
    ptr-info 0x7f5a29e7c768>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:28: warning: use location
   68 |                 btinfo.end = next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:28: warning: use location
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35ca68
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfccf0 next>
    def_stmt next_37 = malloc (24);
    version:37
    ptr-info 0x7f5a29e7c768>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with next ========= [0m
[40;36m ======= relate node_fun argument:next========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:next========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
btrace_clear (&btinfo);
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <ssa_name 0x7f5a2a35ca68
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfccf0 next>
    def_stmt next_37 = malloc (24);
    version:37
    ptr-info 0x7f5a29e7c768>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with next ========= [0m
[40;36m ======= relate node_fun argument:next========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:next========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_4 = bfunc_19->next;
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                            ^
bfunc_19->prev = _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                     ^
btinfo.end = bfunc_19;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:35: warning: use location
   55 |         btinfo.begin = btinfo.end = bfunc;
      |                                   ^
bfunc_19->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:35: warning: use location
   53 |         bfunc->prev = bfunc->next = NULL;
      |                                   ^
bfunc_19->insn = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:21: warning: use location
   52 |         bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->insn = _7;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:28: warning: use location
   62 |                 next->insn = insn_vec_p;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->prev = it_11;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:28: warning: use location
   65 |                 next->prev = it;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_45 = it_11->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:20: warning: use location
   69 |                 it = it->next;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_11->next = next_37;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:26: warning: use location
   64 |                 it->next = next;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_37->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:28: warning: use location
   66 |                 next->next = NULL;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_65 = VDEF <.MEM_58>
next_37 = malloc (24);
next_37 = malloc (24);
./benchmarks/binutils/leak_5/binutils_leak_5.c:59:24: warning: use location
   59 |                 next = xmalloc(sizeof(struct btrace_function));
      |                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35ca68
    type <pointer_type 0x7f5a29e759d8
        type <record_type 0x7f5a29e75930 btrace_function BLK
            size <integer_cst 0x7f5a2a372078 constant 192>
            unit-size <integer_cst 0x7f5a2a372048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75930 fields <field_decl 0x7f5a29e6f720 prev> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e759d8>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5a2abfccf0 next>
    def_stmt next_37 = malloc (24);
    version:37
    ptr-info 0x7f5a29e7c768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_alloc 
[40;44m =======trace_function_path VEC_btrace_insn_alloc  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :889========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :890========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
is Other function VEC_btrace_insn_alloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:28: warning: use location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:28: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^
this stmt call this function :VEC_btrace_insn_safe_push
trace fucntion name:VEC_btrace_insn_safe_push 
[40;44m =======trace_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_safe_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^
this stmt call this function :VEC_btrace_insn_safe_push
trace fucntion name:VEC_btrace_insn_safe_push 
[40;44m =======trace_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_safe_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
_6 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:30: warning: use location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                              ^
this stmt call this function :VEC_btrace_insn_alloc
trace fucntion name:VEC_btrace_insn_alloc 
[40;44m =======trace_function_path VEC_btrace_insn_alloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:VEC_btrace_insn_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c750
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _6 = VEC_btrace_insn_alloc (10);
    version:6
    ptr-info 0x7f5a29e7c690>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:30: warning: free in this location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                              ^

===== possiable asias =====
# .MEM_67 = VDEF <.MEM_66>
insn_vec_p = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:28: warning: use location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:30: warning: free in this location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                              ^

===== possiable asias =====
# .MEM_67 = VDEF <.MEM_66>
insn_vec_p = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:28: warning: use location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:30: warning: free in this location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                              ^

===== possiable asias =====
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_66 = VDEF <.MEM_65>
_6 = VEC_btrace_insn_alloc (10);
./benchmarks/binutils/leak_5/binutils_leak_5.c:60:30: warning: free in this location
   60 |                 insn_vec_p = VEC_alloc (btrace_insn, 10); /* allocation site */
      |                              ^

===== possiable asias =====
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a2a35c7e0
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _8 = rand ();
    version:8>
 <ssa_name 0x7f5a2a35c7e0
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _8 = rand ();
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a2a35c7e0
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _8 = rand ();
    version:8>
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _8 % 2;
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:16: warning: use location
   58 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 == 1)
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_58 = VDEF <.MEM_46>
_8 = rand ();
_8 = rand ();
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a2a35c7e0
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _8 = rand ();
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^
this stmt call this function :VEC_btrace_insn_safe_push
trace fucntion name:VEC_btrace_insn_safe_push 
[40;44m =======trace_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :0========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_safe_push========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :1========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :1========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :3========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :2========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_64 = VDEF <.MEM_63>
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
./benchmarks/binutils/leak_5/binutils_leak_5.c:75:17: warning: use location
   75 |                 VEC_safe_push (btrace_insn, insn_vec_p, 55);
      |                 ^
this stmt call this function :VEC_btrace_insn_safe_push
trace fucntion name:VEC_btrace_insn_safe_push 
[40;44m =======trace_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :0========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_safe_push========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :1========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :1========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:insn_vec_p========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘main’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :3========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :2========  [0m
 <var_decl 0x7f5a2abfcbd0 insn_vec_p
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
    addressable unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:47:19 size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main>>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with insn_vec_p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f5a2a35caf8
    type <array_type 0x7f5a29e76150
        type <integer_type 0x7f5a29e6cdc8 char public QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>>
        BLK
        size <integer_cst 0x7f5a2a4290a8 constant 376>
        unit-size <integer_cst 0x7f5a29e63828 constant 47>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f5a29e760a8 type <integer_type 0x7f5a2a369000 sizetype>
            DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369738 precision:64 min <integer_cst 0x7f5a2a354be8 0> max <integer_cst 0x7f5a29e63810 46>>
        pointer_to_this <pointer_type 0x7f5a29e761f8>>
    readonly constant static "./benchmarks/binutils/leak_5/binutils_leak_5.c\000">

dot graph START

======================================================================
 <var_decl 0x7f5a2abfce10 btinfo
    type <record_type 0x7f5a29e757e0 btrace_thread_info TI
        size <integer_cst 0x7f5a2a354c00 constant 128>
        unit-size <integer_cst 0x7f5a2a354c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e757e0
        fields <field_decl 0x7f5a29e6f558 begin type <pointer_type 0x7f5a29e75738>
            unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:21:26
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f5a2a354be8 constant 0>
            bit-offset <integer_cst 0x7f5a2a354c30 constant 0> context <record_type 0x7f5a29e757e0 btrace_thread_info> chain <field_decl 0x7f5a29e6f4c0 end>> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75888>>
    addressable TI ./benchmarks/binutils/leak_5/binutils_leak_5.c:45:28 size <integer_cst 0x7f5a2a354c00 128> unit-size <integer_cst 0x7f5a2a354c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfcd80 it>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f5a2abfce10 btinfo
    type <record_type 0x7f5a29e757e0 btrace_thread_info TI
        size <integer_cst 0x7f5a2a354c00 constant 128>
        unit-size <integer_cst 0x7f5a2a354c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e757e0
        fields <field_decl 0x7f5a29e6f558 begin type <pointer_type 0x7f5a29e75738>
            unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:21:26
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f5a2a354be8 constant 0>
            bit-offset <integer_cst 0x7f5a2a354c30 constant 0> context <record_type 0x7f5a29e757e0 btrace_thread_info> chain <field_decl 0x7f5a29e6f4c0 end>> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75888>>
    addressable TI ./benchmarks/binutils/leak_5/binutils_leak_5.c:45:28 size <integer_cst 0x7f5a2a354c00 128> unit-size <integer_cst 0x7f5a2a354c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfcd80 it>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
btrace_clear (&btinfo);
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <var_decl 0x7f5a2abfce10 btinfo
    type <record_type 0x7f5a29e757e0 btrace_thread_info TI
        size <integer_cst 0x7f5a2a354c00 constant 128>
        unit-size <integer_cst 0x7f5a2a354c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e757e0
        fields <field_decl 0x7f5a29e6f558 begin type <pointer_type 0x7f5a29e75738>
            unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:21:26
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f5a2a354be8 constant 0>
            bit-offset <integer_cst 0x7f5a2a354c30 constant 0> context <record_type 0x7f5a29e757e0 btrace_thread_info> chain <field_decl 0x7f5a29e6f4c0 end>> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75888>>
    addressable TI ./benchmarks/binutils/leak_5/binutils_leak_5.c:45:28 size <integer_cst 0x7f5a2a354c00 128> unit-size <integer_cst 0x7f5a2a354c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfcd80 it>>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with btinfo ========= [0m
[40;36m ======= relate node_fun argument:btinfo========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:btinfo========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_59 = VDEF <.MEM_47>
btrace_clear (&btinfo);
btrace_clear (&btinfo);
In function ‘main’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:79:9: warning: use location
   79 |         btrace_clear (&btinfo);
      |         ^
this stmt call this function :btrace_clear
trace fucntion name:btrace_clear 
[40;44m =======trace_function_path btrace_clear  function_call count: 1 level :0========  [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_9>
free (it_1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:17: warning: use location
   34 |                 free (trash);
      |                 ^
 <var_decl 0x7f5a2abfce10 btinfo
    type <record_type 0x7f5a29e757e0 btrace_thread_info TI
        size <integer_cst 0x7f5a2a354c00 constant 128>
        unit-size <integer_cst 0x7f5a2a354c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e757e0
        fields <field_decl 0x7f5a29e6f558 begin type <pointer_type 0x7f5a29e75738>
            unsigned DI ./benchmarks/binutils/leak_5/binutils_leak_5.c:21:26
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f5a2a354be8 constant 0>
            bit-offset <integer_cst 0x7f5a2a354c30 constant 0> context <record_type 0x7f5a29e757e0 btrace_thread_info> chain <field_decl 0x7f5a29e6f4c0 end>> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
        pointer_to_this <pointer_type 0x7f5a29e75888>>
    addressable TI ./benchmarks/binutils/leak_5/binutils_leak_5.c:45:28 size <integer_cst 0x7f5a2a354c00 128> unit-size <integer_cst 0x7f5a2a354c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7f5a29e74200 main> chain <var_decl 0x7f5a2abfcd80 it>>
[40;36m ======= node_fun:btrace_clear========= [0m
[40;36m ======= find relate stmt with btinfo ========= [0m
[40;36m ======= relate node_fun argument:btinfo========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
In function ‘btrace_clear’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
   28 |         it = btp->begin;
      |            ^
it_5 = btp_4(D)->begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:12: warning: use location
it_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:btinfo========= [0m
[40;36m ======= relate gimple_assign_lhs:it========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
   32 |                 it = it->next;
      |                    ^
it_8 = it_1->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:20: warning: use location
it_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:btrace_clear========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path btrace_clear  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:btrace_clear========= [0m
[40;42m =======start_check_funciton:btrace_clear========= [0m
[40;33m =======POP node_fun stack:btrace_clear========= [0m
[40;44m =======node_fun:VEC_btrace_insn_safe_push========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path VEC_btrace_insn_safe_push  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_quick_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_reserve  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_space  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_space========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_space========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_space========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_reserve========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
is Other function VEC_btrace_insn_space
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================== pre trace ptable ================== 
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_19 = VDEF <.MEM_16>
exit (1);
./benchmarks/binutils/leak_5/../include/vec.h:448:19: warning: use location
  448 |         if (!vec) exit (1);
      |                   ^
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
is Other function vec_o_reserve
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_safe_push========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_safe_push========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:vec_========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with vec_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e885e8
    type <pointer_type 0x7f5a29e75348
        type <pointer_type 0x7f5a29e75150 type <record_type 0x7f5a29e750a8 VEC_btrace_insn>
            public unsigned DI
            size <integer_cst 0x7f5a2a354bb8 constant 64>
            unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a29e75348>>
        public unsigned DI size <integer_cst 0x7f5a2a354bb8 64> unit-size <integer_cst 0x7f5a2a354bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86100 vec_>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f5a29e7c810>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88630
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86200 file_>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f5a29e7c828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86280 line_>
    def_stmt GIMPLE_NOP
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e885a0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _1 = *vec__3(D);
    version:1
    ptr-info 0x7f5a29e7c7f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_11>
_1 = *vec__3(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with obj_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e886c0
    type <integer_type 0x7f5a29e75498 btrace_insn readonly SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>>
    var <parm_decl 0x7f5a29e86180 obj_>
    def_stmt GIMPLE_NOP
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_13 = VDEF <.MEM_10(D)>
exit (1);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
is Other function VEC_btrace_insn_quick_push
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_quick_push
trace fucntion name:VEC_btrace_insn_quick_push 
[40;44m =======trace_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_quick_push========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:slot_========= [0m
In function ‘VEC_btrace_insn_quick_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
slot__8 = &vec__6(D)->vec[_3];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
slot__8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_reserve
trace fucntion name:VEC_btrace_insn_reserve 
[40;44m =======trace_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_2 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5 = *vec__10(D);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
*vec__10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;46m =======add node_fun stack:vec_o_reserve========= [0m
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
In function ‘VEC_btrace_insn_safe_push’:
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :2========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;46m =======add node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88708
    type <pointer_type 0x7f5a29e6c690
        type <integer_type 0x7f5a29e6c5e8 btrace_insn SI
            size <integer_cst 0x7f5a2a354df8 constant 32>
            unit-size <integer_cst 0x7f5a2a354e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e6c690>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
    version:9
    ptr-info 0x7f5a29e7c840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location
   11 | DEF_VEC_I(btrace_insn);
      | ^

===== possiable asias =====
# .MEM_12 = VDEF <.MEM_11>
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_safe_push========= [0m
[40;44m =======node_fun:VEC_btrace_insn_reserve========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path VEC_btrace_insn_reserve  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
In function ‘VEC_btrace_insn_reserve’:
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre add _ fucntion:VEC_btrace_insn_space========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path VEC_btrace_insn_space  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_space========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_space========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_space========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_reserve========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88870
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _2 = *vec__10(D);
    version:2
    ptr-info 0x7f5a29e7c858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88828
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = ABS_EXPR <alloc__8(D)>;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with file_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88a68
    type <pointer_type 0x7f5a29e6cf18
        type <integer_type 0x7f5a29e6ce70 char readonly QI
            size <integer_cst 0x7f5a2a354ca8 constant 8>
            unit-size <integer_cst 0x7f5a2a354cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3693f0 precision:8 min <integer_cst 0x7f5a29e63750 -128> max <integer_cst 0x7f5a29e63738 127>
            pointer_to_this <pointer_type 0x7f5a29e6cf18>>
        unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5a29e86400 file_>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7f5a29e7c8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with line_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88ab0
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <parm_decl 0x7f5a29e86480 line_>
    def_stmt GIMPLE_NOP
    version:12>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
is Other function VEC_btrace_insn_space
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e888b8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88948
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = *vec__10(D);
    version:5
    ptr-info 0x7f5a29e7c870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
_1 = ABS_EXPR <alloc__8(D)>;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt call this function :VEC_btrace_insn_space
trace fucntion name:VEC_btrace_insn_space 
[40;44m =======trace_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:VEC_btrace_insn_space========= [0m
[40;36m ======= find relate stmt with alloc_ ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
_4 = _3 == 0;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
extend_13 = (int) _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e889d8
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86380 alloc_>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================== pre trace ptable ================== 
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_19 = VDEF <.MEM_16>
exit (1);
./benchmarks/binutils/leak_5/../include/vec.h:448:19: warning: use location
  448 |         if (!vec) exit (1);
      |                   ^
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
is Other function vec_o_reserve
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88990
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
   
    def_stmt _6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
    version:6
    ptr-info 0x7f5a29e7c888>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
*vec__10(D) = _6;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_reserve========= [0m
[40;44m =======node_fun:VEC_btrace_insn_alloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path VEC_btrace_insn_alloc  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
In function ‘VEC_btrace_insn_alloc’:
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_alloc========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88c60
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
   
    def_stmt _1 = -alloc__2(D);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>

 ================== pre trace ptable ================== 
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_19 = VDEF <.MEM_16>
exit (1);
./benchmarks/binutils/leak_5/../include/vec.h:448:19: warning: use location
  448 |         if (!vec) exit (1);
      |                   ^
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
is Other function vec_o_reserve
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = vec_o_reserve (0B, _1, 8, 4);
_5 = vec_o_reserve (0B, _1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
   11 | DEF_VEC_I(btrace_insn);
      | ^
this stmt call this function :vec_o_reserve
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;46m =======add node_fun stack:calculate_allocation========= [0m
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e88cf0
    type <pointer_type 0x7f5a29e75150
        type <record_type 0x7f5a29e750a8 VEC_btrace_insn BLK
            size <integer_cst 0x7f5a29e637c8 constant 96>
            unit-size <integer_cst 0x7f5a29e637b0 constant 12>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a29e75000 fields <field_decl 0x7f5a29e6f428 num> context <translation_unit_decl 0x7f5a2a35f168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7f5a29e75150>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a29e75348>>
   
    def_stmt _5 = vec_o_reserve (0B, _1, 8, 4);
    version:5
    ptr-info 0x7f5a29e7c8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:VEC_btrace_insn_alloc========= [0m
[40;44m =======node_fun:VEC_btrace_insn_quick_push========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path VEC_btrace_insn_quick_push  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_quick_push========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_quick_push========= [0m
[40;44m =======node_fun:VEC_btrace_insn_space========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path VEC_btrace_insn_space  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:VEC_btrace_insn_space========= [0m
[40;42m =======start_check_funciton:VEC_btrace_insn_space========= [0m
[40;33m =======POP node_fun stack:VEC_btrace_insn_space========= [0m
[40;44m =======node_fun:vec_o_reserve========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:calculate_allocation========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
In function ‘vec_o_reserve’:
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with vec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^
this stmt call this function :realloc

 ================== find free stmt ================== 
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e905e8
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f5a29e7c948>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with reserve ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90630
    type <integer_type 0x7f5a2a3695e8 int public SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a3695e8 precision:32 min <integer_cst 0x7f5a2a354db0 -2147483648> max <integer_cst 0x7f5a2a354dc8 2147483647>
        pointer_to_this <pointer_type 0x7f5a2a3709d8>>
    var <parm_decl 0x7f5a29e86a00 reserve>
    def_stmt GIMPLE_NOP
    version:8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
is Other function calculate_allocation
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_15(D)>
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
./benchmarks/binutils/leak_5/../include/vec.h:442:20: warning: use location
  442 |   unsigned alloc = calculate_allocation (pfx, reserve);
      |                    ^
this stmt call this function :calculate_allocation
trace fucntion name:calculate_allocation 
[40;44m =======trace_function_path calculate_allocation  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>
[40;36m ======= node_fun:calculate_allocation========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location
this stmt have mutiple branch ---calculate_allocation-----
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^
_1 = (long unsigned int) alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |                                          ^
if (alloc_9 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
  444 |   if (!alloc)
      |      ^
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5a29e90678
    type <integer_type 0x7f5a2a369690 unsigned int public unsigned SI
        size <integer_cst 0x7f5a2a354df8 constant 32>
        unit-size <integer_cst 0x7f5a2a354e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5a2a369690 precision:32 min <integer_cst 0x7f5a2a354e28 0> max <integer_cst 0x7f5a2a354de0 4294967295>
        pointer_to_this <pointer_type 0x7f5a2a375690>>
    var <var_decl 0x7f5a29e83b40 alloc>
    def_stmt alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: use location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
  450 |   ((struct vec_prefix *)vec)->alloc = alloc;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
_4 = PHI <0B(2), vec_13(5), vec_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
MEM[(struct vec_prefix *)vec_13].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
  452 |     ((struct vec_prefix *)vec)->num = 0;
      |                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_13 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:12: warning: use location
  448 |         if (!vec) exit (1);
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15(D)>
vec_13 = realloc (vec_6(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:9: warning: free in this location
  447 |   vec = realloc (vec, vec_offset + alloc * elt_size);
      |         ^

===== possiable asias =====
if (vec_6(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
  451 |   if (!pfx)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>
 <ssa_name 0x7f5a29e90750
    type <pointer_type 0x7f5a2a370000
        type <void_type 0x7f5a2a369f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f5a2a370000>>
        public unsigned DI
        size <integer_cst 0x7f5a2a354bb8 constant 64>
        unit-size <integer_cst 0x7f5a2a354bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f5a2a3759d8>>
    var <parm_decl 0x7f5a29e86980 vec>
    def_stmt vec_13 = realloc (vec_6(D), _3);
    version:13
    ptr-info 0x7f5a29e7c960>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;44m =======node_fun:calculate_allocation========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path calculate_allocation  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:calculate_allocation========= [0m
[40;42m =======start_check_funciton:calculate_allocation========= [0m
[40;33m =======POP node_fun stack:calculate_allocation========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
bfunc_19 = malloc (24);
_3 = VEC_btrace_insn_alloc (10);
bfunc_19->insn = _3;
bfunc_19->next = 0B;
_4 = bfunc_19->next;
bfunc_19->prev = _4;
btinfo.end = bfunc_19;
_5 = btinfo.end;
btinfo.begin = _5;
it_26 = btinfo.begin;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
next_37 = malloc (24);
_6 = VEC_btrace_insn_alloc (10);
insn_vec_p = _6;
_7 = insn_vec_p;
next_37->insn = _7;
it_11->next = next_37;
next_37->prev = it_11;
next_37->next = 0B;
btinfo.end = next_37;
it_45 = it_11->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# it_11 = PHI <it_26(2), it_45(3)>
_8 = rand ();
_9 = _8 % 2;
if (_9 == 1)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
it_28 = btinfo.begin;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
_10 = it_12->insn;
insn_vec_p = _10;
VEC_btrace_insn_safe_push (&insn_vec_p, 55, "./benchmarks/binutils/leak_5/binutils_leak_5.c", 75);
it_35 = it_12->next;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# it_12 = PHI <it_28(5), it_35(6)>
if (it_12 != 0B)
  goto <bb 6>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
btrace_clear (&btinfo);
t ={v} {CLOBBER};
btinfo ={v} {CLOBBER};
insn_vec_p ={v} {CLOBBER};
return 0;

=======Mapping node_fun:btrace_clear=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
it_5 = btp_4(D)->begin;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
it_8 = it_1->next;
free (it_1);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# it_1 = PHI <it_5(2), it_8(3)>
if (it_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
btp_4(D)->begin = 0B;
btp_4(D)->end = 0B;
return;

=======Mapping node_fun:VEC_btrace_insn_safe_push=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
VEC_btrace_insn_reserve (vec__3(D), 1, file__4(D), line__5(D));
_1 = *vec__3(D);
_9 = VEC_btrace_insn_quick_push (_1, obj__7(D), file__4(D), line__5(D));
return _9;

=======Mapping node_fun:VEC_btrace_insn_reserve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = ABS_EXPR <alloc__8(D)>;
_2 = *vec__10(D);
_3 = VEC_btrace_insn_space (_2, _1, file__11(D), line__12(D));
_4 = _3 == 0;
extend_13 = (int) _4;
if (_3 == 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_5 = *vec__10(D);
_6 = vec_o_reserve (_5, alloc__8(D), 8, 4);
*vec__10(D) = _6;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return extend_13;

=======Mapping node_fun:VEC_btrace_insn_alloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = -alloc__2(D);
_5 = vec_o_reserve (0B, _1, 8, 4);
return _5;

=======Mapping node_fun:VEC_btrace_insn_quick_push=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = vec__6(D)->num;
_2 = vec__6(D)->alloc;
if (_1 >= _2)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_3 = vec__6(D)->num;
_4 = _3 + 1;
vec__6(D)->num = _4;
slot__8 = &vec__6(D)->vec[_3];
MEM <struct VEC_btrace_insn> [(btrace_insn *)vec__6(D)].vec[_3] = obj__9(D);
return slot__8;

=======Mapping node_fun:VEC_btrace_insn_space=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (alloc__8(D) < 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
if (vec__9(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751318634]:
_1 = vec__9(D)->alloc;
_2 = vec__9(D)->num;
_3 = _1 - _2;
_4 = (unsigned int) alloc__8(D);
_5 = _3 >= _4;
_12 = (int) _5;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 321993695]:
_6 = alloc__8(D) == 0;
_10 = (int) _6;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073312329]:
# _7 = PHI <_12(5), _10(6)>
return _7;

=======Mapping node_fun:vec_o_reserve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
alloc_9 = calculate_allocation (vec_6(D), reserve_8(D));
if (alloc_9 == 0)
  goto <bb 7>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370897]:
_1 = (long unsigned int) alloc_9;
_2 = _1 * elt_size_10(D);
_3 = _2 + vec_offset_11(D);
vec_13 = realloc (vec_6(D), _3);
if (vec_13 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 300948]:
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 752069949]:
MEM[(struct vec_prefix *)vec_13].alloc = alloc_9;
if (vec_6(D) == 0B)
  goto <bb 6>; [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 225620982]:
MEM[(struct vec_prefix *)vec_13].num = 0;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073440878]:
# _4 = PHI <0B(2), vec_13(5), vec_13(6)>
return _4;

=======Mapping node_fun:calculate_allocation=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (pfx_13(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
alloc_16 = pfx_13(D)->alloc;
num_17 = pfx_13(D)->num;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 322122544]:
if (reserve_14(D) == 0)
  goto <bb 15>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 964220159]:
# alloc_9 = PHI <alloc_16(3), 0(4)>
# num_11 = PHI <num_17(3), 0(4)>
_1 = alloc_9 - num_11;
_2 = ABS_EXPR <reserve_14(D)>;
_3 = (unsigned int) _2;
if (_1 >= _3)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 385687]:
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 963834472]:
if (reserve_14(D) < 0)
  goto <bb 8>; [41.00%]
else
  goto <bb 9>; [59.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 395172130]:
_4 = (unsigned int) reserve_14(D);
alloc_21 = num_11 - _4;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 568662342]:
if (alloc_9 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 284331171]:
if (alloc_9 <= 15)
  goto <bb 11>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 142165585]:
alloc_19 = alloc_9 * 2;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 142165585]:
_5 = alloc_9 * 3;
alloc_18 = _5 / 2;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 568662343]:
# alloc_10 = PHI <4(9), alloc_19(11), alloc_18(12)>
_6 = (unsigned int) reserve_14(D);
_7 = _6 + num_11;
if (_7 > alloc_10)
  goto <bb 14>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 284331171]:
_8 = (unsigned int) reserve_14(D);
alloc_20 = _8 + num_11;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 1073356139]:
# _12 = PHI <0(4), alloc_21(8), alloc_10(13), alloc_20(14)>
return _12;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 32 [0m
[40;34m    analyzable ptable point : 30 [0m
[40;34m    used_stmt array stack totalsize of : 0.002936 mb[0m
[40;34m    collect time: : 0.003529 s [0m
[40;34m    algorithm time: 0.212252 s [0m
[40;34m    gimple stmt count : : 118 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:45 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 76%)
 phase opt and generate             :   0.09 (100%)   0.16 (100%)   0.25 (100%)   649k ( 23%)
 callgraph functions expansion      :   0.03 ( 33%)   0.01 (  6%)   0.03 ( 12%)   534k ( 19%)
 dominator optimization             :   0.01 ( 11%)   0.01 (  6%)   0.00 (  0%)    17k (  1%)
 tree forward propagate             :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)   968  (  0%)
 combiner                           :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    13k (  0%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  3400  (  0%)
 plugin execution                   :   0.06 ( 67%)   0.15 ( 94%)   0.23 ( 92%)  2032  (  0%)
 rest of compilation                :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    25k (  1%)
 TOTAL                              :   0.09          0.16          0.25         2854k
