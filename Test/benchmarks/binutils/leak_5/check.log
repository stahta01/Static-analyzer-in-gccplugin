In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:6:0:
./benchmarks/binutils/leak_5/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/leak_5/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_5/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/leak_5/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
In file included from ./benchmarks/binutils/leak_5/binutils_leak_5.c:7:0:
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜VEC_btrace_insn_quick_insertâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: implicit declaration of function â€˜memmoveâ€™ [-Wimplicit-function-declaration]
   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));    \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:733:3: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));    \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:733:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
   memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (T));    \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜VEC_btrace_insn_ordered_removeâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:748:3: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));    \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:748:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
   memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (T));    \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜VEC_btrace_insn_block_removeâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:775:3: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));   \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:775:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
   memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (T));   \
   ^
./benchmarks/binutils/leak_5/../include/vec.h:484:1: note: in expansion of macro â€˜DEF_VEC_FUNC_Pâ€™
 DEF_VEC_FUNC_P(T)         \
 ^~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜VEC_btrace_insn_copyâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);    \
       ^
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro â€˜DEF_VEC_ALLOC_FUNC_Iâ€™
 DEF_VEC_ALLOC_FUNC_I(T)         \
 ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);    \
       ^
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro â€˜DEF_VEC_ALLOC_FUNC_Iâ€™
 DEF_VEC_ALLOC_FUNC_I(T)         \
 ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:540:7: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
       memcpy (new_vec_->vec, vec_->vec, sizeof (T) * len_);    \
       ^
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro â€˜DEF_VEC_ALLOC_FUNC_Iâ€™
 DEF_VEC_ALLOC_FUNC_I(T)         \
 ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜VEC_btrace_insn_mergeâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:558:7: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);   \
       ^
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro â€˜DEF_VEC_ALLOC_FUNC_Iâ€™
 DEF_VEC_ALLOC_FUNC_I(T)         \
 ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/../include/vec.h:558:7: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
       memcpy (new_vec_->vec, vec1_->vec, sizeof (T) * vec1_->num);   \
       ^
./benchmarks/binutils/leak_5/../include/vec.h:485:1: note: in expansion of macro â€˜DEF_VEC_ALLOC_FUNC_Iâ€™
 DEF_VEC_ALLOC_FUNC_I(T)         \
 ^~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: note: in expansion of macro â€˜DEF_VEC_Iâ€™
 DEF_VEC_I(btrace_insn);
 ^~~~~~~~~
./benchmarks/binutils/leak_5/binutils_leak_5.c: In function â€˜mainâ€™:
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(&t));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 7
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 10
succs:= 9
--------GIMPLE Cond -------
succs:= 13
succs:= 4
succs:= 13
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 18
succs:= 18
succs:= 15
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 19
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_47 = VDEF <.MEM_46(D)>
_1 = time (&t);
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
# .MEM_49 = VDEF <.MEM_48>
bfunc_17 = malloc (24);
# .MEM_50 = VDEF <.MEM_49>
_42 = vec_o_reserve (0B, -10, 8, 4);
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);
# .MEM_64 = VDEF <.MEM_63>
_43 = vec_o_reserve (0B, -10, 8, 4);
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
# .MEM_109 = VDEF <.MEM_108>
MEM[(btrace_insn *)_71].vec[_74] = 55;
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:vec_o_reserve========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa3adee3ab0
    type <pointer_type 0x7fa3adef60a8
        type <void_type 0x7fa3adeeff18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa3adef60a8>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa3adefbbd0>>
    var <parm_decl 0x7fa3ada11180 vec>
    def_stmt vec_14 = realloc (vec_7(D), _3);
    version 14
    ptr-info 0x7fa3ada08f30>
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
num_26 = MEM[(const struct vec_prefix *)vec_7(D)].num;
In function â€˜vec_o_reserveâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:404:11: warning: use location
       num = pfx->num;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
num_28 = PHI <num_26(3), 0(4)>
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
num_28 = PHI <num_26(3), 0(4)>
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 20

======================================================================
alloc_41 = num_28 + _40;
./benchmarks/binutils/leak_5/../include/vec.h:433:15: warning: use location
         alloc = num + reserve;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
_44 = _42;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
alloc_10 = _44;
./benchmarks/binutils/leak_5/../include/vec.h:442:12: warning: use location
   unsigned alloc = calculate_allocation (pfx, reserve);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 20

======================================================================
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 20

======================================================================
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^
if (vec_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
Cond in fucntion vec_o_reserve basic block 16
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 17
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
_1 = (long unsigned int) alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
if (alloc_10 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
   if (!alloc)
      ^
if (alloc_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
Cond in fucntion vec_o_reserve basic block 15
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 21
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
alloc_25 = MEM[(const struct vec_prefix *)vec_7(D)].alloc;
./benchmarks/binutils/leak_5/../include/vec.h:403:13: warning: use location
       alloc = pfx->alloc;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_27 = PHI <alloc_25(3), 0(4)>
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_27 = PHI <alloc_25(3), 0(4)>
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
alloc_34 = alloc_27 * 2;
./benchmarks/binutils/leak_5/../include/vec.h:426:15: warning: use location
         alloc = alloc * 2;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location
this stmt have mutiple branch --------
if (alloc_27 <= 15)
./benchmarks/binutils/leak_5/../include/vec.h:424:15: warning: use location
       else if (alloc < 16)
               ^
if (alloc_27 <= 15)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:424:15: warning: use location
Cond in fucntion vec_o_reserve basic block 10
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 11
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (vec_7(D) != 0B)
./benchmarks/binutils/leak_5/../include/vec.h:401:6: warning: use location
   if (pfx)
      ^
if (vec_7(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:401:6: warning: use location
Cond in fucntion vec_o_reserve basic block 2
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 3
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^
if (vec_7(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
Cond in fucntion vec_o_reserve basic block 18
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 19
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3adee3ab0
    type <pointer_type 0x7fa3adef60a8
        type <void_type 0x7fa3adeeff18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa3adef60a8>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa3adefbbd0>>
    var <parm_decl 0x7fa3ada11180 vec>
    def_stmt vec_14 = realloc (vec_7(D), _3);
    version 14
    ptr-info 0x7fa3ada08f30>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:vec_o_reserve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vec_o_reserve  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:vec_o_reserve========= [0m
[40;42m =======start_check_funciton:vec_o_reserve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa3adee3ab0
    type <pointer_type 0x7fa3adef60a8
        type <void_type 0x7fa3adeeff18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa3adef60a8>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa3adefbbd0>>
    var <parm_decl 0x7fa3ada11180 vec>
    def_stmt vec_14 = realloc (vec_7(D), _3);
    version 14
    ptr-info 0x7fa3ada08f30>
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
num_26 = MEM[(const struct vec_prefix *)vec_7(D)].num;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_5/../include/vec.h:404:11: warning: use location
       num = pfx->num;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
num_28 = PHI <num_26(3), 0(4)>
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
num_28 = PHI <num_26(3), 0(4)>
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_41 = num_28 + _40;
bb index := 14
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 20

======================================================================
alloc_41 = num_28 + _40;
./benchmarks/binutils/leak_5/../include/vec.h:433:15: warning: use location
         alloc = num + reserve;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_44 = _42;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
_44 = _42;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = _44;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
alloc_10 = _44;
./benchmarks/binutils/leak_5/../include/vec.h:442:12: warning: use location
   unsigned alloc = calculate_allocation (pfx, reserve);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(15), vec_14(20)>
bb index := 21
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 20

======================================================================
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = vec_14;
bb index := 20
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 20

======================================================================
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_14 == 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^
if (vec_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
Cond in fucntion vec_o_reserve basic block 16
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 17
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = (long unsigned int) alloc_10;
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
_1 = (long unsigned int) alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:447:42: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (alloc_10 == 0)
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================
if (alloc_10 == 0)
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
   if (!alloc)
      ^
if (alloc_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:444:6: warning: use location
Cond in fucntion vec_o_reserve basic block 15
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 21
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
alloc_25 = MEM[(const struct vec_prefix *)vec_7(D)].alloc;
./benchmarks/binutils/leak_5/../include/vec.h:403:13: warning: use location
       alloc = pfx->alloc;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_27 = PHI <alloc_25(3), 0(4)>
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_27 = PHI <alloc_25(3), 0(4)>
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
alloc_34 = alloc_27 * 2;
./benchmarks/binutils/leak_5/../include/vec.h:426:15: warning: use location
         alloc = alloc * 2;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
bb index := 13
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location
this stmt have mutiple branch --------
if (alloc_27 <= 15)
./benchmarks/binutils/leak_5/../include/vec.h:424:15: warning: use location
       else if (alloc < 16)
               ^
if (alloc_27 <= 15)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:424:15: warning: use location
Cond in fucntion vec_o_reserve basic block 10
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 11
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (vec_7(D) != 0B)
./benchmarks/binutils/leak_5/../include/vec.h:401:6: warning: use location
   if (pfx)
      ^
if (vec_7(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:401:6: warning: use location
Cond in fucntion vec_o_reserve basic block 2
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 3
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (vec_7(D) == 0B)
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^
if (vec_7(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
Cond in fucntion vec_o_reserve basic block 18
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 19
 ================== possible direct basic block ================= 
from vec_o_reserve basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3adee3ab0
    type <pointer_type 0x7fa3adef60a8
        type <void_type 0x7fa3adeeff18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa3adef60a8>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa3adefbbd0>>
    var <parm_decl 0x7fa3ada11180 vec>
    def_stmt vec_14 = realloc (vec_7(D), _3);
    version 14
    ptr-info 0x7fa3ada08f30>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
num_28 = PHI <num_26(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_22 = VDEF <.MEM_21>
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
./benchmarks/binutils/leak_5/../include/vec.h:450:37: warning: use location
   ((struct vec_prefix *)vec)->alloc = alloc;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_4 = PHI <0B(15), vec_14(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
_17 = vec_14;
./benchmarks/binutils/leak_5/../include/vec.h:454:10: warning: use location
   return vec;
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
# .MEM_23 = VDEF <.MEM_22>
MEM[(struct vec_prefix *)vec_14].num = 0;
./benchmarks/binutils/leak_5/../include/vec.h:452:37: warning: use location
     ((struct vec_prefix *)vec)->num = 0;
                                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_14 == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:448:5: warning: use location
  if (!vec) exit (1);
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_27 = PHI <alloc_25(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: Use after free error!: free location 
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
if (vec_7(D) == 0B)
./benchmarks/binutils/leak_5/../include/vec.h:451:6: warning: use location
   if (!pfx)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

[40;33m =======POP node_fun stack:vec_o_reserve========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa3ada1fc60
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada223f0 bfunc>
    def_stmt bfunc_17 = malloc (24);
    version 17
    ptr-info 0x7fa3ada08cc0>
# .MEM_49 = VDEF <.MEM_48>
bfunc_17 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
btinfo.end = bfunc_17;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:28: warning: use location
  btinfo.begin = btinfo.end = bfunc;
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
btinfo.end = bfunc_17;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:28: warning: use location
  btinfo.begin = btinfo.end = bfunc;
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_4 = btinfo.end;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_4 = btinfo.end;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
_4 = btinfo.end;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:23: warning: use location
  btinfo.begin = btinfo.end = bfunc;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
btinfo.begin = _4;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
btinfo.begin = _4;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
btinfo.begin = _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:15: warning: use location
  btinfo.begin = btinfo.end = bfunc;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
it_23 = btinfo.begin;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
it_23 = btinfo.begin;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
it_23 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:57:5: warning: use location
  it = btinfo.begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_9 = PHI <it_23(2), it_41(3)>
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_9 = PHI <it_23(2), it_41(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_41 = it_9->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_9->next = next_34;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:12: warning: use location
   it->next = next;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_34;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:14: warning: use location
   btinfo.end = next;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
it_25 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:72:5: warning: use location
  it = btinfo.begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
it_32 = it_10->next;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_32 = it_10->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:76:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
_8 = it_10->insn;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = it_10->insn;
./benchmarks/binutils/leak_5/binutils_leak_5.c:74:18: warning: use location
   insn_vec_p = it->insn;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
insn_vec_p_115 = _8;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_115 = _8;
./benchmarks/binutils/leak_5/binutils_leak_5.c:74:14: warning: use location
   insn_vec_p = it->insn;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = insn_vec_p_115;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt is child function---vec_o_reserve-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1fc60
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada223f0 bfunc>
    def_stmt bfunc_17 = malloc (24);
    version 17
    ptr-info 0x7fa3ada08cc0>
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 2 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_116 = _94;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = insn_vec_p_113;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_109 = VDEF <.MEM_108>
MEM[(btrace_insn *)_71].vec[_74] = 55;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(btrace_insn *)_71].vec[_74] = 55;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_100>
_71->num = _75;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71->num = _75;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 >= _73)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
if (_72 >= _73)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_100>
_74 = _71->num;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slot__76 = &_71->vec[_74];
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
slot__76 = &_71->vec[_74];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = slot__76;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = slot__76;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _71->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = insn_vec_p_115;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = insn_vec_p_115;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _78->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = _79 - _80;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _81 >= _82;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = (int) _83;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_87 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^
if (_87 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _87;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _87;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = _87;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _78->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
if (_78 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (it_10 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
  while (it != NULL) {
        ^
if (it_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
it_96 = btinfo.begin;
bb index := 17
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
it_96 = btinfo.begin;
bb index := 17
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 20

======================================================================
it_96 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:5: warning: use location
  it = btp->begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_101>
it_99 = it_97->next;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_101>
it_99 = it_97->next;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_99 = it_97->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
trash_98 = it_97;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
trash_98 = it_97;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
trash_98 = it_97;
./benchmarks/binutils/leak_5/binutils_leak_5.c:31:9: warning: use location
   trash = it;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_3 = bfunc_17->next;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_3 = bfunc_17->next;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
_3 = bfunc_17->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
  bfunc->prev = bfunc->next = NULL;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
bfunc_17->prev = _3;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
bfunc_17->prev = _3;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->prev = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:14: warning: use location
  bfunc->prev = bfunc->next = NULL;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:14: warning: use location
   next->next = NULL;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->prev = it_9;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:14: warning: use location
   next->prev = it;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->insn = _5;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:14: warning: use location
   next->insn = insn_vec_p;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bfunc_17->insn = _42;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bfunc_17->insn = _42;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->insn = _42;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:14: warning: use location
  bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
bfunc_17->next = 0B;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
bfunc_17->next = 0B;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
  bfunc->prev = bfunc->next = NULL;
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
bfunc_17 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
bfunc_17 = malloc (24);
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17 = malloc (24);
./benchmarks/binutils/leak_5/binutils_leak_5.c:51:8: warning: use location
  bfunc = xmalloc(sizeof(struct btrace_function));
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1fc60
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada223f0 bfunc>
    def_stmt bfunc_17 = malloc (24);
    version 17
    ptr-info 0x7fa3ada08cc0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3ada1fc60
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada223f0 bfunc>
    def_stmt bfunc_17 = malloc (24);
    version 17
    ptr-info 0x7fa3ada08cc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
it_9 = PHI <it_23(2), it_41(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
it_9 = PHI <it_23(2), it_41(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
it_9 = PHI <it_23(2), it_41(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_109>
it_32 = it_10->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:76:6: warning: use location
   it = it->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
insn_vec_p_116 = _94;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_71 = insn_vec_p_113;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_109 = VDEF <.MEM_108>
MEM[(btrace_insn *)_71].vec[_74] = 55;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_108 = VDEF <.MEM_100>
_71->num = _75;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_100>
_72 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
if (_72 >= _73)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_100>
_74 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
slot__76 = &_71->vec[_74];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_110 = slot__76;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
# VUSE <.MEM_100>
_73 = _71->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
if (it_10 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
  while (it != NULL) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_45>
it_96 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:5: warning: use location
  it = btp->begin;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_101>
it_99 = it_97->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:6: warning: use location
   it = it->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
trash_98 = it_97;
./benchmarks/binutils/leak_5/binutils_leak_5.c:31:9: warning: use location
   trash = it;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa3ada1fd80
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada22480 next>
    def_stmt next_34 = malloc (24);
    version 34
    ptr-info 0x7fa3ada35048>
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_34;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:14: warning: use location
   btinfo.end = next;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
btinfo.end = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
btinfo.end = next_34;
./benchmarks/binutils/leak_5/binutils_leak_5.c:68:14: warning: use location
   btinfo.end = next;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
btinfo.end = bfunc_17;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
btinfo.end = bfunc_17;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:28: warning: use location
  btinfo.begin = btinfo.end = bfunc;
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
bfunc_17->prev = _3;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
bfunc_17->prev = _3;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->prev = _3;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:14: warning: use location
  bfunc->prev = bfunc->next = NULL;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
next_34->prev = it_9;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->prev = it_9;
./benchmarks/binutils/leak_5/binutils_leak_5.c:65:14: warning: use location
   next->prev = it;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
it_41 = it_9->next;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_41 = it_9->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:69:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
it_9->next = next_34;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_9->next = next_34;
./benchmarks/binutils/leak_5/binutils_leak_5.c:64:12: warning: use location
   it->next = next;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_3 = bfunc_17->next;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_3 = bfunc_17->next;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
_3 = bfunc_17->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:21: warning: use location
  bfunc->prev = bfunc->next = NULL;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
bfunc_17->next = 0B;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
bfunc_17->next = 0B;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:53:28: warning: use location
  bfunc->prev = bfunc->next = NULL;
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bfunc_17->insn = _42;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bfunc_17->insn = _42;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
bfunc_17->insn = _42;
./benchmarks/binutils/leak_5/binutils_leak_5.c:52:14: warning: use location
  bfunc->insn = VEC_alloc (btrace_insn, 10); /* allocation site */
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_64>
next_34->insn = _5;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->insn = _5;
./benchmarks/binutils/leak_5/binutils_leak_5.c:62:14: warning: use location
   next->insn = insn_vec_p;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_4 = btinfo.end;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_4 = btinfo.end;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
_4 = btinfo.end;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:23: warning: use location
  btinfo.begin = btinfo.end = bfunc;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
btinfo.begin = _4;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
btinfo.begin = _4;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
btinfo.begin = _4;
./benchmarks/binutils/leak_5/binutils_leak_5.c:55:15: warning: use location
  btinfo.begin = btinfo.end = bfunc;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
it_23 = btinfo.begin;
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
it_23 = btinfo.begin;
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
it_23 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:57:5: warning: use location
  it = btinfo.begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
it_25 = btinfo.begin;
bb index := 5
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
it_25 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:72:5: warning: use location
  it = btinfo.begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_10 = PHI <it_25(5), it_32(15)>
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
it_32 = it_10->next;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_32 = it_10->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:76:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
_8 = it_10->insn;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = it_10->insn;
./benchmarks/binutils/leak_5/binutils_leak_5.c:74:18: warning: use location
   insn_vec_p = it->insn;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
insn_vec_p_115 = _8;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_115 = _8;
./benchmarks/binutils/leak_5/binutils_leak_5.c:74:14: warning: use location
   insn_vec_p = it->insn;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = insn_vec_p_115;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
this stmt is child function---vec_o_reserve-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1fd80
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada22480 next>
    def_stmt next_34 = malloc (24);
    version 34
    ptr-info 0x7fa3ada35048>
trace fucntion name:vec_o_reserve 
[40;44m =======trace_function_path vec_o_reserve  function_call count: 2 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20(D)>
vec_14 = realloc (vec_7(D), _3);
./benchmarks/binutils/leak_5/../include/vec.h:447:7: warning: use location
   vec = realloc (vec, vec_offset + alloc * elt_size);
       ^
[40;36m ======= node_fun:vec_o_reserve========= [0m
[40;36m ======= find relate stmt with next ========= [0m
[40;36m ======= relate stmt argument:next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_116 = _94;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = insn_vec_p_113;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_109 = VDEF <.MEM_108>
MEM[(btrace_insn *)_71].vec[_74] = 55;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(btrace_insn *)_71].vec[_74] = 55;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_100>
_71->num = _75;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71->num = _75;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 >= _73)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
if (_72 >= _73)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_100>
_74 = _71->num;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slot__76 = &_71->vec[_74];
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
slot__76 = &_71->vec[_74];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_110 = slot__76;
bb index := 15
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = slot__76;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _71->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = insn_vec_p_115;
bb index := 6
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = insn_vec_p_115;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _78->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = _79 - _80;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _81 >= _82;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = (int) _83;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_87 == 0)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^
if (_87 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _87;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = _87;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = _87;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _78->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_78 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
if (_78 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (it_10 != 0B)
bb index := 16
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (it_10 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
  while (it != NULL) {
        ^
if (it_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
it_96 = btinfo.begin;
bb index := 17
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
it_96 = btinfo.begin;
bb index := 17
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 20

======================================================================
it_96 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:5: warning: use location
  it = btp->begin;
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
it_97 = PHI <it_96(17), it_99(18)>
bb index := 19
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_101>
it_99 = it_97->next;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_101>
it_99 = it_97->next;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
it_99 = it_97->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:6: warning: use location
   it = it->next;
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
trash_98 = it_97;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
trash_98 = it_97;
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
trash_98 = it_97;
./benchmarks/binutils/leak_5/binutils_leak_5.c:31:9: warning: use location
   trash = it;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
bb index := 18
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
next_34->next = 0B;
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34->next = 0B;
./benchmarks/binutils/leak_5/binutils_leak_5.c:66:14: warning: use location
   next->next = NULL;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);
bb index := 3
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_56>
next_34 = malloc (24);
bb index := 3
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_34 = malloc (24);
./benchmarks/binutils/leak_5/binutils_leak_5.c:59:8: warning: use location
   next = xmalloc(sizeof(struct btrace_function));
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1fd80
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada22480 next>
    def_stmt next_34 = malloc (24);
    version 34
    ptr-info 0x7fa3ada35048>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3ada1fd80
    type <pointer_type 0x7fa3ada05c78
        type <record_type 0x7fa3ada05d20 btrace_function BLK
            size <integer_cst 0x7fa3adef70a8 constant 192>
            unit size <integer_cst 0x7fa3adef7078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3ada05d20 fields <field_decl 0x7fa3ada075f0 prev> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05c78> chain <type_decl 0x7fa3ada07688 D.3995>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fa3ada22480 next>
    def_stmt next_34 = malloc (24);
    version 34
    ptr-info 0x7fa3ada35048>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
it_10 = PHI <it_25(5), it_32(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_109>
it_32 = it_10->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:76:6: warning: use location
   it = it->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
insn_vec_p_116 = _94;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_71 = insn_vec_p_113;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_109 = VDEF <.MEM_108>
MEM[(btrace_insn *)_71].vec[_74] = 55;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_108 = VDEF <.MEM_100>
_71->num = _75;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_100>
_72 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
if (_72 >= _73)
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_100>
_74 = _71->num;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
slot__76 = &_71->vec[_74];
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_110 = slot__76;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
# VUSE <.MEM_100>
_73 = _71->alloc;
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: use location
 DEF_VEC_I(btrace_insn);
 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
_87 = PHI <_84(9), _86(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
if (it_10 != 0B)
./benchmarks/binutils/leak_5/binutils_leak_5.c:73:8: warning: use location
  while (it != NULL) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_45>
it_96 = btinfo.begin;
./benchmarks/binutils/leak_5/binutils_leak_5.c:28:5: warning: use location
  it = btp->begin;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
   free (trash);
   ^
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: Use after free error!: free location 
it_97 = PHI <it_96(17), it_99(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# VUSE <.MEM_101>
it_99 = it_97->next;
./benchmarks/binutils/leak_5/binutils_leak_5.c:32:6: warning: use location
   it = it->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
trash_98 = it_97;
./benchmarks/binutils/leak_5/binutils_leak_5.c:31:9: warning: use location
   trash = it;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_105 = VDEF <.MEM_45>
_94 = vec_o_reserve (_93, 1, 8, 4);
./benchmarks/binutils/leak_5/binutils_leak_5.c:11:1: warning: Use after free error!: free location 
 DEF_VEC_I(btrace_insn);
 ^
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fa3ad9f9b60
    type <pointer_type 0x7fa3ada0c930
        type <integer_type 0x7fa3ada0c7e0 time_t DI
            size <integer_cst 0x7fa3adedbbe8 constant 64>
            unit size <integer_cst 0x7fa3adedbc00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fa3adeef738 precision 64 min <integer_cst 0x7fa3adedbe70 -9223372036854775808> max <integer_cst 0x7fa3adedbe88 9223372036854775807> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada0c930>>
        unsigned DI size <integer_cst 0x7fa3adedbbe8 64> unit size <integer_cst 0x7fa3adedbc00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fa3ada22630 t type <integer_type 0x7fa3ada0c7e0 time_t>
        addressable DI file ./benchmarks/binutils/leak_5/binutils_leak_5.c line 43 col 9 size <integer_cst 0x7fa3adedbbe8 64> unit size <integer_cst 0x7fa3adedbc00 8>
        align 64 context <function_decl 0x7fa3ada06b00 main>
        chain <var_decl 0x7fa3ada225a0 btinfo type <record_type 0x7fa3ada05dc8 btrace_thread_info>
            TI file ./benchmarks/binutils/leak_5/binutils_leak_5.c line 45 col 28
            size <integer_cst 0x7fa3adedbc30 constant 128>
            unit size <integer_cst 0x7fa3adedbc48 constant 16>
            align 128 context <function_decl 0x7fa3ada06b00 main> chain <var_decl 0x7fa3ada22510 it>>>
    ./benchmarks/binutils/leak_5/binutils_leak_5.c:49:8 start: ./benchmarks/binutils/leak_5/binutils_leak_5.c:49:8 finish: ./benchmarks/binutils/leak_5/binutils_leak_5.c:49:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa3ada1f9d8
    type <integer_type 0x7fa3adeef690 unsigned int public unsigned SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef690 precision 32 min <integer_cst 0x7fa3adedbe58 0> max <integer_cst 0x7fa3adedbe10 4294967295>
        pointer_to_this <pointer_type 0x7fa3adefb888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:2: warning: use location
  srand(time(&t));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1f9d8
    type <integer_type 0x7fa3adeef690 unsigned int public unsigned SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef690 precision 32 min <integer_cst 0x7fa3adedbe58 0> max <integer_cst 0x7fa3adedbe10 4294967295>
        pointer_to_this <pointer_type 0x7fa3adefb888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
bb index := 2
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
bb index := 2
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================
# .MEM_48 = VDEF <.MEM_47>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_5/binutils_leak_5.c:49:2: warning: use location
  srand(time(&t));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1f9d8
    type <integer_type 0x7fa3adeef690 unsigned int public unsigned SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef690 precision 32 min <integer_cst 0x7fa3adedbe58 0> max <integer_cst 0x7fa3adedbe10 4294967295>
        pointer_to_this <pointer_type 0x7fa3adefb888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3ada1f9d8
    type <integer_type 0x7fa3adeef690 unsigned int public unsigned SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef690 precision 32 min <integer_cst 0x7fa3adedbe58 0> max <integer_cst 0x7fa3adedbe10 4294967295>
        pointer_to_this <pointer_type 0x7fa3adefb888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa3ada08cf0 type <integer_type 0x7fa3adeef7e0 long unsigned int> constant 24>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa3adef7000 type <pointer_type 0x7fa3adef60a8> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa3adef7000 type <pointer_type 0x7fa3adef60a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fa3ada1faf8
    type <integer_type 0x7fa3adeef5e8 int public SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef5e8 precision 32 min <integer_cst 0x7fa3adedbde0 -2147483648> max <integer_cst 0x7fa3adedbdf8 2147483647>
        pointer_to_this <pointer_type 0x7fa3adef6a80>>
   
    def_stmt _6 = rand ();
    version 6>
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 % 2;
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:9: warning: use location
  while (__RANDBOOL) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 1)
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:8: warning: use location
  while (__RANDBOOL) {
        ^
if (_7 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:8: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_19>
return _4;
lto1: warning: use location
beacuse in succ := 21 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 21

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_44>
_6 = rand ();
bb index := 4
# VUSE <.MEM_59>
return 0;
<built-in>: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = rand ();
./benchmarks/binutils/leak_5/binutils_leak_5.c:58:9: warning: use location
  while (__RANDBOOL) {
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fa3ada1faf8
    type <integer_type 0x7fa3adeef5e8 int public SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef5e8 precision 32 min <integer_cst 0x7fa3adedbde0 -2147483648> max <integer_cst 0x7fa3adedbdf8 2147483647>
        pointer_to_this <pointer_type 0x7fa3adef6a80>>
   
    def_stmt _6 = rand ();
    version 6>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa3ada1faf8
    type <integer_type 0x7fa3adeef5e8 int public SI
        size <integer_cst 0x7fa3adedbe28 constant 32>
        unit size <integer_cst 0x7fa3adedbe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa3adeef5e8 precision 32 min <integer_cst 0x7fa3adedbde0 -2147483648> max <integer_cst 0x7fa3adedbdf8 2147483647>
        pointer_to_this <pointer_type 0x7fa3adef6a80>>
   
    def_stmt _6 = rand ();
    version 6>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_104 = VDEF <.MEM_101>
free (trash_98);
./benchmarks/binutils/leak_5/binutils_leak_5.c:34:3: warning: use location
   free (trash);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa3ada2d900
    type <pointer_type 0x7fa3ada05bd0
        type <record_type 0x7fa3ada05b28 VEC_btrace_insn BLK
            size <integer_cst 0x7fa3ada08180 constant 96>
            unit size <integer_cst 0x7fa3ada08168 constant 12>
            align 32 symtab 0 alias set -1 canonical type 0x7fa3ada05a80 fields <field_decl 0x7fa3ada072f8 num> context <translation_unit_decl 0x7fa3adee6168 ./benchmarks/binutils/leak_5/binutils_leak_5.c>
            pointer_to_this <pointer_type 0x7fa3ada05bd0> chain <type_decl 0x7fa3ada07390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa3adedbbe8 constant 64>
        unit size <integer_cst 0x7fa3adedbc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa3ada05348>>
   
    def_stmt _93 = insn_vec_p_115;
    version 93
    ptr-info 0x7fa3ada350f0>
_93 = insn_vec_p_115;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:vec_o_reserve=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (vec_7(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [70.00%]:
alloc_25 = MEM[(const struct vec_prefix *)vec_7(D)].alloc;
num_26 = MEM[(const struct vec_prefix *)vec_7(D)].num;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [30.00%]:
if (reserve_9(D) == 0)
  goto <bb 15>; [46.00%]
else
  goto <bb 5>; [54.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [86.20%]:
# alloc_27 = PHI <alloc_25(3), 0(4)>
# num_28 = PHI <num_26(3), 0(4)>
_29 = alloc_27 - num_28;
_30 = ABS_EXPR <reserve_9(D)>;
_31 = (unsigned int) _30;
if (_29 >= _31)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [0.03%]:
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [86.17%]:
if (reserve_9(D) < 0)
  goto <bb 8>; [32.39%]
else
  goto <bb 9>; [67.61%]

=======is loop:0=========

 bb index 8 
<bb 8> [27.91%]:
_32 = (unsigned int) reserve_9(D);
alloc_33 = num_28 - _32;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [58.26%]:
if (alloc_27 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [29.13%]:
if (alloc_27 <= 15)
  goto <bb 11>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [14.56%]:
alloc_34 = alloc_27 * 2;
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [14.56%]:
_35 = alloc_27 * 3;
alloc_36 = _35 / 2;

=======is loop:0=========

 bb index 13 
<bb 13> [58.26%]:
# alloc_39 = PHI <4(9), alloc_34(11), alloc_36(12)>
_37 = (unsigned int) reserve_9(D);
_38 = num_28 + _37;
if (_38 > alloc_39)
  goto <bb 14>; [54.00%]
else
  goto <bb 15>; [46.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [31.46%]:
_40 = (unsigned int) reserve_9(D);
alloc_41 = num_28 + _40;

=======is loop:0=========

 bb index 15 
<bb 15> [99.97%]:
# _42 = PHI <0(4), alloc_33(8), alloc_39(13), alloc_41(14)>
_44 = _42;
alloc_10 = _44;
if (alloc_10 == 0)
  goto <bb 21>; [16.72%]
else
  goto <bb 16>; [83.28%]

=======is loop:0=========

 bb index 16 
<bb 16> [83.25%]:
_1 = (long unsigned int) alloc_10;
_2 = _1 * elt_size_11(D);
_3 = _2 + vec_offset_12(D);
vec_14 = realloc (vec_7(D), _3);
if (vec_14 == 0B)
  goto <bb 17>; [0.04%]
else
  goto <bb 18>; [99.96%]

=======is loop:0=========

 bb index 17 
<bb 17> [0.03%]:
exit (1);

=======is loop:0=========

 bb index 18 
<bb 18> [83.22%]:
MEM[(struct vec_prefix *)vec_14].alloc = alloc_10;
if (vec_7(D) == 0B)
  goto <bb 19>; [30.00%]
else
  goto <bb 20>; [70.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [24.97%]:
MEM[(struct vec_prefix *)vec_14].num = 0;

=======is loop:0=========

 bb index 20 
<bb 20> [83.22%]:
_17 = vec_14;

=======is loop:0=========

 bb index 21 
<bb 21> [99.93%]:
# _4 = PHI <0B(15), vec_14(20)>
return _4;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
bfunc_17 = malloc (24);
_42 = vec_o_reserve (0B, -10, 8, 4);
bfunc_17->insn = _42;
bfunc_17->next = 0B;
_3 = bfunc_17->next;
bfunc_17->prev = _3;
btinfo.end = bfunc_17;
_4 = btinfo.end;
btinfo.begin = _4;
it_23 = btinfo.begin;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
next_34 = malloc (24);
_43 = vec_o_reserve (0B, -10, 8, 4);
insn_vec_p_117 = _43;
_5 = insn_vec_p_117;
next_34->insn = _5;
it_9->next = next_34;
next_34->prev = it_9;
next_34->next = 0B;
btinfo.end = next_34;
it_41 = it_9->next;

=======is loop:1=========

 bb index 4 
<bb 4> [100.00%]:
# it_9 = PHI <it_23(2), it_41(3)>
_6 = rand ();
_7 = _6 % 2;
if (_7 == 1)
  goto <bb 3>; [85.00%]
else
  goto <bb 5>; [15.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [15.00%]:
it_25 = btinfo.begin;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [84.62%]:
_8 = it_10->insn;
insn_vec_p_115 = _8;
_77 = 1;
_78 = insn_vec_p_115;
if (_77 < 0)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.03%]:
exit (1);

=======is loop:1=========

 bb index 8 
<bb 8> [84.58%]:
if (_78 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [59.21%]:
_79 = _78->alloc;
_80 = _78->num;
_81 = _79 - _80;
_82 = (unsigned int) _77;
_83 = _81 >= _82;
_84 = (int) _83;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [25.37%]:
_85 = 0;
_86 = (int) _85;

=======is loop:1=========

 bb index 11 
<bb 11> [84.58%]:
# _87 = PHI <_84(9), _86(10)>
_88 = _87;
_89 = _87;
_90 = _87;
_91 = _87 == 0;
extend_92 = (int) _91;
if (_87 == 0)
  goto <bb 12>; [36.64%]
else
  goto <bb 13>; [63.36%]

=======is loop:1=========

 bb index 12 
<bb 12> [30.99%]:
_93 = insn_vec_p_115;
_94 = vec_o_reserve (_93, 1, 8, 4);
insn_vec_p_116 = _94;

=======is loop:1=========

 bb index 13 
<bb 13> [84.58%]:
# insn_vec_p_113 = PHI <insn_vec_p_115(11), insn_vec_p_116(12)>
_95 = extend_92;
_107 = extend_92;
_71 = insn_vec_p_113;
_72 = _71->num;
_73 = _71->alloc;
if (_72 >= _73)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [0.03%]:
exit (1);

=======is loop:1=========

 bb index 15 
<bb 15> [84.55%]:
_74 = _71->num;
_75 = _74 + 1;
_71->num = _75;
slot__76 = &_71->vec[_74];
MEM[(btrace_insn *)_71].vec[_74] = 55;
_110 = slot__76;
it_32 = it_10->next;

=======is loop:1=========

 bb index 16 
<bb 16> [99.55%]:
# it_10 = PHI <it_25(5), it_32(15)>
if (it_10 != 0B)
  goto <bb 6>; [85.00%]
else
  goto <bb 17>; [15.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [14.93%]:
it_96 = btinfo.begin;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [84.62%]:
trash_98 = it_97;
it_99 = it_97->next;
free (trash_98);

=======is loop:1=========

 bb index 19 
<bb 19> [99.55%]:
# it_97 = PHI <it_96(17), it_99(18)>
if (it_97 != 0B)
  goto <bb 18>; [85.00%]
else
  goto <bb 20>; [15.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [14.93%]:
btinfo.begin = 0B;
btinfo.end = 0B;
t ={v} {CLOBBER};
btinfo ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 5 [0m
[40;34m    used_stmt array stack totalsize of : 3632 [0m
[40;34m    collect time: : 0.000498 s [0m
[40;34m    algorithm time: 0.029130 s [0m
[40;34m    gimple stmt count : : 112 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
