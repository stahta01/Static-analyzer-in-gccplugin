In file included from ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:6:0:
./benchmarks/binutils/use_after_free_1/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/use_after_free_1/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/use_after_free_1/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/use_after_free_1/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c: In function â€˜riscv_add_subsetâ€™:
./benchmarks/binutils/use_after_free_1/../include/common.h:22:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: note: in expansion of macro â€˜xstrdupâ€™
     s->name = xstrdup (subset);
               ^~~~~~~
./benchmarks/binutils/use_after_free_1/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: note: in expansion of macro â€˜xstrdupâ€™
     s->name = xstrdup (subset);
               ^~~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c: In function â€˜riscv_set_archâ€™:
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:60:7: warning: implicit declaration of function â€˜strncmpâ€™ [-Wimplicit-function-declaration]
   if (strncmp (p, "rv32", 4) == 0)
       ^~~~~~~
In file included from ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:6:0:
./benchmarks/binutils/use_after_free_1/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:95:19: note: in expansion of macro â€˜xstrdupâ€™
    char *subset = xstrdup (p), *q = subset;  /* allocation site */
                   ^~~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:107:9: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
    p += strlen (subset);
         ^~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:107:9: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:107:9: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: implicit declaration of function â€˜strchrâ€™ [-Wimplicit-function-declaration]
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: incompatible implicit declaration of built-in function â€˜strchrâ€™
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strchrâ€™
In file included from ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:6:0:
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:12: warning: format â€˜%sâ€™ expects argument of type â€˜char *â€™, but argument 2 has type â€˜intâ€™ [-Wformat=]
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
            ^                                         ~~
./benchmarks/binutils/use_after_free_1/../include/common.h:15:30: note: in definition of macro â€˜fatalâ€™
 #define fatal(a, b) { printf(a, b); exit(1); }
                              ^
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: note: in expansion of macro â€˜as_fatalâ€™
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^~~~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:12: warning: format â€˜%câ€™ expects a matching â€˜intâ€™ argument [-Wformat=]
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
            ^
./benchmarks/binutils/use_after_free_1/../include/common.h:15:30: note: in definition of macro â€˜fatalâ€™
 #define fatal(a, b) { printf(a, b); exit(1); }
                              ^
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: note: in expansion of macro â€˜as_fatalâ€™
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^~~~~~~~
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c: In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:139:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 17
succs:= 16
--------GIMPLE Cond -------
succs:= 18
succs:= 18
succs:= 14
--------GIMPLE Cond -------
succs:= 21
succs:= 21
--------GIMPLE Cond -------
succs:= 23
succs:= 23
--------GIMPLE Cond -------
succs:= 25
succs:= 25
--------GIMPLE Cond -------
succs:= 29
--------GIMPLE Cond -------
succs:= 30
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = malloc (16);
# .MEM_10 = VDEF <.MEM_9>
_1 = strdup (subset_4(D));
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = time (0B);
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
# VUSE <.MEM_9>
_11 = strncmp ("rv32ix_x", "rv32", 4);
# VUSE <.MEM_9>
_13 = strncmp ("rv32ix_x", "rv64", 4);
# .MEM_64 = VDEF <.MEM_9>
_15 = __printf_chk (1, "-march=%s: ISA string must begin with rv32 or rv64", "rv32ix_x");
# .MEM_66 = VDEF <.MEM_61>
subset[0] = _21;
# .MEM_67 = VDEF <.MEM_66>
subset[1] = 0;
# .MEM_68 = VDEF <.MEM_67>
riscv_add_subset (&subset);
# .MEM_86 = VDEF <.MEM_9>
_24 = __printf_chk (1, "-march=%s: first ISA subset must be `i\' or `g\'", "rv32ix_x");
# .MEM_80 = VDEF <.MEM_63>
subset_27 = strdup (p_25);
# .MEM_84 = VDEF <.MEM_81>
_34 = __printf_chk (1, "-march=%s: only one non-standard extension is supported", extension_33);
# .MEM_82 = VDEF <.MEM_81>
riscv_add_subset (subset_27);
# VUSE <.MEM_82>
_36 = strlen (subset_27);
# VUSE <.MEM_63>
all_subsets_43 = strchr (all_subsets_42, _41);
# .MEM_76 = VDEF <.MEM_63>
subset[0] = _44;
# .MEM_77 = VDEF <.MEM_76>
subset[1] = 0;
# .MEM_78 = VDEF <.MEM_77>
riscv_add_subset (&subset);
# .MEM_72 = VDEF <.MEM_63>
subset[0] = _48;
# .MEM_73 = VDEF <.MEM_72>
subset[1] = 0;
# .MEM_74 = VDEF <.MEM_73>
riscv_add_subset (&subset);
# .MEM_70 = VDEF <.MEM_63>
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);
# .MEM_9 = VDEF <.MEM_5>
_3 = rand ();
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:riscv_add_subset========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path riscv_add_subset  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:riscv_add_subset========= [0m
[40;42m =======start_check_funciton:riscv_add_subset========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
riscv_subsets = s_7;
In function â€˜riscv_add_subsetâ€™:
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
     riscv_subsets = s;
                   ^
riscv_subsets = s_7;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
_2 = riscv_subsets;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
     s->next = riscv_subsets;
             ^
s_7->next = _2;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
s_7 = malloc (16);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:47:26: warning: use location
     struct riscv_subset *s = xmalloc (sizeof *s);
                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>
# .MEM_10 = VDEF <.MEM_9>
_1 = strdup (subset_4(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (subset_4(D));
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: warning: use location
     s->name = xstrdup (subset);
               ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
c_5 = *subset_4(D);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:46:10: warning: use location
     char c = *subset;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f5b14bfdcf0 type <integer_type 0x7f5b150e47e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (subset_4(D));
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: warning: use location
     s->name = xstrdup (subset);
               ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
riscv_subsets = s_7;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
     riscv_subsets = s;
                   ^
_2 = riscv_subsets;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
     s->next = riscv_subsets;
             ^
s_7->next = _2;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
c_5 = *subset_4(D);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:46:10: warning: use location
     char c = *subset;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:riscv_add_subset========= [0m
[40;44m =======node_fun:getopt========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path getopt  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getopt========= [0m
[40;42m =======start_check_funciton:getopt========= [0m
[40;33m =======POP node_fun stack:getopt========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:riscv_add_subset========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path riscv_add_subset  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:riscv_add_subset========= [0m
[40;42m =======start_check_funciton:riscv_add_subset========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>
# .MEM_9 = VDEF <.MEM_8(D)>
s_7 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
riscv_subsets = s_7;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
     riscv_subsets = s;
                   ^
riscv_subsets = s_7;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
_2 = riscv_subsets;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
     s->next = riscv_subsets;
             ^
s_7->next = _2;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
s_7 = malloc (16);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:47:26: warning: use location
     struct riscv_subset *s = xmalloc (sizeof *s);
                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d88b8
    type <pointer_type 0x7f5b14bfa5e8
        type <record_type 0x7f5b14bfa690 riscv_subset TI
            size <integer_cst 0x7f5b150d0c30 constant 128>
            unit size <integer_cst 0x7f5b150d0c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f5b14bfa690 fields <field_decl 0x7f5b14bfc2f8 name> context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
            pointer_to_this <pointer_type 0x7f5b14bfa5e8> chain <type_decl 0x7f5b14bfc390 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f5b14c04b28>>
    var <var_decl 0x7f5b15e65bd0 s>
    def_stmt s_7 = malloc (16);
    version 7
    ptr-info 0x7f5b14bfdfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>
# .MEM_10 = VDEF <.MEM_9>
_1 = strdup (subset_4(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (subset_4(D));
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: warning: use location
     s->name = xstrdup (subset);
               ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
c_5 = *subset_4(D);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:46:10: warning: use location
     char c = *subset;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d8798
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
   
    def_stmt _1 = strdup (subset_4(D));
    version 1
    ptr-info 0x7f5b14bfdf90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f5b14bfdcf0 type <integer_type 0x7f5b150e47e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (subset_4(D));
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:15: warning: use location
     s->name = xstrdup (subset);
               ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
s_7->name = _1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:48:13: warning: use location
     s->name = xstrdup (subset);
             ^
riscv_subsets = s_7;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:50:19: warning: use location
     riscv_subsets = s;
                   ^
_2 = riscv_subsets;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
     s->next = riscv_subsets;
             ^
s_7->next = _2;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:49:13: warning: use location
c_5 = *subset_4(D);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:46:10: warning: use location
     char c = *subset;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d8828
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f5b14c05480 subset>
    def_stmt GIMPLE_NOP
    version 4
    ptr-info 0x7f5b14bfdfc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:riscv_add_subset========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
# .MEM_80 = VDEF <.MEM_63>
subset_27 = strdup (p_25);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:10: warning: use location
   while (*p)
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
   while (*p)
         ^
if (_53 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_50 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^
_51 = (int) _50;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset[0] = _48;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:15: warning: use location
    const char subset[] = {*p, 0};
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:16: warning: use location
       else if (*p == 'q')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_47 == 113)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
       else if (*p == 'q')
               ^
if (_47 == 113)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_46 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:117:5: warning: use location
    p++;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset[0] = _44;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:15: warning: use location
    const char subset[] = {*p, 0};
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:52: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = (int) _40;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
if (all_subsets_43 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_39 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:111:3: warning: use location
  p++;
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:16: warning: use location
       else if (*p == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 == 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
       else if (*p == '_')
               ^
if (_38 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset_27 = strdup (p_25);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:95:10: warning: use location
    char *subset = xstrdup (p), *q = subset;  /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strlen (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:107:9: warning: use location
    p += strlen (subset);
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_29 = PHI <subset_27(15), q_30(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_30 = q_29 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
    while (*++q != '\0' && *q != '_')
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*q_30 = 0;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:99:7: warning: use location
    *q = '\0';
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = *q_30;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:27: warning: use location
    while (*++q != '\0' && *q != '_')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_32 != 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:24: warning: use location
    while (*++q != '\0' && *q != '_')
                        ^
if (_32 != 95)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:24: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = *q_30;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:11: warning: use location
    while (*++q != '\0' && *q != '_')
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_31 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
    while (*++q != '\0' && *q != '_')
          ^
if (_31 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
    free (subset);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
riscv_add_subset (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:106:4: warning: use location
    riscv_add_subset (subset);
    ^
this stmt is child function---riscv_add_subset-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:riscv_add_subset 
[40;44m =======trace_function_path riscv_add_subset  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_35 = subset_27;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:105:14: warning: use location
    extension = subset;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_33 = PHI <extension_55(9), extension_58(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_34 = __printf_chk (1, "-march=%s: only one non-standard extension is supported", extension_33);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_28 = subset_27;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:95:33: warning: use location
    char *subset = xstrdup (p), *q = subset;  /* allocation site */
                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_26 = *p_25;
bb index := 14
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_26 = *p_25;
bb index := 14
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:11: warning: use location
       if (*p == 'x')
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_26 == 120)
bb index := 14
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_26 == 120)
bb index := 14
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 120)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:10: warning: use location
       if (*p == 'x')
          ^
if (_26 == 120)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b14c1eaf8
    type <pointer_type 0x7f5b14bfa7e0
        type <integer_type 0x7f5b14bfa738 char public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfa7e0>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f5b150db168 ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c>
        pointer_to_this <pointer_type 0x7f5b14bfa888>>
    var <var_decl 0x7f5b14c1f120 subset>
    def_stmt subset_27 = strdup (p_25);
    version 27
    ptr-info 0x7f5b14c270c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
    free (subset);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# VUSE <.MEM_63>
_53 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:10: warning: use location
   while (*p)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_53 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:10: warning: use location
   while (*p)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_53 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
   while (*p)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_53 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
   while (*p)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_50 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_50 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_51 = (int) _50;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_51 = (int) _50;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_70 = VDEF <.MEM_63>
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# .MEM_70 = VDEF <.MEM_63>
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# VUSE <.MEM_63>
_48 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_48 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_72 = VDEF <.MEM_63>
subset[0] = _48;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_72 = VDEF <.MEM_63>
subset[0] = _48;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_47 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:16: warning: use location
       else if (*p == 'q')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_47 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:16: warning: use location
       else if (*p == 'q')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_47 == 113)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
       else if (*p == 'q')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_47 == 113)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
       else if (*p == 'q')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_46 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:117:5: warning: use location
    p++;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_46 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:117:5: warning: use location
    p++;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# VUSE <.MEM_63>
_44 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_44 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_76 = VDEF <.MEM_63>
subset[0] = _44;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_76 = VDEF <.MEM_63>
subset[0] = _44;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_40 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:52: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_40 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:52: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_41 = (int) _40;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_41 = (int) _40;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_39 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:111:3: warning: use location
  p++;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_39 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:111:3: warning: use location
  p++;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_38 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:16: warning: use location
       else if (*p == '_')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_38 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:16: warning: use location
       else if (*p == '_')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_38 == 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
       else if (*p == '_')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_38 == 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
       else if (*p == '_')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
q_29 = PHI <subset_27(15), q_30(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
q_29 = PHI <subset_27(15), q_30(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_33 = PHI <extension_55(9), extension_58(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_33 = PHI <extension_55(9), extension_58(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f5b150ec000 type <pointer_type 0x7f5b150eb0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8ca8
    type <integer_type 0x7f5b150e4690 unsigned int public unsigned SI
        size <integer_cst 0x7f5b150d0e28 constant 32>
        unit size <integer_cst 0x7f5b150d0e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f5b150e4690 precision 32 min <integer_cst 0x7f5b150d0e58 0> max <integer_cst 0x7f5b150d0e10 4294967295>
        pointer_to_this <pointer_type 0x7f5b14c039d8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
bb index := 2
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 31

======================================================================
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:139:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8ca8
    type <integer_type 0x7f5b150e4690 unsigned int public unsigned SI
        size <integer_cst 0x7f5b150d0e28 constant 32>
        unit size <integer_cst 0x7f5b150d0e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f5b150e4690 precision 32 min <integer_cst 0x7f5b150d0e58 0> max <integer_cst 0x7f5b150d0e10 4294967295>
        pointer_to_this <pointer_type 0x7f5b14c039d8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
bb index := 2
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 31

======================================================================
# .MEM_8 = VDEF <.MEM_7>
srand (_2);
srand (_2);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:139:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f5b150d8ca8
    type <integer_type 0x7f5b150e4690 unsigned int public unsigned SI
        size <integer_cst 0x7f5b150d0e28 constant 32>
        unit size <integer_cst 0x7f5b150d0e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f5b150e4690 precision 32 min <integer_cst 0x7f5b150d0e58 0> max <integer_cst 0x7f5b150d0e10 4294967295>
        pointer_to_this <pointer_type 0x7f5b14c039d8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b150d8ca8
    type <integer_type 0x7f5b150e4690 unsigned int public unsigned SI
        size <integer_cst 0x7f5b150d0e28 constant 32>
        unit size <integer_cst 0x7f5b150d0e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f5b150e4690 precision 32 min <integer_cst 0x7f5b150d0e58 0> max <integer_cst 0x7f5b150d0e10 4294967295>
        pointer_to_this <pointer_type 0x7f5b14c039d8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
    free (subset);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f5b14c1c100
    type <pointer_type 0x7f5b14c03348
        type <array_type 0x7f5b14c032a0 type <integer_type 0x7f5b14bfa738 char>
            BLK
            size <integer_cst 0x7f5b14bfd1e0 constant 72>
            unit size <integer_cst 0x7f5b14bfd1c8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f5b14c031f8>
            pointer_to_this <pointer_type 0x7f5b14c03348>>
        unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f5b14beeb40 type <array_type 0x7f5b14c032a0>
        readonly constant static "rv32ix_x\000">
    ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18 start: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18 finish: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f5b14c1c1c0
    type <pointer_type 0x7f5b14c03348
        type <array_type 0x7f5b14c032a0 type <integer_type 0x7f5b14bfa738 char>
            BLK
            size <integer_cst 0x7f5b14bfd1e0 constant 72>
            unit size <integer_cst 0x7f5b14bfd1c8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f5b14c031f8>
            pointer_to_this <pointer_type 0x7f5b14c03348>>
        unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f5b14beeb40 type <array_type 0x7f5b14c032a0>
        readonly constant static "rv32ix_x\000">
    ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18 start: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18 finish: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:142:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f5b150d0f90 type <integer_type 0x7f5b150e45e8 int> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7f5b14c1c360
    type <pointer_type 0x7f5b14c040a8
        type <array_type 0x7f5b14c03690 type <integer_type 0x7f5b14bfa9d8 char>
            HI
            size <integer_cst 0x7f5b150d0d98 constant 16>
            unit size <integer_cst 0x7f5b150d0db0 constant 2>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f5b14c03540>
            pointer_to_this <pointer_type 0x7f5b14c040a8>>
        unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly
    arg 0 <var_decl 0x7f5b14c1f240 subset type <array_type 0x7f5b14c03690>
        readonly addressable used HI file ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c line 82 col 17 size <integer_cst 0x7f5b150d0d98 16> unit size <integer_cst 0x7f5b150d0db0 2>
        align 8 context <function_decl 0x7f5b14bfbb00 main> abstract_origin <var_decl 0x7f5b14c15360 subset>>
    ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:83:24 start: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:83:24 finish: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:83:24>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
p_25 = PHI <p_56(9), p_59(28)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_53 = *p_25;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:10: warning: use location
   while (*p)
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 != 0)
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
   while (*p)
         ^
if (_53 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_50 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^
_51 = (int) _50;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset[0] = _48;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:15: warning: use location
    const char subset[] = {*p, 0};
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:16: warning: use location
       else if (*p == 'q')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_47 == 113)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
       else if (*p == 'q')
               ^
if (_47 == 113)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
Cond in fucntion main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_46 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:117:5: warning: use location
    p++;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = PHI <p_56(9), p_59(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = PHI <p_56(9), p_59(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = PHI <p_56(9), p_59(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = PHI <p_56(9), p_59(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_25 = PHI <p_56(9), p_59(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset[0] = _44;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:15: warning: use location
    const char subset[] = {*p, 0};
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:52: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = (int) _40;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
if (all_subsets_43 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_39 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:111:3: warning: use location
  p++;
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:16: warning: use location
       else if (*p == '_')
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 == 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
       else if (*p == '_')
               ^
if (_38 == 95)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
Cond in fucntion main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
subset_27 = strdup (p_25);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:95:10: warning: use location
    char *subset = xstrdup (p), *q = subset;  /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = strlen (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:107:9: warning: use location
    p += strlen (subset);
         ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_29 = PHI <subset_27(15), q_30(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_30 = q_29 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
    while (*++q != '\0' && *q != '_')
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*q_30 = 0;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:99:7: warning: use location
    *q = '\0';
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = *q_30;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:27: warning: use location
    while (*++q != '\0' && *q != '_')
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_32 != 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:24: warning: use location
    while (*++q != '\0' && *q != '_')
                        ^
if (_32 != 95)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:24: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = *q_30;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:11: warning: use location
    while (*++q != '\0' && *q != '_')
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_31 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
    while (*++q != '\0' && *q != '_')
          ^
if (_31 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:97:10: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
    free (subset);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
riscv_add_subset (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:106:4: warning: use location
    riscv_add_subset (subset);
    ^
this stmt is child function---riscv_add_subset-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:riscv_add_subset 
[40;44m =======trace_function_path riscv_add_subset  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:riscv_add_subset========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_35 = subset_27;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:105:14: warning: use location
    extension = subset;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
extension_33 = PHI <extension_55(9), extension_58(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
extension_33 = PHI <extension_55(9), extension_58(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----
_34 = __printf_chk (1, "-march=%s: only one non-standard extension is supported", extension_33);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_28 = subset_27;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:95:33: warning: use location
    char *subset = xstrdup (p), *q = subset;  /* allocation site */
                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_26 = *p_25;
bb index := 14
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_26 = *p_25;
bb index := 14
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:11: warning: use location
       if (*p == 'x')
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_26 == 120)
bb index := 14
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_26 == 120)
bb index := 14
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_26 == 120)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:10: warning: use location
       if (*p == 'x')
          ^
if (_26 == 120)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:93:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b14c1ea68
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15f30 p>
    def_stmt p_25 = PHI <p_56(9), p_59(28)>
    version 25
    ptr-info 0x7f5b14c270a8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_53 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:10: warning: use location
   while (*p)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_53 != 0)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:91:9: warning: use location
   while (*p)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_50 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_51 = (int) _50;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:126:2: warning: use location
  as_fatal ("-march=%s: unsupported ISA subset `%c'", *p);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_70 = VDEF <.MEM_63>
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# VUSE <.MEM_63>
_48 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_72 = VDEF <.MEM_63>
subset[0] = _48;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:121:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_47 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:16: warning: use location
       else if (*p == 'q')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_47 == 113)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:119:15: warning: use location
       else if (*p == 'q')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_46 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:117:5: warning: use location
    p++;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
p_25 = PHI <p_56(9), p_59(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
# VUSE <.MEM_63>
_44 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:27: warning: use location
    const char subset[] = {*p, 0};
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# .MEM_76 = VDEF <.MEM_63>
subset[0] = _44;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:114:15: warning: use location
    const char subset[] = {*p, 0};
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_40 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:52: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
_41 = (int) _40;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:31: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
p_39 = p_25 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:111:3: warning: use location
  p++;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
# VUSE <.MEM_63>
_38 = *p_25;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:16: warning: use location
       else if (*p == '_')
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
if (_38 == 95)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:110:15: warning: use location
       else if (*p == '_')
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
    free (subset);
    ^
q_29 = PHI <subset_27(15), q_30(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_82>
free (subset_27);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:108:4: warning: Use after free error!: free location 
extension_33 = PHI <extension_55(9), extension_58(28)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f5b14c1ef30
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15e10 all_subsets>
    def_stmt all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
    version 42
    ptr-info 0x7f5b14c27180>
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_43 = strchr (all_subsets_42, _41);
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f5b14c1ef30
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15e10 all_subsets>
    def_stmt all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
    version 42
    ptr-info 0x7f5b14c27180>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_5(D)>
return _2;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 31 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 31

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
all_subsets_45 = all_subsets_43 + 1;
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:116:15: warning: use location
    all_subsets++;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (all_subsets_43 != 0B)
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
       else if ((all_subsets = strchr (all_subsets, *p)) != NULL)
               ^
if (all_subsets_43 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:112:15: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5b14c1ef30
    type <pointer_type 0x7f5b14bfaa80
        type <integer_type 0x7f5b14bfa9d8 char readonly public string-flag QI
            size <integer_cst 0x7f5b150d0cd8 constant 8>
            unit size <integer_cst 0x7f5b150d0cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f5b150e43f0 precision 8 min <integer_cst 0x7f5b14bfd180 -128> max <integer_cst 0x7f5b14bfd168 127>
            pointer_to_this <pointer_type 0x7f5b14bfaa80>>
        public unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f5b14c15e10 all_subsets>
    def_stmt all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
    version 42
    ptr-info 0x7f5b14c27180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f5b14c1c6c0
    type <pointer_type 0x7f5b14c040a8
        type <array_type 0x7f5b14c03690 type <integer_type 0x7f5b14bfa9d8 char>
            HI
            size <integer_cst 0x7f5b150d0d98 constant 16>
            unit size <integer_cst 0x7f5b150d0db0 constant 2>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f5b14c03540>
            pointer_to_this <pointer_type 0x7f5b14c040a8>>
        unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly
    arg 0 <var_decl 0x7f5b14c1f090 subset type <array_type 0x7f5b14c03690>
        readonly addressable used HI file ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c line 114 col 15 size <integer_cst 0x7f5b150d0d98 16> unit size <integer_cst 0x7f5b150d0db0 2>
        align 8 context <function_decl 0x7f5b14bfbb00 main> abstract_origin <var_decl 0x7f5b14c15510 subset>>
    ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:115:22 start: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:115:22 finish: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:115:22>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f5b14c1c740
    type <pointer_type 0x7f5b14c040a8
        type <array_type 0x7f5b14c03690 type <integer_type 0x7f5b14bfa9d8 char>
            HI
            size <integer_cst 0x7f5b150d0d98 constant 16>
            unit size <integer_cst 0x7f5b150d0db0 constant 2>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f5b14c03540>
            pointer_to_this <pointer_type 0x7f5b14c040a8>>
        unsigned DI
        size <integer_cst 0x7f5b150d0be8 constant 64>
        unit size <integer_cst 0x7f5b150d0c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly
    arg 0 <var_decl 0x7f5b14c1f000 subset type <array_type 0x7f5b14c03690>
        readonly addressable used HI file ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c line 121 col 15 size <integer_cst 0x7f5b150d0d98 16> unit size <integer_cst 0x7f5b150d0db0 2>
        align 8 context <function_decl 0x7f5b14bfbb00 main> abstract_origin <var_decl 0x7f5b14c155a0 subset>>
    ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:122:22 start: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:122:22 finish: ./benchmarks/binutils/use_after_free_1/binutils_uaf_1.c:122:22>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5b150d8cf0
    type <integer_type 0x7f5b150e45e8 int public SI
        size <integer_cst 0x7f5b150d0e28 constant 32>
        unit size <integer_cst 0x7f5b150d0e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f5b150e45e8 precision 32 min <integer_cst 0x7f5b150d0de0 -2147483648> max <integer_cst 0x7f5b150d0df8 2147483647>
        pointer_to_this <pointer_type 0x7f5b150eba80>>
   
    def_stmt _3 = rand ();
    version 3>
# .MEM_9 = VDEF <.MEM_5>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:riscv_add_subset=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
c_5 = *subset_4(D);
s_7 = malloc (16);
_1 = strdup (subset_4(D));
s_7->name = _1;
_2 = riscv_subsets;
s_7->next = _2;
riscv_subsets = s_7;
return;

=======Mapping node_fun:getopt=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = *optargv_4(D);
if (_1 == 48)
  goto <bb 4>; [30.50%]
else
  goto <bb 3>; [69.50%]

=======is loop:0=========

 bb index 3 
<bb 3> [69.50%]:

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _2 = PHI <0(2), 1(3)>
return _2;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [0.90%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [5.02%]:
_11 = strncmp ("rv32ix_x", "rv32", 4);
if (_11 == 0)
  goto <bb 4>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [2.51%]:
p_12 = "rv32ix_x" + 4;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [2.51%]:
_13 = strncmp ("rv32ix_x", "rv64", 4);
if (_13 == 0)
  goto <bb 6>; [99.96%]
else
  goto <bb 7>; [0.04%]

=======is loop:1=========

 bb index 6 
<bb 6> [2.51%]:
p_14 = "rv32ix_x" + 4;
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.00%]:
_15 = __printf_chk (1, "-march=%s: ISA string must begin with rv32 or rv64", "rv32ix_x");
exit (1);

=======is loop:1=========

 bb index 8 
<bb 8> [5.01%]:
# p_16 = PHI <p_12(4), p_14(6)>
_17 = *p_16;
_18 = (int) _17;
switch (_17) <default: <L2> [0.04%], case 103: <L1> [50.00%], case 105: <L0> [50.00%]>

=======is loop:1=========

 bb index 9 
# all_subsets_54 = PHI <"imafdc"(8), all_subsets_20(12)>
# extension_55 = PHI <0B(8), 0B(12)>
# p_56 = PHI <p_16(8), p_19(12)>
<L0> [5.01%]:
goto <bb 29>; [100.00%]

=======is loop:1=========

 bb index 10 
<L1> [2.51%]:
p_19 = p_16 + 1;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [14.21%]:
_21 = *all_subsets_20;
subset[0] = _21;
subset[1] = 0;
riscv_add_subset (&subset);
subset ={v} {CLOBBER};
all_subsets_22 = all_subsets_20 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [16.72%]:
# all_subsets_20 = PHI <"imafdc"(10), all_subsets_22(11)>
_23 = *all_subsets_20;
if (_23 != 99)
  goto <bb 11>; [85.00%]
else
  goto <bb 9> (<L0>); [15.00%]

=======is loop:0=========

 bb index 13 
<L2> [0.00%]:
_24 = __printf_chk (1, "-march=%s: first ISA subset must be `i\' or `g\'", "rv32ix_x");
exit (1);

=======is loop:1=========

 bb index 14 
<bb 14> [95.00%]:
_26 = *p_25;
if (_26 == 120)
  goto <bb 15>; [11.56%]
else
  goto <bb 21>; [88.44%]

=======is loop:1=========

 bb index 15 
<bb 15> [10.98%]:
subset_27 = strdup (p_25);
q_28 = subset_27;

=======is loop:1=========

 bb index 16 
<bb 16> [76.07%]:
# q_29 = PHI <subset_27(15), q_30(17)>
q_30 = q_29 + 1;
_31 = *q_30;
if (_31 != 0)
  goto <bb 17>; [92.50%]
else
  goto <bb 18>; [7.50%]

=======is loop:1=========

 bb index 17 
<bb 17> [70.36%]:
_32 = *q_30;
if (_32 != 95)
  goto <bb 16>; [92.50%]
else
  goto <bb 18>; [7.50%]

=======is loop:1=========

 bb index 18 
<bb 18> [10.98%]:
*q_30 = 0;
if (extension_33 != 0B)
  goto <bb 19>; [0.04%]
else
  goto <bb 20>; [99.96%]

=======is loop:0=========

 bb index 19 
<bb 19> [0.00%]:
_34 = __printf_chk (1, "-march=%s: only one non-standard extension is supported", extension_33);
exit (1);

=======is loop:1=========

 bb index 20 
<bb 20> [10.98%]:
extension_35 = subset_27;
riscv_add_subset (subset_27);
_36 = strlen (subset_27);
p_37 = p_25 + _36;
free (subset_27);
goto <bb 28> (<L3>); [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [84.02%]:
_38 = *p_25;
if (_38 == 95)
  goto <bb 22>; [34.00%]
else
  goto <bb 23>; [66.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [28.57%]:
p_39 = p_25 + 1;
goto <bb 28> (<L3>); [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [55.45%]:
_40 = *p_25;
_41 = (int) _40;
all_subsets_43 = strchr (all_subsets_42, _41);
if (all_subsets_43 != 0B)
  goto <bb 24>; [53.47%]
else
  goto <bb 25>; [46.53%]

=======is loop:1=========

 bb index 24 
<bb 24> [29.65%]:
_44 = *p_25;
subset[0] = _44;
subset[1] = 0;
riscv_add_subset (&subset);
all_subsets_45 = all_subsets_43 + 1;
p_46 = p_25 + 1;
subset ={v} {CLOBBER};
goto <bb 28> (<L3>); [100.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [25.80%]:
_47 = *p_25;
if (_47 == 113)
  goto <bb 26>; [99.96%]
else
  goto <bb 27>; [0.04%]

=======is loop:1=========

 bb index 26 
<bb 26> [25.79%]:
_48 = *p_25;
subset[0] = _48;
subset[1] = 0;
riscv_add_subset (&subset);
p_49 = p_25 + 1;
subset ={v} {CLOBBER};
goto <bb 28> (<L3>); [100.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [0.01%]:
_50 = *p_25;
_51 = (int) _50;
_52 = __printf_chk (1, "-march=%s: unsupported ISA subset `%c\'", _51);
exit (1);

=======is loop:1=========

 bb index 28 
# all_subsets_57 = PHI <all_subsets_42(20), all_subsets_42(22), all_subsets_45(24), all_subsets_43(26)>
# extension_58 = PHI <extension_35(20), extension_33(22), extension_33(24), extension_33(26)>
# p_59 = PHI <p_37(20), p_39(22), p_46(24), p_49(26)>
<L3> [94.99%]:

=======is loop:1=========

 bb index 29 
<bb 29> [100.00%]:
# all_subsets_42 = PHI <all_subsets_54(9), all_subsets_57(28)>
# extension_33 = PHI <extension_55(9), extension_58(28)>
# p_25 = PHI <p_56(9), p_59(28)>
_53 = *p_25;
if (_53 != 0)
  goto <bb 14>; [95.00%]
else
  goto <bb 30>; [5.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [5.90%]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 3>; [85.00%]
else
  goto <bb 31>; [15.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [0.89%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 7 [0m
[40;34m    used_stmt array stack totalsize of : 2824 [0m
[40;34m    collect time: : 0.000273 s [0m
[40;34m    algorithm time: 0.038410 s [0m
[40;34m    gimple stmt count : : 90 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
